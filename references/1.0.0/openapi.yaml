openapi: 3.0.2
info: {title: Payments, description: This API Specification is designed to provide
    technical guidance required to consume and integrate with our APIs for payment
    processing., version: v1-1.0.2}
servers:
- {url: 'https://prod.api.fiservapps.com/ch/', description: Production}
- {url: 'https://test.api.fiservapps.com/ch/', description: Sandbox}
paths:
  /payments/v1/charges:
    x-model-version: 1.0
    post:
      tags: [Payment Endpoint Definition]
      x-group-name: Payments
      x-proxy-name: Charges
      summary: Submit a charge transaction.
      description: Use this payload to originate a financial transaction based on
        the <code>captureFlag</code> False (Auth) or True (Sale). A sale will authorize
        and charge (withdrawal) the customer funds. An auth (pre-authorization) will
        hold the customer funds and will need to be captured to settle (withdrawal)
        the funds.
      requestBody:
        required: true
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ChargesRequest'}
            examples:
              PaymentCard: {summary: ChargesRequest with PaymentCard, $ref: '#/components/examples/PaymentCardRequest'}
              PaymentEMV: {summary: ChargesRequest with PaymentEMV, $ref: '#/components/examples/PaymentEMVRequest'}
              PaymentTrack: {summary: ChargesRequest with PaymentTrack, $ref: '#/components/examples/PaymentTrackRequest'}
              ManualEntry: {summary: ChargesRequest with manual entry PaymentCard,
                $ref: '#/components/examples/ManualEntryRequest'}
              ApplePay: {summary: ChargesRequest with ApplePay, $ref: '#/components/examples/ApplePayRequest'}
              GooglePay: {summary: ChargesRequest with GooglePay, $ref: '#/components/examples/GooglePayRequest'}
              Payment3DS: {summary: ChargesRequest with Payment3DS, $ref: '#/components/examples/Payment3DSRequest'}
              PaymentToken: {summary: ChargesRequest with PaymentToken, $ref: '#/components/examples/PaymentTokenRequest'}
      responses:
        201:
          description: Created
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ChargesResponse'}
              examples:
                PaymentCard: {summary: ChargesResponse with PaymentCard, $ref: '#/components/examples/PaymentCardChargesResponse'}
                PaymentEMV: {summary: ChargesResponse with PaymentEMV, $ref: '#/components/examples/PaymentEMVChargesResponse'}
                PaymentTrack: {summary: ChargesResponse with PaymentTrack, $ref: '#/components/examples/PaymentTrackChargesResponse'}
                ManualEntry: {summary: ChargesResponse with manual entry PaymentCard,
                  $ref: '#/components/examples/ManualEntryChargesResponse'}
                ApplePay: {summary: ChargesResponse with ApplePay, $ref: '#/components/examples/ApplePayChargesResponse'}
                GooglePay: {summary: ChargesResponse with GooglePay, $ref: '#/components/examples/GooglePayChargesResponse'}
                Payment3DS: {summary: ChargesResponse with Payment3DS, $ref: '#/components/examples/Payment3DSChargesResponse'}
                PaymentToken: {summary: ChargesResponse with PaymentToken, $ref: '#/components/examples/PaymentTokenChargesResponse'}
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /payments/v1/charges/{transactionId}/capture:
    x-model-version: 1.0
    post:
      tags: [Capture Endpoint Definition]
      x-group-name: Payments
      x-proxy-name: Capture
      summary: Submit a capture transaction.
      description: Use this payload to capture a previous pre-authorized transaction
        (aka post-authorization). This will settle (withdrawal) funds from the customer.
      requestBody:
        required: true
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CaptureRequest'}
            examples:
              Capture: {summary: CaptureRequest, $ref: '#/components/examples/SecondaryRequest'}
      parameters:
      - {$ref: '#/components/parameters/TransactionIdParam'}
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      responses:
        201:
          description: Created
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CaptureResponse'}
              examples:
                Capture: {summary: CaptureResponse, $ref: '#/components/examples/CaptureResponse'}
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
  /payments/v1/charges/{transactionId}/cancel:
    x-model-version: 1.0
    post:
      tags: [Cancel Endpoint Definition]
      x-group-name: Payments
      x-proxy-name: Cancel
      summary: Submit a cancel transaction.
      description: Use this payload to perform cancel a transaction (aka void).
      requestBody:
        required: true
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CancelRequest'}
            examples:
              Cancel: {summary: CancelRequest, $ref: '#/components/examples/SecondaryRequest'}
      parameters:
      - {$ref: '#/components/parameters/TransactionIdParam'}
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      responses:
        200:
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CancelResponse'}
              examples:
                Cancel: {summary: CancelResponse, $ref: '#/components/examples/CancelResponse'}
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
  /payments/v1/charges/{transactionId}/refund:
    x-model-version: 1.0
    post:
      tags: [Refund Endpoint Definition]
      x-group-name: Payments
      x-proxy-name: Refund
      summary: Submit a refund transaction.
      description: Use this payload to perform a partial or full refund (aka credit/return).
        This will return funds to the customer.
      requestBody:
        required: true
        content:
          application/json:
            schema: {$ref: '#/components/schemas/RefundRequest'}
            examples:
              Refund: {summary: RefundRequest, $ref: '#/components/examples/SecondaryRequest'}
      parameters:
      - {$ref: '#/components/parameters/TransactionIdParam'}
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      responses:
        201:
          description: Created
          content:
            application/json:
              schema: {$ref: '#/components/schemas/RefundResponse'}
              examples:
                Refund: {summary: RefundResponse, $ref: '#/components/examples/RefundResponse'}
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
  /payments-vas/v1/accounts/verification:
    x-model-version: 1.0
    post:
      tags: [Account  Verification Endpoint Definition]
      x-group-name: Payments VAS
      x-proxy-name: Verification
      summary: Verify a payment card or payment token.
      description: Use this payload to perform an account verification for a payment
        card or payment token. This will check the validity and respond if an account
        is valid or not.
      requestBody:
        required: true
        content:
          application/json:
            schema: {$ref: '#/components/schemas/AccountVerificationRequest'}
            examples:
              PaymentCard: {summary: AccountVerificationRequest with PaymentCard,
                $ref: '#/components/examples/PaymentCardVerifyRequest'}
              PaymentEMV: {summary: AccountVerificationRequest with PaymentEMV, $ref: '#/components/examples/PaymentEMVVerifyRequest'}
              PaymentTrack: {summary: AccountVerificationRequest with PaymentTrack,
                $ref: '#/components/examples/PaymentTrackVerifyRequest'}
              ManualEntry: {summary: AccountVerificationRequest with manual entry
                  PaymentCard, $ref: '#/components/examples/ManualEntryVerifyRequest'}
              PaymentToken: {summary: AccountVerificationRequest with PaymentToken,
                $ref: '#/components/examples/PaymentTokenVerifyRequest'}
      responses:
        201:
          description: Created
          content:
            application/json:
              schema: {$ref: '#/components/schemas/AccountVerificationResponse'}
              examples:
                PaymentCard: {summary: AccountVerificationResponse with PaymentCard,
                  $ref: '#/components/examples/PaymentCardVerifyResponse'}
                PaymentEMV: {summary: AccountVerificationResponse with PaymentEMV,
                  $ref: '#/components/examples/PaymentEMVVerifyResponse'}
                PaymentTrack: {summary: AccountVerificationResponse with PaymentTrack,
                  $ref: '#/components/examples/PaymentTrackVerifyResponse'}
                ManualEntry: {summary: AccountVerificationResponse with manual entry
                    PaymentCard, $ref: '#/components/examples/ManualEntryVerifyResponse'}
                PaymentToken: {summary: AccountVerificationResponse with PaymentToken,
                  $ref: '#/components/examples/PaymentTokenVerifyResponse'}
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /payments-vas/v1/tokens:
    x-model-version: 1.0
    post:
      x-group-name: Payments VAS
      x-proxy-name: Tokenization
      summary: Create a payment token.
      description: Use this payload to create a payment token from a payment source.
      requestBody:
        required: true
        content:
          application/json:
            schema: {$ref: '#/components/schemas/TokenizationRequest'}
            examples:
              PaymentCard: {summary: TokenizationRequest with PaymentCard, $ref: '#/components/examples/PaymentCardTokenRequest'}
              PaymentEMV: {summary: TokenizationRequest with PaymentEMV, $ref: '#/components/examples/PaymentEMVTokenRequest'}
              PaymentTrack: {summary: TokenizationRequest with PaymentTrack, $ref: '#/components/examples/PaymentTrackTokenRequest'}
              ManualEntry: {summary: TokenizationRequest with manual entry PaymentCard,
                $ref: '#/components/examples/ManualEntryTokenRequest'}
              ApplePay: {summary: TokenizationRequest with ApplePay, $ref: '#/components/examples/ApplePayTokenRequest'}
              GooglePay: {summary: TokenizationRequest with GooglePay, $ref: '#/components/examples/GooglePayTokenRequest'}
              Payment3DS: {summary: TokenizationRequest with Payment3DS, $ref: '#/components/examples/Payment3DSTokenRequest'}
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema: {$ref: '#/components/schemas/TokenizationResponse'}
              examples:
                PaymentCard: {summary: TokenizationResponse with PaymentCard, $ref: '#/components/examples/PaymentCardTokenResponse'}
                PaymentEMV: {summary: TokenizationResponse with PaymentEMV, $ref: '#/components/examples/PaymentEMVTokenResponse'}
                PaymentTrack: {summary: TokenizationResponse with PaymentTrack, $ref: '#/components/examples/PaymentTrackTokenResponse'}
                ManualEntry: {summary: TokenizationResponse with manual entry PaymentCard,
                  $ref: '#/components/examples/ManualEntryTokenResponse'}
                ApplePay: {summary: TokenizationResponse with ApplePay, $ref: '#/components/examples/ApplePayTokenResponse'}
                GooglePay: {summary: TokenizationResponse with GooglePay, $ref: '#/components/examples/GooglePayTokenResponse'}
                Payment3DS: {summary: TokenizationResponse with Payment3DS, $ref: '#/components/examples/Payment3DSTokenResponse'}
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /daas/v1/enhanceddata:
    x-model-version: 1.0
    post:
      tags: [Enhanced Data Definition]
      x-group-name: DaaS
      x-proxy-name: Enhanced Data Service
      summary: Submit a EDS Request.
      description: Use this payload prior to a transaction to perform an Enhanced
        Data Service request for a payment card or payment token. This will be used
        by the issuer to make a more informed authorization decision.
      requestBody:
        required: true
        content:
          application/json:
            schema: {$ref: '#/components/schemas/EnhancedDataServiceRequest'}
            examples:
              PaymentCard: {summary: EDSRequest with PaymentCard, $ref: '#/components/examples/PaymentCardEDSRequest'}
              PaymentToken: {summary: EDSRequest with PaymentToken, $ref: '#/components/examples/PaymentTokenEDSRequest'}
      responses:
        201:
          description: Created
          content:
            application/json:
              schema: {$ref: '#/components/schemas/EnhancedDataServiceResponse'}
              examples:
                PaymentCard: {summary: EDSResponse with PaymentCard, $ref: '#/components/examples/PaymentCardEDSResponse'}
                PaymentToken: {summary: EDSResponse with PaymentToken, $ref: '#/components/examples/PaymentTokenEDSResponse'}
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /daas/v1/returnoptimizer:
    x-model-version: 1.0
    post:
      tags: [Return Optimizer Definition]
      x-group-name: DaaS
      x-proxy-name: Return Optimizer Service
      summary: Submit a return optimizer request.
      description: Use this payload prior to a transaction to perform an Return Optimizer
        request for a payment card or payment token. This will be used by the issuer
        to make a more informed authorization decision.
      requestBody:
        required: true
        content:
          application/json:
            schema: {$ref: '#/components/schemas/ReturnOptimizerRequest'}
            examples:
              PaymentCard: {summary: ReturnOptimizerRequest with PaymentCard, $ref: '#/components/examples/PaymentCardEDSRequest'}
              PaymentToken: {summary: ReturnOptimizerRequest with PaymentToken, $ref: '#/components/examples/PaymentTokenEDSRequest'}
      responses:
        201:
          description: Created
          content:
            application/json:
              schema: {$ref: '#/components/schemas/ReturnOptimizerResponse'}
              examples:
                PaymentCard: {summary: ReturnOptimizerResponse with PaymentCard, $ref: '#/components/examples/PaymentCardEDSResponse'}
                PaymentToken: {summary: ReturnOptimizerResponse with PaymentToken,
                  $ref: '#/components/examples/PaymentTokenEDSResponse'}
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
components:
  parameters:
    OrderIdParam:
      x-model-version: 1.0
      name: orderId
      schema: {type: string}
      in: path
      required: true
      description: Use this to perform secondary transaction, received from primary
        auth or sale.
    TransactionIdParam:
      x-model-version: 1.0
      name: transactionId
      schema: {type: string}
      in: path
      required: true
      description: Use this to perform secondary transaction, received from primary
        auth or sale.
    WalletTypeParam:
      x-model-version: 1.0
      name: walletType
      schema: {type: string}
      in: path
      required: true
      description: |
        Wallet type for which the keypair is to be generated.

        Valid Values:
        * ApplePay
        * SamsungPay
    AuthorizationTokenTypeHeader:
      x-model-version: 1.0
      name: Auth-Token-Type
      schema: {type: string}
      in: header
      required: true
      description: Indicates authorization type HMAC, JWT, or AccessToken.
    AuthorizationHeader:
      x-model-version: 1.0
      name: Authorization
      schema: {type: string}
      in: header
      required: true
      description: Authorization header used to ensure the request has not been tampered
        with during transmission. Valid encryption; HMAC, JWT, or AccessToken. For
        more information, refer to the supporting documentation on the Developer Portal.
    MessageDigestHeader:
      x-model-version: 1.0
      name: Message-Digest
      schema: {type: string}
      in: header
      required: false
      description: Needed only from customer browser or app to the API in Hosted Payment
        Page requests.
    AcceptLanguageHeader:
      x-model-version: 1.0
      name: Accept-Language
      schema: {type: string}
      in: header
      required: false
      description: The Accept Language header contains information about the language
        preference of a user. This HTTP header is useful to multilingual sites for
        deciding the best language to serve to the client. For example en-US or fr-CA.
    ContentTypeHeader:
      x-model-version: 1.0
      name: Content-Type
      schema:
        type: string
        enum: [application/json]
        default: application/json
      in: header
      required: true
      description: The content type. Valid value (application/json).
    ClientRequestIdHeader:
      x-model-version: 1.0
      name: Client-Request-Id
      schema: {type: string}
      in: header
      required: true
      description: A client-generated ID for request tracking and signature creation,
        unique per request. This is also used for idempotency control. Recommended
        128-bit UUID format.
    TimestampHeader:
      x-model-version: 1.0
      name: Timestamp
      schema: {type: integer, format: int64}
      in: header
      required: true
      description: Epoch timestamp in milliseconds in the request from a client system.
        Used for authorization header generation and time limit (5 minutes).
    ApiKeyHeader:
      x-model-version: 1.0
      name: Api-Key
      schema: {type: string}
      in: header
      required: true
      description: API key provided to the merchant associating the requests with
        the appropriate app in the Developer Portal.
  responses:
    BadRequest:
      x-model-version: 1.0
      description: The request cannot be validated.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: GATEWAY, code: '105', field: amount.currency, message: Invalid
                amount or currency}
    Unauthorized:
      x-model-version: 1.0
      description: The request was unauthorized.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: ApiKey and/or Authentication supplied are invalid.}
    NotFound:
      x-model-version: 1.0
      description: The requested resource does not exist.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Resource not found.}
    RequestTimeout:
      x-model-version: 1.0
      description: The request was timed out due to not receiving the request in time.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Broken client connectivity.}
    UnsupportedMediaType:
      x-model-version: 1.0
      description: The media type is not supported.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Media type is not supported.}
    TooEarly:
      x-model-version: 1.0
      description: The request was sent too early.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: GATEWAY, message: The request was sent too early.}
    TooManyRequest:
      x-model-version: 1.0
      description: Too many request were sent.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Request volume is too high.}
    ServerError:
      x-model-version: 1.0
      description: An unexpected internal server error occurred.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: GATEWAY, message: Error sending request to Transarmor.}
    ServiceUnavailable:
      x-model-version: 1.0
      description: The service was unavailable.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: APIM, message: Service unavailable.}
    GatewayTimeout:
      x-model-version: 1.0
      description: The request timed out while waiting for a response.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: GATEWAY, message: The request timed out while waiting for the
                  response.}
  schemas:
    ErrorResponse:
      x-model-version: 1.0
      description: Response containing an error object.
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        error:
          type: array
          items: {$ref: '#/components/schemas/Error'}
    Error:
      x-model-version: 1.0
      description: Error information.
      properties:
        type: {description: 'The type of response either from the HOST, GATEWAY, NETWORK,
            or APIM.', type: string, example: HOST}
        code: {description: 'Error response code from the host, gateway or network.',
          type: string}
        field: {description: The property or attribute associated with the error.,
          type: string, example: source.sourceType}
        message: {description: Information specific to a property or attribute., type: string,
          example: Missing type ID property.}
        additionalInfo: {description: Additional info added by commerce hub in addition
            to error message returned by GATEWAY, type: string, example: 'The Reauthorization
            request was not successful and the Cancel of referenced authorization
            transaction was not processed, per Auth_before_Cancel configuration'}
    GatewayResponse:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Gateway-Response.md">gateway
        response</a> details.
      properties:
        transactionType: {type: string, maxLength: 256, description: Transaction type
            performed., example: CHARGE}
        transactionState: {type: string, maxLength: 256, description: Final state
            of the transaction., example: AUTHORIZED}
        transactionOrigin: {type: string, maxLength: 4, description: Transaction origin
            based on original request., example: ECOM}
        transactionProcessingDetails: {$ref: '#/components/schemas/TransactionProcessingDetails'}
    TransactionProcessingDetails:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Gateway-Response.md#transaction-processing-details">transaction
        response</a> details.
      properties:
        orderId: {type: string, maxLength: 40, description: Order identifier returned
            in the parameter orderId from a Charge transaction., example: R-3b83fca8-2f9c-4364-86ae-12c91f1fcf16}
        transactionTimestamp: {type: string, format: date-time, description: 'Date
            and time the transaction occurred in YYYY-MM-DDThh:mm:ssZ format.', example: '2016-04-16T16:06:05Z'}
        apiTraceId: {pattern: '^[a-f0-9]{32}$', type: string, maxLength: 32, description: Request
            identifier in API that can be used to request logs from the support team.,
          example: 1234567a1234567b1234567c1234567d}
        clientRequestId: {type: string, maxLength: 64, description: Echoes back the
            value in the request header for tracking., example: 30dd879c-ee2f-11db-8314-0800200c9a66}
        transactionId: {type: string, maxLength: 40, description: Unique identifier
            for each transaction on the gateway. This value will be populated for
            the secondary transaction from the path., example: '838916029301'}
    ChargesRequest:
      x-model-version: 1.0
      properties:
        amount: {$ref: '#/components/schemas/Amount'}
        source: {$ref: '#/components/schemas/Source'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        dynamicDescriptors: {$ref: '#/components/schemas/DynamicDescriptors'}
        billingAddress: {$ref: '#/components/schemas/BillingAddress'}
        shippingAddress: {$ref: '#/components/schemas/ShippingAddress'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        customer: {$ref: '#/components/schemas/Customer'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
    Phone:
      x-model-version: 1.0
      description: Customer <a href="../docs?path=docs/Resources/Master-Data/Customer-Details.md">phone</a>
        information.
      properties:
        countryCode: {type: string, maxLength: 4, description: ISO country code.,
          example: '91'}
        phoneNumber: {type: string, maxLength: 15, description: Contact phone number.,
          example: 123-123-1234}
        type:
          type: string
          maxLength: 16
          description: |
            Indicates the type of phone number.

            Valid Values:
            * DAY
            * HOME
            * NIGHT
            * WORK
            * MOBILE
          example: DAY
    Address:
      x-model-version: 1.0
      description: Model for <a href="../docs?path=docs/Resources/Master-Data/Address.md">address</a>
        information.
      properties:
        street: {type: string, maxLength: 256, description: Street address., example: 123
            Main Street}
        houseNumberOrName: {type: string, maxLength: 256, description: 'Secondary
            address information, e.g. house number or name.', example: Apt 213}
        recipientNameOrAddress: {type: string, maxLength: 256, description: 'Tertiary
            address information e.g. recipient name, company name or address.', example: 'ATTN:
            Accounting Dept'}
        city: {type: string, maxLength: 256, description: City or locality., example: Sandy
            Springs}
        stateOrProvince: {type: string, maxLength: 256, description: State or province.,
          example: GA}
        postalCode: {type: string, maxLength: 10, description: ZIP code or postal
            code., example: 30303-0001}
        country: {type: string, maxLength: 256, description: 'ISO-3166-1 alpha-2,
            alpha-3, numeric or full country name.', example: US}
        county: {type: string, maxLength: 256, description: 'The 5-digit number or
            full county name identifying the U.S. county as defined by FIPS, indicating
            where the transaction occurred. Commonly used with EBT transactions.',
          example: '13121'}
        addressHistory:
          type: string
          maxLength: 32
          description: |
            Update history of the address on file.

            Valid Values:
            * FIRST
            * LESS_THAN_30_DAYS
            * 30_60_DAYS
            * 60_90_DAYS
            * OVER_90_DAYS
          example: OVER_90_DAYS
    Amount:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Amount-Components.md">Amount</a>
        object to support the request for payment.
      properties:
        total: {type: number, maximum: 1.0E18, description: Sub-component values must
            add up to total amount., example: '13.50'}
        currency: {type: string, maxLength: 3, description: ISO 3 Currency Format.,
          example: USD}
    Source:
      x-model-version: 1.0
      description: Payment <a href="../docs?path=docs/Resources/Guides/Payment-Sources/Source-Type.md">source</a>
        details.
      required: [sourceType]
      discriminator: {propertyName: sourceType}
      properties:
        sourceType:
          type: string
          maxLength: 256
          description: |
            Payment source type for a transaction request.

            Valid Values:
            * <a href="../docs?path=docs/Online-Mobile-Digital/Wallets-AltPayments/Apple-Pay/Apple-Pay.md">ApplePay</a>
            * <a href="../docs?path=docs/Resources/Guides/Payment-Sources/Payment-Card.md">PaymentCard</a>
            * <a href="../docs?path=docs/Resources/API-Documents/Payments_VAS/Payment-Token.md">PaymentToken</a>
          example: PaymentCard
    PaymentCard:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          encryptionData: {$ref: '#/components/schemas/EncryptionData'}
          pinBlock: {$ref: '#/components/schemas/PinBlock'}
    Card:
      x-model-version: 1.0
      description: Common <a href="../docs?path=docs/Resources/Master-Data/Card.md">card</a>
        data for a transaction request and response.
      properties:
        cardData: {type: string, maxLength: 256, description: Card number or encrypted
            data., example: '4005550000000019'}
        nameOnCard: {type: string, maxLength: 256, description: Cardholder name.,
          example: Jane Smith}
        expirationMonth: {pattern: '^(0[1-9]|1[012])$', type: string, description: 2-digit
            expiration month., example: '05'}
        expirationYear: {pattern: '^[0-9]{4}$', type: string, maxLength: 4, description: 4-digit
            expiration year., example: '2035'}
        securityCode: {type: string, maxLength: 4, description: 'Card Security Code
            (CSC), Card Verification Data (CVD), Card Verification Number (CVN), Card
            Verification Value (CVV), Card Verification Code (CVC), Verification Code
            (V-code or V code), or Signature Panel Code (SPC).', example: '111'}
        securityCodeIndicator:
          type: string
          maxLength: 15
          description: |
            Indicates how the security code is passed.

            Valid Values:
            * NOT_SUPPORTED (Default)
            * PROVIDED
            * VALUE_ILLEGIBLE
            * NOT_AVAILABLE
          example: PROVIDED
        bin: {type: string, maxLength: 8, description: 'Bank Identification Number
            (BIN), the initial set of four to six numbers of the Primary Account Number
            (PAN). The BIN identifies the issuer and Level 2/3 qualifications.', example: '400555'}
        last4: {type: string, maxLength: 4, description: Contains the last four digits
            of the Primary Account Number (PAN)., example: '0019'}
        scheme: {type: string, maxLength: 256, description: Card brand., example: VISA}
        beginningBalance: {type: number, maximum: 1.0E18, description: Beginning card
            balance., example: '1.00'}
        endingBalance: {type: number, maximum: 1.0E18, description: Ending card balance.,
          example: '0.10'}
    EncryptionData:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Encryption-Data.md">Encrypted
        Data</a> for EMV, Track, or Manual Entry transactions.
      properties:
        encryptionType:
          type: string
          maxLength: 256
          description: |
            Encryption type to be passed.

            Valid Values:
            * RSA (Default)
            * VERIFONE
            * VERIFONE_VDR
            * AES_DUKPT
            * TDES_DUKPT
            * ON_GUARD
            * FPE
          example: RSA
        encryptionTarget: {type: string, maxLength: 256, description: 'Target can
            be TRACK_1, TRACK_2 (including EMV), BOTH (Track 1 and 2) or MANUAL.',
          example: TRACK_2}
        encryptionBlock: {type: string, maxLength: 2000, description: This field contains
            the track data or card number provided in encrypted form., example: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==}
        deviceType:
          type: string
          maxLength: 256
          description: |
            Device type need to be sent for TDES and AES encrypted track data.

            Valid values:
            * INGENICO (Default)
            * RPXXX
            * CLOVER
            * NCR
            * NCRTLV
          example: INGENICO
        securitykeyUpdateIndicator: {type: boolean, description: 'Provided in response.
            POS is expected to download updated key, key cert.', example: 'false'}
        keyId: {type: string, maxLength: 40, description: Needs to be passed if track
            data is encrypted., example: '88000000022'}
        encryptedKey: {type: string, maxLength: 2000, description: Merchant or device
            defined encryption key required for decryption of encrypted <code>cardData</code>.
            Normally used in card not present integrations e.g. Mobile device., example: NdCmVw5}
    PinBlock:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Pin-Block.md">Encrypted
        PIN Block</a> for Debit, EBT, or Credit transactions.
      properties:
        encryptedPin: {type: string, maxLength: 2000, description: 'This field contains
            the Encrypted PIN Block for Debit, EBT, Fleet or Credit transactions.',
          example: F5f36kA...}
        keySerialNumber: {type: string, maxLength: 256, description: 'This field is
            used to create the base PIN encryption key for DUKPT PIN Debit, EBT, Fleet
            and Credit Transactions.', example: 15f36kA...}
        pinEncryptionWorkingKey: {type: string, maxLength: 2000, description: Terminal
            PIN Encryption working key (TKPE). A PIN Encryption Key is a used to protect
            PINs as they are transmitted., example: A23f36kA...}
    PaymentEMV:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          emvData: {type: string, description: EMV/Chip data is a series of "Tag/Length/Value"
              combination for chip card processing., example: 0249F3704833A12329F1002AB34}
          encryptionData: {$ref: '#/components/schemas/EncryptionData'}
          pinBlock: {$ref: '#/components/schemas/PinBlock'}
    PaymentTrack:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          encryptionData: {$ref: '#/components/schemas/EncryptionData'}
          pinBlock: {$ref: '#/components/schemas/PinBlock'}
          track1Data: {type: string, maxLength: 79, description: 'Information such
              as the Expiration Date, Primary Account Number, etc. encoded on Track
              1 magnetic stripe.', example: '%B4445222299990007^LAST/FIRST^14125025432198712345Q?'}
          track2Data: {type: string, maxLength: 40, description: 'Information such
              as the Expiration Date, Primary Account Number, etc. encoded on Track
              2 magnetic stripe.', example: ';4445222299990007=14125025432198712345?'}
    PaymentToken:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          tokenData: {type: string, maxLength: 2048, description: Token created from
              the payment source., example: '1234123412340019'}
          PARId: {type: string, maxLength: 256, description: Payment Account Reference
              ID (PARID) for tokens. Ties transactions with multiple payment sources
              or tokens to a customer.}
          declineDuplicates: {type: boolean, description: Identifies if a duplicate
              create token should be rejected when one has already been created for
              the payment source., example: false}
          tokenSource: {type: string, maxLength: 256, description: Source for the
              Token Service Provider (TSP)., example: TRANSARMOR}
          card: {$ref: '#/components/schemas/Card'}
    PaymentSession:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          sessionId: {type: string, maxLength: 64, description: Session ID for the
              card captured., example: 123e4567-e89b-12d3-a456-556642440000}
    ApplePay:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        description: Apple Pay source.
        properties:
          data: {type: string, maxLength: 4000, description: 'Encrypted data. Payment
              data dictionary, base64 encoded as a string.', example: hbreWcQg980mUoUCfuCoripnHO210lvtizOFLV6PTw1DjooSwik778bH/qgK2pKelDTiiC8eXeiSwSIfrTPp6tq9x8Xo2H0KYAHCjLaJtoDdnjXm8QtC3m8MlcKAyYKp4hOW6tcPmy5rKVCKr1RFCDwjWd9zfVmp/au8hzZQtTYvnlje9t36xNy057eKmA1Bl1r9MFPxicTudVesSYMoAPS4IS+IlYiZzCPHzSLYLvFNiLFzP77qq7B6HSZ3dAZm244v8ep9EQdZVb1xzYdr6U+F5n1W+prS/fnL4+PVdiJK1Gn2qhiveyQX1XopLEQSbMDaW0wYhfDP9XM/+EDMLaXIKRiCtFry9nkbQZDjr2ti91KOAvzQf7XFbV+O8i60BSlI4/QRmLdKHmk/m0rDgQAoYLgUZ5xjKzXpJR9iW6RWuNYyaf9XdD8s2eB9aBQ=}
          header: {$ref: '#/components/schemas/AppleHeader'}
          signature: {type: string, maxLength: 4000, description: 'Signature of the
              payment and header data. The signature includes the signing certificate,
              its intermediate CA certificate, and information about the signing algorithm.
              Detached PKCS #7 signature, base64 encoded as string.', example: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFSMIIBTgIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTkwNjA3MTg0MTIxWjAvBgkqhkiG9w0BCQQxIgQg0PLaZU4YWZqtP9t/ygv9XIS/5ngU6FlGjpvyK6VFXVMwCgYIKoZIzj0EAwIERjBEAiBTNmQEPyc3aMm4Mwa0riD3dNdSc9aAhslj65Us8b3aKwIgNSc/y+CWpsr8qDln0fZK6ZD/LWPMxofQedlPy7Q6gY8AAAAAAAA=}
          version: {type: string, maxLength: 64, description: 'Specific protocol version
              supported by Apple. Version information about the payment token. The
              token uses EC_v1 for ECC-encrypted data, and RSA_v1 for RSA-encrypted
              data.', example: EC_v1}
          applicationData: {type: string, maxLength: 4000, description: 'Hash of the
              applicationData property of the original PKPaymentRequest object. If
              the value of that property is null, this key is omitted. SHA–256 hash
              hex encoded as a string.', example: VEVTVA==}
          applePayMerchantId: {type: string, maxLength: 256, description: Unique AppID
              registered in the Apple portal., example: merchant.com.fapi.tcoe.applepay}
          merchantPrivateKey: {type: string, maxLength: 256, description: Merchant
              private key in hex encoded format., example: MHcCAQEE234234234opsmasdsalsamdsad/asdsad/asdasd/asdAwEHoUQDQgAaslkdsad8asjdnlkm23leu9jclaskdas/masr4+/as34+4fh/sf64g/nX35fs5w==}
    AppleHeader:
      x-model-version: 1.0
      description: Additional version-dependent information used to decrypt and verify
        the payment.
      properties:
        applicationDataHash: {type: string, maxLength: 256, description: Encrypted
            app data., example: 94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2}
        ephemeralPublicKey: {type: string, maxLength: 256, description: 'Used to derive
            the actual public key. Ephemeral public key bytes. EC_v1 only. X.509 encoded
            key bytes, base64 encoded as a string.', example: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEvR+anQg6pElOsCnC3HIeNoEs2XMHQwxuy9plV1MfRRtIiHnQ6MyOS+1FQ7WZR2bVAnHFhPFaM9RYe7/bynvVvg==}
        publicKeyHash: {type: string, maxLength: 256, description: 'Hash of the X.509
            encoded public key bytes of the merchant’s certificate. SHA–256 hash,
            base64 encoded as a string.', example: KRsyW0NauLpN8OwKr+yeu4jl6APbgW05/TYo5eGW0bQ=}
        transactionId: {type: string, maxLength: 256, description: Transaction ID
            generated by the Apple device. A hexadecimal identifier as a string.,
          example: '31323334353637'}
    GooglePay:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        description: Google Pay source.
        properties:
          data: {type: string, maxLength: 4000, description: 'Encrypted data. Payment
              data dictionary, base64 encoded as a string.', example: '{"encryptedMessage":"NZF5Vs2YaI/t25L/1+dp6tuUOvra9pszs2antqcbHJbkjMMXZSR7innTFJxNR5DNnf4GheWIso8n8MA1q1zqWCU8MaK9bnNcHxvROpvfsU3SCCjkfG2k2M4/RYMjs+lxYW/nEtIIKVVOkdjAj4pI/Wth8xQXphn7hDNiyp9tIydmlPZVnzkXI6mVbpHbbkaCCD4TNPhFBDtx0VafqRjbb2Wt3EDazTx3dHdd+qVX5Xj8/BPb1cmwHWvrDw/dQRk/E0TsP+erLjhLaZ8l2EycxeUEZYqSX5w77S8vd3sw8WXuOCMsU8sx0Bs5IY7hohq67qNDxckP1fcBD4OYdGP6bumJR0J6pJxD5iRh5lFSjN6zNLRI77ylxWL6DwHoe/pPdCc0n6cV0Nt0RJMLjerr12BLuhv4bPQ3QB6jxnbt8JK/EndgIG8xpFyNkKlRUyxAKM22/ZSy45d6qtZIKLXRqDTr9JMk8uJ53QRZtQx8k9KkRZGC+GM2sD+Z75fxc0Yye7l6H0D8p5z1iEzWnYHxd0pmY/cOYEJxnOOdD573QmE6ikFcyaAw3XnCyul/EA\u003d\u003d","ephemeralPublicKey":"BAhnPIWrCXWv/45GFK0mNAvN9w+NFBs3tQji0wTUS2+hiFKsZujG5wRd4JXGmxhG+k3bglYk544ILBNdDpsAh+o\u003d","tag":"liBzKfGcO+FclHg7XuqRJxR/8EJShRp9/APab0Sho08\u003d"}'}
          signature: {type: string, maxLength: 1500, description: 'Verifies that the
              message came from Google, base64 encoded, and created with ECDSA by
              the intermediate signing key.', example: MEUCIFWTRWUZAOM5nfJC79FtJm56olnbwG4H5uWWxAUWAquiAiEA24j/BcOroeISsdJzYsyoVi8wzu4tnmKw+jdsGfuvPko=}
          version: {type: string, maxLength: 32, description: 'Specific protocol version
              supported by Google. Identifies the encryption or signing scheme under
              which the message is created. It allows the protocol to evolve over
              time, if needed.', example: ECv2}
          merchantId: {type: string, maxLength: 256, description: Single merchant
              identifier common for all Google Pay merchants., example: 676174657761793A666972737464617461}
          keyInfo:
            type: array
            items: {$ref: '#/components/schemas/KeyInfo'}
    KeyInfo:
      x-model-version: 1.0
      properties:
        merchantPrivateKey: {type: string, maxLength: 1024, description: 'Merchant
            private key, hex encoded.', example: DCEDF9AF72707BFD9C5231ECB9EAD040F3B4BA2AB608579736E37FDBA8884175566BDA410997B2575EA7E76AC54BBDB99DD0F74DD0A648BC0F6A2F06909E79A0F15D779F1A80CFC1EC9612476204C43A}
        signingVerificationKey: {type: string, maxLength: 1024, description: 'Signing
            verification key, base64 encoded.', example: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIsFro6K+IUxRr4yFTOTO+kFCCEvHo7B9IOMLxah6c977oFzX/beObH4a9OfosMHmft3JJZ6B3xpjIb8kduK4/A==}
    SamsungPay:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          data: {type: string, description: ''}
          version: {type: string, description: '100'}
          samsungPayMerchantId: {type: string, maxLength: 256, description: Unique
              AppID registered in the Samsung portal., example: merchant.com.futurex}
          merchantPrivateKey: {type: string, maxLength: 256, description: Merchant
              private key in hex encoded format., example: 2B939D88050A48885DC2FDD8BC1780CC0AF4DA741424A82A60579DB3F08C7DCF81B03E7A0EC28D6705705488FDEFF6DEC8E37D3C20E9C11B36C9D710C42D029831}
    Payment3DS:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        description: 3DSecure source.
        properties:
          card: {$ref: '#/components/schemas/Card'}
          merchantIdentifier: {type: string, maxLength: 256, description: A unique
              ID used to identify the merchant. The merchant must use the value assigned
              by the acquirer., example: '1234567890123456'}
          version: {type: string, maxLength: 64, description: Specific protocol version
              supported by 3DS., example: 3DS2}
          cavv: {type: string, maxLength: 256, description: The Cardholder Authentication
              Verification Value (CAVV) is a cryptographic value derived by the issuer
              during payment authentication that can provide evidence of the results
              of payment authentication during an online purchase., example: AAABCZIhcQAAAABZlyFxAAAAAAA}
          xid: {type: string, maxLength: 256, description: 3DSecure/Verified by Visa
              value returned by Cardinal Commerce., example: '&x_MD5_Hash=abfaf1d1df004e3c27d5d2e05929b529&x_state=BC&x_reference_3=&x_auth_code=ET141870&x_fp_timestamp=1231877695'}
          verificationResponse: {type: string, maxLength: 256, description: Verification
              response message., example: PASSED_VALIDATION}
          authenticationAttemptResult: {type: string, maxLength: 256, description: Result
              of authentication attempt from Payer Authentication Response (PaRes).,
            example: uyt45t89cnwu3rhc98a4hterjklth4o8ctsrjzth4}
          channel:
            type: string
            maxLength: 32
            description: "\nValid Values: \n* MOBILE_APP\n* MOBILE_WEB\n* BROWSER_PC\n\
              * KIOSK\n* CONSOLE\n* 3DS_REQUESTOR_INITIATED\n"
    DecryptedWallet:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          cavv: {type: string, maxLength: 40, description: Cryptogram., example: 01ade6ae340005c681c3a1890418b53000020000}
          xid: {type: string, maxLength: 40, description: Cryptogram.}
          walletType: {type: string, maxLength: 256, description: 'Identifies the
              wallet as APPLE_PAY, GOOGLE_PAY, or SAMSUNG_PAY.', example: APPLE_PAY}
    TransactionDetails:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Transaction-Details.md">Transaction
        details</a> specific to each request based on business requirements.
      properties:
        approvalCode: {type: string, description: Reference number received as the
            result of a successful external authorization (e.g. by phone). The gateway
            needs this number for uniquely mapping a ForcedTicket transaction to a
            previously performed external authorization.}
        primaryTransactionId: {type: string, maxLength: 40, description: The unique
            identifier from the original transaction passed for a reauthorization
            and incremental authorization., example: '838916029301'}
        captureFlag: {type: boolean, description: Designates if the transaction should
            be captured. Auth (False) or Sale (True)., example: true}
        transactionCaptureType: {type: string, description: Identifies if settlement
            was Host capture or Terminal capture., maxLength: 64, example: TCS}
        accountVerification: {type: boolean, description: Determines if verification
            should be performed on the payment type., example: 'false'}
        partialApproval:
          type: string
          maxLength: 32
          description: |
            Indicates if a partial approval is allowed.

            Valid Values:
            * NOT_SUPPORTED - Partial authorization approvals are not supported
            * SUPPORTED_NO_CASH_BACK - Partial authorization approvals are supported, however partial authorization of cash disbursement amount is not supported. POS/Terminal should not prompt for cash back.
            * MERCH_CASH_BACK_SUPPORTED - Merchandise can be partially authorized, and cash disbursement amount can be partially authorized.
            * MERCH_SUPPORTED_ONLY - Merchandise can be partially authorized, but the cash disbursement amount cannot be partially authorized.
            * CASH_BACK_SUPPORTED_ONLY - Merchandise cannot be partially authorized, but the cash disbursement amount can be partially authorized.
            * MERCH_CASH_BACK_NOT_SUPPORTED - Merchandise cannot be partially authorized and the cash disbursement amount cannot be partially authorized.
          example: NOT_SUPPORTED
        processingCode:
          type: string
          maxLength: 6
          description: |
            A required <a href=../docs/Resources/Master-Data/Processing-Code.md>code</a> is used in conjunction with the message type to define the type of transaction that is by the terminal to the host

            Code Format:
            * Position 1-2 Transaction Type
            * Position 3–4 From Account
            * Position 5–6 To Account
          example: '000000'
        merchantTransactionId: {type: string, maxLength: 32, description: Merchant
            transaction ID (aka transaction reference ID)., example: '1343678765'}
        merchantOrderId: {type: string, maxLength: 32, description: Merchant order
            ID (aka customer reference number or purchase order number)., example: 845366457890-TODO}
        merchantInvoiceNumber: {type: string, maxLength: 12, description: Merchant
            invoice number (aka reference number)., example: '123890'}
        receiptEmail: {type: string, maxLength: 256, description: Email address to
            send a digital receipt., example: abc@gmail.com}
        paymentDescription: {type: string, maxLength: 1024, description: Payment description.}
        cardVerificationAmount: {type: number, maximum: 1.0E18, description: Amount
            used to verify the transaction. Some issuers do not allow $0.00 authorizations.,
          example: '0.02'}
        partiallyApprovedTransactionAmount: {type: number, maximum: 1.0E18, description: The
            partially approved transaction amount from the original request., example: '10.55'}
        splitTenderId: {type: string, maxLength: 1024, description: A partially-authorized
            transaction will generate a split tender ID. Subsequent transactions to
            complete the authorization should include the split tender ID so that
            all the transactions comprising that authorization can be linked., example: '12423434'}
        authorizationTypeIndicator:
          type: string
          maxLength: 11
          description: |
            Type of authorization requested.

            Valid Values:
            * INITIAL
            * REAUTH
            * DEFERRED
            * INCREMENTAL
            * ESTIMATED
          example: REAUTH
        duplicateTransactionCheckingIndicator: {type: boolean, description: Determines
            if duplicate transactions should be checked., example: false}
        primaryTransactionType:
          type: string
          maxLength: 14
          description: |
            Identifies the primary transaction type.

            Valid Values:
            * AUTH_ONLY
            * CHARGE_PREAUTH
            * CHARGE_SALE
            * CANCEL
            * REFUND
          example: CHARGE_SALE
        vaultFundingSource: {type: boolean, description: Identifies if the customer
            information was from the vault., example: false}
        deviceFingerprint:
          type: array
          items: {$ref: '#/components/schemas/DeviceFingerPrint'}
        splitShipment: {$ref: '#/components/schemas/SplitShipment'}
        reversalReasonCode:
          type: string
          maxLength: 22
          description: "Reason the merchant/customer requests for cancel (void).\n\
            \              \nValid Values:\n* VOID\n* TIMEOUT\n* EDIT_ERROR\n* MAC_VERIFICATION_ERROR\n\
            * MAC_SYNCH_ERROR\n* ENCRYPTION_ERROR\n* SYSTEM_ERROR\n* SUSPECTED_FRAUD\n"
          example: VOID
        physicalGoodsIndicator: {type: boolean, description: Identifies if physical
            goods were sold., example: false}
        authorizationSequence:
          type: string
          maxLength: 27
          description: |
            Type of authorization sequence requested.

            Valid Values:
            * AUTHORIZATION_ONLY - (default)
            * AUTHORIZATION_BEFORE_CANCEL
            * CANCEL_BEFORE_AUTHORIZATION
          example: CANCEL_BEFORE_AUTHORIZATION
        createToken: {type: boolean, description: Used to create a token on a charge
            transaction., example: true}
        retrievalReferenceNumber: {type: string, maxLength: 12, description: 'Retrieval
            reference number can be any value based on the merchant’s choosing (e.g.
            sequential tracking of transactions, fixed value etc.) used for transaction
            retrieval from the networks.', example: 56004567}
    SplitShipment:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Guides/Split-Shipment.md">Split
        shipment</a> information.
      properties:
        totalCount: {type: integer, maximum: 99, description: Identifies the number
            of shipments if the transaction will contain multiple shipments. Can be
            set during pre-auth or the first post-auth., example: 5}
        finalShipment: {type: boolean, description: Identifies the final shipment.,
          example: false}
    DeviceFingerPrint:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Device-Fingerprint.md">Device
        fingerprint</a> details for mobile transactions.
      properties:
        provider: {type: string, maxLength: 256, description: Device authentication
            utilized., example: InAuth}
        dataCapture: {$ref: '#/components/schemas/DataCapture'}
        dataStatic: {$ref: '#/components/schemas/DataStatic'}
        dataDynamic: {$ref: '#/components/schemas/DataDynamic'}
    DataCapture:
      x-model-version: 1.0
      description: Data capture details.
      properties:
        rawData: {type: string, maxLength: 256, description: Raw data from the data
            capture., example: aaaaaXREUVZGRlFY...aMV}
        dataEventId: {type: string, maxLength: 256, description: Unique ID for the
            data capture., example: BB8E4E92...Fz1E063113}
        captureTime: {type: string, format: date-time, maxLength: 20, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
    DataStatic:
      x-model-version: 1.0
      description: Static data details.
      properties:
        operatingSystem: {type: string, maxLength: 256, description: Device operating
            system (OS)., example: ANDROID}
        operatingSystemVersion: {type: string, maxLength: 256, description: Device
            operating system (OS) version., example: 5.1.1 Lollipop}
        model: {type: string, maxLength: 256, description: Device model., example: XYX-1}
        type: {type: string, maxLength: 256, description: Device type/name., example: Moto
            G}
        deviceId: {type: string, maxLength: 48, description: MAC of the device originating
            the transaction., example: '00:1B:44:11:3A:B7'}
        javaScriptEnabled: {type: boolean, maxLength: 8, description: Indicates if
            the device has JavaScript enabled., example: 'true'}
        javaEnabled: {type: boolean, maxLength: 8, description: Indicates if the device
            has Java enabled., example: 'true'}
        userAgent: {type: string, description: 'User agent data from the user device,
            truncated to 2048 bytes.', example: 'Mozilla/5.0 (Windows NT 6.1; Win64;
            x64; rv:47.0) Gecko/20100101 Firefox/47.0'}
        locale: {type: string, maxLength: 8, description: Language/Region code of
            user in IETF BCP47 format., example: en-US}
    DataDynamic:
      x-model-version: 1.0
      description: Dynamic data details.
      properties:
        latitude: {type: string, maxLength: 256, description: Cardholder current latitude
            GPS position., example: 13.0827 N}
        longitude: {type: string, maxLength: 256, description: Cardholder current
            longitude GPS position., example: 80.2707 E}
        ipAddress: {type: string, maxLength: 39, description: Device IP address.,
          example: 172.27.37.221}
        captureTime: {type: string, format: date-time, maxLength: 20, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        address: {$ref: '#/components/schemas/Address'}
    OrderData:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Order-Data.md">Order
        data</a> can be used for merchant database tracking, improve authorization
        rates and reduce fraud.
      properties:
        orderDate: {type: string, format: date, maxLength: 10, description: 'Date
            that goods and services are ordered, in YYYY-MM-DD format.', example: '2020-11-20'}
        itemCount: {type: integer, description: Total number of items included in
            the purchase., example: '1'}
        itemDetails:
          type: array
          items: {$ref: '#/components/schemas/ItemDetails'}
        preOrder: {type: boolean, description: Identifies if the purchase is a preorder.,
          example: 'true'}
        preOrderDate: {type: string, format: date, maxLength: 10, description: 'Date
            that goods and services are pre-ordered, in YYYY-MM-DD format.', example: '2020-11-20'}
        reOrder: {type: boolean, description: Identifies if the purchase is a reorder.,
          example: 'false'}
        goodsSoldCode: {type: string, maxLength: 16, description: Indicates a specific
            type of goods. It is used to help identify potentially fraudulent sales.,
          example: GIFT_CARD}
        giftcardCount: {type: integer, maximum: 99, description: Total number of gift
            cards purchased., example: '1'}
        giftCardAmount: {$ref: '#/components/schemas/Amount'}
    ItemDetails:
      x-model-version: 1.0
      description: ''
      properties:
        categoryName: {type: string, maxLength: 8, description: ' ', example: ' '}
        itemCount: {type: integer, description: The item count in category., example: ' '}
        value: {type: string, maxLength: 32, description: ' ', example: The monetary
            value of items.}
    DynamicDescriptors:
      x-model-version: 1.0
      description: '<a href="../docs?path=docs/Resources/Guides/Dynamic-Descriptor.md">Dynamic
        descriptor</a> information about a merchant and appears on the customer statement.
        Note: This has limited platform availability. For more information, please
        contact your Account Representative.'
      properties:
        mcc: {type: string, maxLength: 4, description: Merchant Category Code (MCC).
            The MCC is an industry standard four-digit number used to classify a business
            by the type of goods or services provided., example: '4457'}
        merchantName: {type: string, maxLength: 1024, description: Doing Business
            As (DBA) name., example: MyWebsite.com}
        customerServiceNumber: {type: string, maxLength: 15, description: Customer
            service phone number information that is passed to the issuer and may
            appear on the customer statement., example: '1231231234'}
        serviceEntitlement: {type: string, maxLength: 16, description: Merchant service
            entitlement number (aka merchant ID)., example: '67893827513'}
        address: {$ref: '#/components/schemas/Address'}
    BillingAddress:
      x-model-version: 1.0
      description: Billing <a href="../docs?path=docs/Resources/Master-Data/Address.md">address</a>
        information.
      properties:
        firstName: {type: string, maxLength: 256, description: Billing first name.,
          example: Jane}
        lastName: {type: string, maxLength: 256, description: Billing last name.,
          example: Smith}
        address: {$ref: '#/components/schemas/Address'}
        phone: {$ref: '#/components/schemas/Phone'}
    ShippingAddress:
      x-model-version: 1.0
      description: Shipping and/or delivery <a href="../docs?path=docs/Resources/Master-Data/Address.md">address</a>
        information.
      properties:
        firstName: {type: string, maxLength: 256, description: Shipping contact first
            name., example: Joe}
        lastName: {type: string, maxLength: 256, description: Shipping contact last
            name., example: Smith}
        shipToEmail: {type: string, maxLength: 256, description: Email on a digital
            delivery transaction., example: customer@domain.com}
        shippingMethod:
          type: string
          maxLength: 13
          description: |
            Shipping or delivery method.

            Valid Values:
            * SAME_DAY
            * OVERNIGHT - Next day
            * PRIORITY - 2-3 days
            * GROUND - 4 days
            * ELECTRONIC - Email or digital goods
            * SHIP_TO_STORE
          example: SAME_DAY
        address: {$ref: '#/components/schemas/Address'}
        phone: {$ref: '#/components/schemas/Phone'}
    MerchantDetails:
      x-model-version: 1.0
      description: Used to pass <a href="../docs?path=docs/Resources/Master-Data/Merchant-Details.md">merchant</a>
        specific data during the transaction.
      properties:
        tokenType: {type: string, maxLength: 64, description: Specific token type
            requested by the merchant., example: TRANSARMOR}
        storeId: {type: string, maxLength: 1024, description: 'The unique ID or number
            used to identify the unique location, store, or site.', example: '12345'}
        siteId: {type: string, maxLength: 1024, description: The location ID or number
            used to identify the unique site and merchant in petro industry., example: CA123456}
        terminalId: {type: string, maxLength: 1024, description: Identifies the specific
            device or point of entry where the transaction originated assigned by
            the acquirer or the gateway., example: '12'}
        merchantId: {type: string, maxLength: 1024, description: A unique ID used
            to identify the Merchant. The merchant must use the value assigned by
            the acquirer or the gateway when submitting a transaction., example: '123456789012345'}
    Customer:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Customer-Details.md">Customer</a>
        specific data.
      properties:
        merchantCustomerId: {type: string, maxLength: 1024, description: Unique customer
            identifier., example: '234567'}
        processorCustomerId: {type: string, maxLength: 1024, description: Unique customer
            identifier on processor network., example: '1122334'}
        firstName: {type: string, maxLength: 256, description: Customer first name.,
          example: Joe}
        lastName: {type: string, maxLength: 256, description: Customer last name.,
          example: Smith}
        dob: {type: string, format: date, maxLength: 10, description: Customer date
            of birth in YYYY-MM-DD format., example: '1990-01-01'}
        email: {type: string, maxLength: 256, description: Customer email address.,
          example: customer@domain.com}
        ipAddress: {type: string, maxLength: 39, description: The IP address of the
            customer., example: 170.165.02.26}
        hostName: {type: string, maxLength: 1024, description: The name of the server
            the customer is connected to., example: dreamwave.com}
        locale: {type: string, maxLength: 256, description: Language/region code of
            user in IETF BCP47 format., example: en-US}
        driverLicenseNumber: {type: string, maxLength: 256, description: 'Customer
            driver license number, including state.', example: GA456183789}
        ssn: {type: string, maxLength: 9, description: Customer SSN or US federal
            tax ID number (business checks only)., example: '123456789'}
        phone:
          type: array
          items: {$ref: '#/components/schemas/Phone'}
    StoredCredentials:
      x-model-version: 1.0
      description: Used to initiate an initial or subsequent <a href="../docs?path=docs/Resources/Guides/Stored-Credentials.md">stored
        credentials</a> transaction.
      properties:
        scheduled: {type: boolean, description: Indicator if this is a scheduled transaction.,
          example: true}
        initiator:
          type: string
          maxLength: 11
          description: |
            Indicates whether it is a merchant-initiated or explicitly consented to by card holder.

            Valid Values:
            * MERCHANT
            * CARD_HOLDER
          example: MERCHANT
        sequence:
          type: string
          maxLength: 10
          description: |
            Indicates if the transaction is first or subsequent.

            Valid Values:
            * FIRST
            * SUBSEQUENT
            * SINGLE
          example: FIRST
        schemeReferenceTransactionId: {type: string, maxLength: 256, description: The
            transaction ID received from the issuer for the initial transaction. May
            be required if sequence is subsequent., example: '54231235467'}
        originationDate: {type: string, format: date, maxLength: 10, description: 'Date
            the customer account was created with merchant, in YYYY-MM-DD format.',
          example: '2020-11-20'}
        accountAge:
          type: string
          maxLength: 32
          description: "Indicator on the age of customer account with merchant.\n\n\
            Valid Values: \n* GUEST\n* NEW_ACCOUNT\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n\
            * 60_90_DAYS\n* OVER_90_DAYS\n"
          example: 'GUEST '
        count: {type: integer, description: Number of cards on file with this account.,
          example: '1'}
        lastUpdated:
          type: string
          maxLength: 32
          description: "Age of most recent card add/modify.\n\nValid Values: \n* NEVER\n\
            * NOW\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n* Over 60 DAYS\n"
          example: NEVER
        age:
          type: string
          maxLength: 32
          description: "Indicator on the age of this payment card on file with merchant.\n\
            \  \nValid Values: \n* GUEST\n* NEW_ACCOUNT\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n\
            * 60_90_DAYS\n* OVER_90_DAYS\n"
          example: GUEST
        attempts: {type: integer, description: Number of attempts to add a payment
            card in prior 24 hours., example: '1'}
        accountPasswordReset:
          type: string
          maxLength: 32
          description: "Indicator of the last time the account password was reset.\n\
            \nValid Values: \n* NEVER\n* NOW\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n\
            * 60_90_DAYS\n* OVER_90_DAYS\n"
          example: NEVER
        sixMonthTransactionCount: {type: integer, description: Number of transaction
            on this account in prior 6 months., example: '5'}
        twentyFourHourTransactionCount: {type: integer, description: Number of transaction
            on this account in prior 24 hours., example: '1'}
        retryAttempts: {type: integer, description: Number of retry attempt if the
            initial transaction was unsuccessful., example: '0'}
        networkTransactionReference: {type: string, maxLength: 64, description: Allows
            linking of the transaction to the original or previous one in a subscription/card-on-file
            chain., example: '123456788'}
    TransactionInteraction:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Transaction-Interaction.md">Transaction
        interaction</a> information based on where the transaction is acquired and
        the capabilities of the terminal or software.
      properties:
        origin:
          type: string
          maxLength: 4
          description: |
            The source of the transaction.

            Valid Values:
            * ECOM - Card not present (email, web, or mobile app)
            * MOTO - Mail order or telephone order
            * POS - Card present (retail face to face)
          example: ECOM
        posEntryMode:
          type: string
          maxLength: 22
          description: |
            An identifier used to indicate how the account number was entered on the transaction.

            Valid Values:
            * UNSPECIFIED - Default
            * MANUAL - Key entered
            * BARCODE - Barcode scan
            * OCR - Optical Character Reader
            * ICR_RELIABLE - Integrated Circuit Read (CVV data Reliable)
            * ICR_UNRELIABLE - Integrated Circuit Read (CVV data unreliable)
            * CONTACTLESS – Contactless Integrated Circuit Read (Reliable)
            * CONTACTLESS_MOBILE – Contactless Mobile Commerce or Discover InApp
            * CONTACTLESS_MAG_STRIPE – Contactless Magnetic Stripe Read
            * AMEX_WALLET - Amex Digital Wallet
            * MASTERCARD_REMOTE_CHIP – Mastercard remote chip entry
            * CREDENTIAL_ON_FILE – Credential on File
            * EMV_FALLBACK – EMV fallback to manual entry
            * EMV_FALLBACK_MAG - EMV fallback to Magnetic Strip entry
            * EMV_SWITCHED - EMV Transaction switched from Contactless to Contact entry
            * MAG_STRIPE – Magnetic Stripe - Track Read
          example: MANUAL
        posConditionCode:
          type: string
          maxLength: 26
          description: |
            An identifier used to indicate the transaction condition at the Point-of-Sale (POS).

            Valid Values:
            * CARD_PRESENT - Cardholder Present, Card Present
            * CARD_PRESENT_UNSPECIFIED – Cardholder Present, Unspecified
            * CARD_PRESENT_UNATTENDED – Cardholder Present, Unattended Device
            * CARD_PRESENT_FRAUD – Cardholder Present, Suspect Fraud
            * CARD_PRESENT_MAG_NOT_READ – Cardholder Present, Magnetic Stripe Could Not Be Read
            * CARD_PRESENT_IDENTIFIED - Cardholder Present, Identity Verified
            * CARD_NOT_PRESENT_RECURRING – Cardholder Not Present – Recurring
            * CARD_NOT_PRESENT_F2F - Cardholder Present, Card Not Present, Face 2 Face
            * CARD_NOT_PRESENT_MOTO – Cardholder Not Present, Mail Order/Telephone Order
            * CARD_NOT_PRESENT_ECOM – Cardholder Not Present, E-commerce
          example: CARD_NOT_PRESENT_ECOM
        responseCode: {type: string, description: Response code returned by network/issuer
            used in subsequent transactions.}
        posData: {type: string, description: POS data returned by network/issuer used
            in subsequent transactions.}
        mobileInteraction:
          type: string
          maxLength: 12
          description: |
            Mobile method of interaction.

            Valid Values:
            * PHONE_NUMBER - Invoice received by phone number
            * QR_CODE - Invoice paid by scanning QR Code
          example: PHONE_NUMBER
        terminalEntryCapability:
          type: string
          description: |
            Identifies how data can be entered in the terminal or software.

            Valid Values:
            * UNSPECIFIED - Default
            * ECOMMERCE - E-commerce no terminal used
            * IVR_VRU - Interactive Voice Response/Voice Response Unit
            * MAG_STRIPE_ONLY - Track read only
            * MAG_STRIPE_MANUAL - Track read or manual key
            * MAG_STRIPE_MANUAL_CHIP - Track read, manual key or chip
            * BARCODE - Barcode scan
            * CONTACTLESS - Contactless integrated circuit read
            * OCR - Opitcal character reader
            * CHIP_ONLY - Chip only
            * CHIP_MAG_STRIPE - Chip with track fallback
            * MANUAL_ONLY - Manual key only
            * CONTACTLESS_MAG_STRIPE - Contactless or track read
            * EMV_CONTACTLESS - EMV contactless single tap capable
            * HYBRID - Hybrid entry mode"
            * NONE - Terminal does not read card data
          example: CHIP_ONLY
        cardholderAuthenticationMethod:
          type: string
          maxLength: 32
          description: |
            Identifies how the cardholder was authenticated/verified.

            Valid Values:
            * UNSPECIFIED
            * NOT_AUTHENTICATED
            * PIN
            * ELECTRONIC_SIGNATURE
            * MANUAL_SIGNATURE
            * OTHER_MANUAL_VERIFICATION
            * OTHER_SYSTEMATIC_VERIFICATION
          example: PIN
        eciIndicator:
          type: string
          maxLength: 17
          description: |
            Electronic Commerce Indicator (ECI) is mandatory for all E-commerce transactions.

            Valid Values:
            * SECURE_ECOM - Secure Electronic Transaction
            * NON_AUTH_ECOM - Non-Authenticated Electronic Commerce Transaction
            * CHANNEL_ENCRYPTED - Channel Encrypted Transaction
            * NON_SECURE_ECOM - Non-Secure Electronic Commerce Transaction
          example: SECURE_ECOM
        cardholderAuthenticationEntity:
          type: string
          maxLength: 32
          description: |
            Identifies what entity authenticated the cardholder.

            Valid Values:
            * UNSPECIFIED
            * NOT_AUTHORIZED
            * ICC_OFFLINE_PIN
            * CARD_ACCEPTANCE_DEVICE
            * AUTHORIZED_AGENT_ONLINE_PIN
            * MERCHANT_VERIFIED_SIGNATURE
            * OTHER
          example: UNSPECIFIED
        terminalTimestamp: {type: string, format: date-time, description: 'Terminal
            timestamp in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        serviceCode: {type: string, maxLength: 3, description: 'If this field is returned
            in an authorization response, and if returned must be provided in subsequent
            Capture transactions.'}
        applicationExpiryDate: {type: string, format: date, description: Captured
            from the EMV chip data. YYYY-MM-DD format., example: ' 2021-09-03'}
        additionalPosInformation: {$ref: '#/components/schemas/AdditionalPosInformation'}
        network: {$ref: '#/components/schemas/Network'}
        authorizationCharacteristicsIndicator: {type: string, maxLength: 23, description: Response
            code used for qualification used in subsequent transactions., example: CARD_NOT_PRESENT}
    AdditionalPosInformation:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Additional-POS-Info.md">Additional
        terminal</a> or software specific information.
      properties:
        posId: {type: string, description: 'Identifies the specific device or point
            of entry where the transaction originated. For example, pump number, lane
            number, terminal number, etc.', example: '1234'}
        cashierId: {type: string, description: Used to uniquely identify the merchant’s
            store cashier or employee accepting the transaction., example: '3456'}
        stan: {type: string, description: System Trace or Debit Reg E Receipt Number
            - A system-generated number is provided by the merchant and it uniquely
            identifies a transaction. This number needs to be a unique number per
            Merchant and Terminal ID., maxLength: 6, example: '123456'}
        posFormFactorIndicator: {type: string, description: 'This field is used to
            identify the form factor used at the POS for MasterCard PayPass transactions.
            Note: Some values from 00–19 may indicate not only the physical form factor
            but also other attributes such as device technology and payment app specifications.
            Values from 20–99 exclusively indicate the form factor only without also
            indicating the storage technology.', example: '02'}
        alternateRoutingIndicator: {type: boolean, description: 'Identifies if the
            terminal support the Alternate Routing feature used for PINless POS, Signature
            Debit, and EMV Common AID features (excluding Online PIN CVM) allows merchants
            to process PIN Debit Network transactions without a PIN.', example: 'true'}
        enhancedAuthorizationRequestIndicator:
          type: string
          maxLength: 32
          description: |
            Used to indicate that the terminal or software is capable of supporting partial authorizations, prepaid identification and to request balances. Partial Authorization support is dependent on card type and region please contact your account representative.

            Valid Values:
            * NOT_SUPPORTED - Partial authorizations NOT requested; Balance information NOT requested
            * BALANCE_ONLY - Partial authorizations NOT requested; Balance information requested
            * PARTIAL_AUTH_ONLY - Partial authorizations requested; Balance information NOT requested
            * BOTH_SUPPORTED - Partial authorizations requested; Balance information requested"
          example: BOTH_SUPPORTED
        dataEntrySource:
          type: string
          maxLength: 50
          example: ELECTRONIC_PAYMENT_TERMINAL
          description: |
            Channel the consumer used to initiate a card not present transaction.

            Valid Values:
            * MOBILE_APP
            * MOBILE_WEB
            * BROWSER_PC
            * KIOSK
            * CONSOLE
            * 3DS_REQUESTOR_INITIATED
            * UNSPECIFIED
            * ELECTRONIC_PAYMENT_TERMINAL
            * AUTOMATED_FUEL_DISPENSING_MACHINE
            * UNATTENDED_CUSTOMER_TERMINAL
            * ECOMMERCE_CUSTOMER_PRESENT
            * MOBILE_TERMINAL
            * MOBILE_POS
            * ELECTRONIC_CASH_REGISTER
            * IVR_VRU
            * TICKET_MACHINE
            * CALL_CENTER_OPERATOR
        transactionQualifier: {type: string, description: Used for Discover - Discover
            TransactionQualifier.}
        enhancedAuthorizationResponseIndicator:
          type: string
          description: |
            Returns the approval type for Enhanced Authorization.

            Valid Values:
            * FULL
            * PARTIAL
            * DEPLETED
            * DECLINE
            * ERROR
          example: FULL
        attendedTerminalData:
          type: string
          maxLength: 16
          description: |
            Indicates if the card acceptor was at the point of sale.

            Valid Values:
            * ATTENDED – Attended terminal (Not a valid option if cardholderActivatedTerminalInformation is CAT_LEVEL_6)
            * UNATTENDED – Unattended terminal or software
            * NONE – No terminal or software used (VRU, etc.)
          example: ATTENDED
        cardPresentIndicator: {type: string, description: ''}
        cardPresentAtPosIndicator:
          type: string
          description: |
            Indicates if the actual card was present at the point of sale.

            Valid Values:
            * CARD_NOT_PRESENT
            * CARD_PRESENT
            * UNSPECIFIED
          example: CARD_PRESENT
        terminalLocation:
          type: string
          maxLength: 16
          description: |
            Identifies the location of the terminal or software.

            Valid Values:
            * MERCHANT – On the premises of the card acceptor
            * CARDHOLDER – On the premises of the cardholder (e.g. Home PC)
            * NONE – No terminal used
          example: MERCHANT
        cardholderActivatedTerminalInformation:
          type: string
          maxLength: 16
          description: |
            Identifies Cardholder Activated Terminal (CAT) capabilities of the device.

            Valid Values:
            * BLANK – Not a CAT device
            * CAT_LEVEL_1 - Automated dispensing machine with online/offline PIN (MC Only)
            * CAT_LEVEL_2 - Self-service terminal, used for automated fueling transactions and unattended terminals.
            * CAT_LEVEL_3 - Limited amount terminal
            * CAT_LEVEL_6 - Electronic commerce transaction (attendedTerminalData must not be ATTENDED)
          example: '2'
        posHardwareAndSoftware: {$ref: '#/components/schemas/PosHardwareAndSoftware'}
        posFeatures: {$ref: '#/components/schemas/PosFeatures'}
        supervisorId: {type: string, description: Used to uniquely identify the merchant’s
            store supervisor transactions., example: '1234567'}
    PosHardwareAndSoftware:
      x-model-version: 1.0
      description: Terminal hardware and software information.
      properties:
        hardwareVendorIdentifier: {type: string, description: 'Hardware vendor identifier
            assigned by Chase merchant services at time of certification, represented
            in ASCII HEX.'}
        softwareIdentifier: {type: string, description: 'Software Identifier assigned
            by Chase merchant services at time of certification, represented in ASCII
            HEX.'}
        hardwareSerialNumber: {type: string, description: 'Serial number of hardware
            device. The hardware serial # can be left-justified, space-filled.', example: V1234567}
        softwareApplicationName: {type: string, description: Name of software application.}
        softwareReleaseDate: {type: string, format: date, description: 'Date software
            was released, in YYYY-MM-DD format.', example: '2022-05-21'}
        softwareVersionNumber: {description: EPROM or version information related
            to the terminal software., type: string}
    PosFeatures:
      x-model-version: 1.0
      description: Terminal or software feature information.
      properties:
        hostProcessingPlatform: {type: string, description: Indicates which system
            is being used by the payment application and to what extent it is being
            used., example: TAS}
        messageFormatSupport: {type: string, description: Indicates which message
            format the application uses to communicate with the Chase merchant services
            PNS Host.}
        emvSupport: {type: string, description: Indicates the payment brands supported
            by the application for EMV processing. Required for any application that
            supports EMV processing.}
        peripheralInformation1: {type: string, description: Indicates the type of
            peripheral device attached to or being used by the payment application
            or point of sale device. Only the highest level of support should be indicated
            unless multiple devices are attached.}
        peripheralInformation2: {type: string, description: Reserved for future use.}
        communicationInformation1: {type: string, description: Indicates the methods
            of communication supported by the payment application. It is possible
            for an application to support more than one type of communication at a
            time., example: DIAL}
        communicationInformation2: {type: string, description: Reserved for future
            use.}
        industryInformation1: {type: string, description: Indicates the industries
            supported by the payment application. More than one industry can be indicated.}
        industryInformation2: {type: string, description: Reserved for future use.}
        classAndComplianceCertification: {type: string, description: 'Indicates the
            type of application or device sending the transaction, Class A or Class
            B.', example: A}
        otherCapabilities: {type: string, description: 'Indicates whether the transaction
            originated from a mobile device that uses Chase merchant services’ mobile
            payment gateway or originated from a device that does not use Chase merchant
            services’ Mobile Payment Gateway. Note: It is required for merchants to
            send the appropriate information in this element in the case where a mobile
            terminal is supported.'}
        cardCaptureCapability: {type: boolean, example: true, description: Identifies
            if the terminal is able to capture the card data.}
        pinAuthenticationCapability:
          type: string
          maxLength: 25
          example: CAN_ACCEPT_PIN
          description: |
            PIN entry capability of the Point of Sale.

            Valid Values:
            * UNSPECIFIED
            * CAN_ACCEPT_PIN
            * CANNOT_ACCEPT_PIN
            * PIN_PAD_IS_DOWN
            * PIN_VERIFIED_BY_TERMINAL
        authenticationCapability:
          type: string
          maxLength: 50
          example: UNSPECIFIED
          description: |
            Identifies the terminals capability to authenticate  the cardholder.

            Valid Values:
            * UNSPECIFIED
            * NONE
            * PIN
            * ELECTRONIC_SIGNATURE
            * INOPERATIVE
            * OTHER
        taxPromptCapability:
          type: string
          maxLength: 25
          example: CAPABLE
          description: |
            This field indicates the capability of the terminal to prompt for the Tax Amount, and then handle the Commercial card type in the response message.

            Valid Values:
            * CAPABLE
            * NOT_CAPABLE
        terminalEntryCapability:
          type: string
          maxLength: 28
          description: |
            Identifies how data can be entered in the terminal or software.

            Valid Values:
            * UNSPECIFIED - Default
            * ECOMMERCE - E-commerce no terminal used
            * MAG_STRIPE_ONLY - Track read only
            * MAG_STRIPE_MANUAL - Track read or manual key
            * MAG_STRIPE_MANUAL_CHIP - Track read, manual key or chip
            * BARCODE - Barcode scan
            * CONTACTLESS - Contactless integrated circuit read
            * OCR - Opitcal character reader
            * CHIP_ONLY - Chip only
            * CHIP_MAG_STRIPE - Chip with track fallback
            * MANUAL_ONLY - Manual key only
            * CONTACTLESS_MAG_STRIPE - Contactless or track read
            * HYBRID - Hybrid entry mode"
          example: CHIP_ONLY
        PINcaptureCapability:
          type: string
          maxLength: 50
          description: |
            Identifies the terminals capability to caputer a PIN.

            Valid Values:
            * UNSPECIFIED - Default
            * PIN_4 - PIN capability 4 characters maximum
            * PIN_5 - PIN capture capability 5 characters maximum
            * PIN_6 - PIN capture capability 6 characters maximum
            * PIN_7 - PIN capture capability 7 characters maximum
            * PIN_8 - PIN capture capability 8 characters maximum
            * PIN_9 - PIN capture capability 9 characters maximum
            * PIN_10 - PIN capture capability 10 characters maximum
            * PIN_11 - PIN capture capability 11 characters maximum
            * PIN_12 - PIN capture capability 12 characters maximum
            * NONE
          example: UNSPECIFIED
    Network:
      x-model-version: 1.0
      description: ''
      required: [network]
      discriminator: {propertyName: network}
      properties:
        network: {type: string, description: Processing card network}
    Mastercard:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Network'}
      - type: object
        properties:
          interchangeComplianceIndicator: {type: string, description: 'A code to indicate
              that Mastercard interchange compliance data was provided for this transaction,
              and if any other special Mastercard authorization requirements were
              met.'}
          bankNetRefNumber: {type: string, description: A Mastercard generated identifier
              for each original authorization request. Reference number assigned by
              Mastercard to each authorization message.}
          bankNetDate: {type: string, description: A Mastercard generated date for
              this transaction. MMDD format}
          cvcErrorIndicator: {type: string, description: Indicates the CVC Error response
              data.}
          transactionIntegrityClass: {type: string, description: Contains the MasterCard
              provided Transaction Integrity Classification for Point of Sale (POS)
              Purchase and Purchase with Cash Back transactions initiated on the Authorization
              Platform.}
          xCodeResponse: {type: string, maxLength: 6, description: Conditional for
              Mastercard EMV chip transactions. This value is used to notify the chip
              that the transaction was unable to go online and is required for batch
              uploads.}
          chipCryptoValue: {type: string, maxLength: 3, description: Additional EMV
              chip info returned by Mastercard.}
          cardDataOutputCapability:
            type: string
            maxLength: 25
            example: UNSPECIFIED
            description: |
              Identifies the card's capability to output data.

              Valid Values:
              * UNSPECIFIED
              * NONE
              * MAG_STRIPE
              * ICC
              * OTHER
          terminalDataOutputCapability:
            type: string
            maxLength: 25
            example: UNSPECIFIED
            description: |
              Identifies the terminal's capability to display response data.

              Valid Values:
              * UNSPECIFIED
              * NONE
              * PRINTING_ONLY
              * DISPLAY_ONLY
              * PRINTING_AND_DISPLAY
    Visa:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Network'}
      - type: object
        properties:
          VISABID: {type: string, maxLength: 128, description: The Business Identifier
              (BID) provided by Visa to Third Party Services (TPS)., example: '0123456789'}
          VISAAUR: {type: string, maxLength: 128, description: Agent Unique Account
              Result (AUAR) provided by Visa to Third Party Services (TPS) in 12 hex
              digit format., example: 12345AD89012}
          cardAuthenticationResultCode: {type: string, maxLength: 1, description: Card
              Authentication Results Code returned by Visa for EMV chip transactions.}
          spendQualificationIndicator: {type: boolean, example: false, description: A
              field used by Visa to establish annual point-of-sale spending requirements.}
    AmericanExpress:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Network'}
      - type: object
        properties:
          safeKeyResponse:
            type: string
            maxLength: 50
            description: |
              Response that corresponds to the American Express SafeKey response value.

              Valid Values:
              * FAILED_AUTH - Authentication Issuer Key
              * PASSED_AUTH - Authentication Issuer key
              * PASSED_ATTEMPT - Attempt, Issuer Key
              * FAILED_ATTEMPT - Attempt, Issuer Key
              * FAILED_NON_PARTICIPANT - Attempt, Issuer not participating, Network Key
              * PASSED_NON_PARTICIPANT - Attempt, Issuer not participating, Network Key
              * FAILED_PARTICIPANT - Attempt, Participating, ACS not available, Network Key
              * PASSED_PARTICIPANT - Attempt, Participating, ACS not available, Network Key
              * UNCHEKED
            example: PASSED_AUTH
    Discover:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Network'}
      - type: object
        properties:
          networkOriginalAmount: {type: number, maximum: 1.0E18, description: 'Original
              transaction amount, required for Discover card on file transactions.',
            example: '9.66'}
    NetworkDetails:
      x-model-version: 1.0
      description: Contains the authorization <a href="../docs?path=docs/Resources/Master-Data/Network-Details.md">network
        response</a> details.
      properties:
        network: {$ref: '#/components/schemas/Network'}
        debitNetworkId: {type: string, maxLength: 64, description: Network ID for
            the debit component., example: '123456'}
        transactionSequence: {type: string, maxLength: 64, description: Transaction
            specific data that may be returned in response messages., example: '1123456'}
        systemTrace: {type: string, maxLength: 64, description: Original trace number
            that was returned in an authorization response., example: '123456789'}
        debitIssuerData: {type: string, description: Debit issuer specific data that
            may be returned in the response messages., example: Standard Issuer}
        networkResponseCode: {type: string, maxLength: 16, description: Debit network
            response code., example: '00'}
        posEntryModeChange: {type: boolean, description: Issuer will reply if the
            entry mode has changed.}
        cardLevelResultCode: {type: string, description: 'Identifies purchase, corporate,
            and business card level e.g. Level II/Level III'}
        validationCode: {type: string, description: A code calculated by card brands
            to ensure that the fields present in the authorization are also present
            in the clearing record., example: ''}
        downgradeReason: {type: string, description: Downgrade reason as supplied
            by network., example: ACCOUNT_NUMBER_MISSING}
        creditAuthType: {type: string, description: Indicates the type of authorization
            required., example: DISCOVER}
        authScore: {type: string, description: The auth score returned for the transaction.,
          example: ''}
        partialAuthTransactionId: {type: string, description: Generated identifier
            unique for each original authorization request., example: ''}
        totalAuthAmount: {type: number, description: Total amount authorized., example: '13.50'}
        transactionIdentifier: {type: string, description: This field represents a
            unique value used to identify and link all related transactions for authorization
            and settlement}
        magStripeQualityIndicator:
          type: string
          description: |
            This field dentifies the error encountered with the track data provided in the authorization request message.

            Valid Values:
            * TRACK_PRESENT - Track 1 and Track 2 present in the message
            * NO_TRACK - Track 1 or Track 2 not present in the message
            * PAN_NOT_EQUAL - Primary Account Number not equal in track data
            * EXPIRATION_NOT_EQUAL - Expiration date not equal in track data
            * CARD_TYPE_INVALID - Card type invalid in track data
            * FIELD_SEPARATORS - Field separator(s) invalid in track data
            * EXCEEDS_LENGTH -  A field within the track data exceeds maximum length
            * CATEGORY_CODE - The transaction category code is "T".
            * CUSTOMER_PRESENCE - POS customer presence indicator is false.
            * CARD_PRESENCE - POS card presence indicator is false.
          example: TRACK_PRESENT
        networkAvsCode: {type: string, maxLength: 1, description: Non-Normalized newtork
            AVS response code is available., example: ''}
        panMappingAccountNumber: {type: string, maxLength: 19, description: 'Returned
            for MasterCard Token transactions (only for MCCs 4111, 4131, 4784, and
            7523) and for all AMEX Token transactions.', example: ''}
        cardholderResponse:
          type: string
          maxLength: 5
          description: |
            Non-normalized response from for verifying cardholder data where each position represents the postal/zip code, address, name, telephone, and email respectively.

            Valid Values:
            * Y = Yes data matches
            * N = No data does not match
            * U - Data unchecked
            * R - Retry
            * S - Service not allowed
            * Blank - Data not sent
          example: YYNUU
        authSource: {type: string, description: Code indicating how the network performed
            the authorization., example: STIP}
    AdditionalDataCommon:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Additional-Data.md">Common
        data</a> passed during a transaction request based on business requirements.
      properties:
        additionalData: {$ref: '#/components/schemas/AdditionalData'}
        amountComponents: {$ref: '#/components/schemas/AmountComponents'}
        directedRouting: {$ref: '#/components/schemas/DirectedRouting'}
        subMerchant: {$ref: '#/components/schemas/SubMerchant'}
        installments: {$ref: '#/components/schemas/Installments'}
        privateLabel: {$ref: '#/components/schemas/PrivateLabel'}
        customFields:
          description: Used to submit merchant custom values.
          type: array
          items: {$ref: '#/components/schemas/KeyValuePair'}
        deferredPayments: {$ref: '#/components/schemas/DeferredPayments'}
        billPaymentType:
          type: string
          maxLength: 11
          description: |
            Indicates the type of bill payment.

            Valid Values:
            * SINGLE - Single charge not for recurring services or installment plan.
            * RECURRING - Agreement where charges will occur on a periodic basis.
            * INSTALLMENT - Single purchase where the cardholder is billed (charged) in installments.
            * DEFERRED - A charge for an order with a delayed payment for a specified amount of time.
          example: RECURRING
        recurring: {$ref: '#/components/schemas/Recurring'}
    AdditionalData:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Additional-Data.md">Additional
        data</a> passed during a transaction request.
      properties:
        baiFlag:
          type: string
          maxLength: 31
          description: |
            Business Application Identifier. This identifies the intended use of a push payment. It determines the data carried in the message, the limits and economics that may apply to the transaction, and may be used by the sending and/or receiving issuer to make an authorization decision.

            Valid Values:
            * PERSON_TO_PERSON - Person to person
            * PERSON_TO_PERSON_BANK_INITIATED - Person to person bank initiated
            * DIGITAL_WALLET_PAN - Digital Wallet PAN
            * ACCOUNT_TO_ACCOUNT - Account to account
            * TOP_OFF - Top Off
            * ACCOUNT_VERIFICATION - Account Verification ($0.00 Transaction)
            * FUNDS_TRANSFER - Funds Transfer
          example: PERSON_TO_PERSON
        ecomURL: {type: string, maxLength: 512, description: This field contains the
            URL of the site performing the Ecommerce transaction., example: 'https://www.somedomain.com'}
        requestedTestErrorResponseCode: {type: string, maxLength: 23, description: Value
            used to test/replicate a transaction error., example: '213'}
        emvParameterDownloadIndicator: {type: string, description: 'Indicator if EMV
            Parameter has to be downloaded, sent as part of Auth/Sale Response.'}
    DirectedRouting:
      x-model-version: 1.0
      description: Used to directly route debit transactions to a specific processing
        network.
      properties:
        network:
          type: string
          maxLength: 16
          description: |
            Identifies the debit card processing network.

            Valid Values:
            * NYCE
            * PULSE
            * VISA
          example: VISA
        cardFunction: {type: string, maxLength: 6, description: Identifies if the
            processing method is CREDIT or DEBIT., example: CREDIT}
        processors:
          type: array
          items: {$ref: '#/components/schemas/Processor'}
          description: Identifies the card processor.
    SubMerchant:
      x-model-version: 1.0
      description: Sub-merchant information applicable to <a ="../docs?path=docs/Resources/Guides/Industry-Verticals/Payment-Faciliator.md">Payment
        Facilitators</a> (also known as payment service providers or aggregators).
      properties:
        id: {type: string, description: Sub-merchant ID used by Payment Facilitators.,
          example: '9999'}
        name: {type: string, maxLength: 256, description: Merchant name/product/service
            to be used in lieu of the Payment Facilitator name., example: Some Business}
        street: {type: string, maxLength: 256, description: Merchant street address
            to be used in lieu of the Payment Facilitator street., example: 123 Main
            Street}
        city: {type: string, maxLength: 256, description: Merchant city to be used
            in lieu of the Payment Facilitator city., example: Atlanta}
        state: {type: string, maxLength: 256, description: Merchant state to be used
            in lieu of the Payment Facilitator state., example: GA}
        postalCode: {type: string, maxLength: 10, description: Merchant postal code
            to be used in lieu of the Payment Facilitator postal code., example: 30303-001}
        country: {type: string, maxLength: 256, description: Merchant country to be
            used in lieu of the Payment Facilitator country., example: US}
        taxId: {type: string, maxLength: 9, description: Tax ID collected of the merchant
            for this transaction., example: '123456789'}
    Installments:
      x-model-version: 1.0
      description: Installment bill payment transaction information.
      properties:
        installmentAmount: {type: number, maximum: 1.0E18, description: Amount the
            customer will be charged per installment., example: '20.00'}
        lastInstallmentAmount: {type: number, maximum: 1.0E18, description: Amount
            the customer will be charged on the last installment., example: '20.00'}
        installmentCount: {type: integer, maximum: 999, description: Number of installment
            payments in the plan, example: 12}
        interestRate: {type: number, maximum: 100, description: Indicates the installment
            interest rate if applicable., example: '1.32'}
        paymentFirstDay: {type: number, maximum: 1.0E18, description: Amount the customer
            will be charged on the first day., example: '15.00'}
        invoiceId: {type: string, maxLength: 256, description: 'Invoice Number of
            an installment bill payment transaction. Note: This field has limited
            platform availability. For more information, please contact your account
            representative.', example: '534242'}
        invoiceDate: {type: string, format: date, maxLength: 10, description: Date
            that the installment invoice was created in YYYY-MM-DD format., example: '2020-05-01'}
        deliveryDate: {type: string, format: date, maxLength: 10, description: Date
            the product or service is delivered in YYYY-MM-DD format., example: '2020-05-01'}
        dueDate: {type: string, format: date, maxLength: 10, description: Date final
            payment is due for the installment invoice in YYYY-MM-DD format., example: '2030-05-01'}
    PrivateLabel:
      x-model-version: 1.0
      description: Private label transaction information.
      properties:
        paymentSource: {type: string, maxLength: 256, description: Private label card
            source., example: SHELL}
        paymentType: {type: string, maxLength: 16, description: Type of transaction.,
          example: REFUND}
        specialFinanceIndicator: {type: string, maxLength: 16, description: Indicates
            if special finance term and rate., example: 24/0}
    KeyValuePair:
      x-model-version: 1.0
      description: Key value pair information.
      properties:
        key: {type: string, maxLength: 256, description: Key for the custom information.}
        value: {type: string, maxLength: 256, description: Value for the custom information.}
    DeferredPayments:
      x-model-version: 1.0
      description: Deferred bill payment transaction information.
      properties:
        numberOfPayments: {type: string, maxLength: 32, description: Number of payments
            for a sale transaction if the customer pays the total amount in multiple
            transactions., example: '5'}
        paymentPlan:
          type: string
          maxLength: 11
          description: |
            This field details the type of the Deferred Payment Plan (DPP) for Mexican payments.

            Valid Values:
            * NO_INTEREST – No Interest charges
            * INTEREST – Interest charges
            * PAY_LATER – Pay at a Later Date
          example: PAY_LATER
        timePeriod: {type: string, maxLength: 64, description: Number of months for
            which the payment would not be enforced., example: '12'}
    Recurring:
      x-model-version: 1.0
      description: Recurring
      properties:
        frequency:
          type: string
          description: "Number of days between transactions.\n\nValid Values:\n* ONCE\
            \ - One Time\n* DAILY - Every Day\n* WEEKLY - Every 7 Days\n* BI_WEEKLY\
            \ - Every 14 Days\n* SEMI_MONTHLY - Every 15 Days\n* MONTHLY - Every Month\
            \ on the Same Date\n* BI_MONTHLY - Every 2 Months on the Same Date\n*\
            \ QUARTERLY - Every 3 Months on the Same Date\n* 4_MONTHS - Every 4 Months\
            \ on the Same Date\n* SEMI_ANNUALLY - Every 6 Months on the Same Date\n\
            * ANNUALLY - Once a Year on the Same Date \n"
          example: MONTHLY
        merchantDeclineAdvice:
          type: string
          maxLength: 32
          description: |
            Identifies the reason for declining a MasterCard and Visa recurring payment transaction.

            Valid Values:
            * NOT_PROVIDED
            * NEW_ACCOUNT_INFORMATION
            * TRY_AGAIN_LATER
            * DO_NOT_TRY_AGAIN
            * TOKEN_NOT_SUPPORTED
            * DO_NOT_HONOR
          example: NOT_PROVIDED
        expiry: {type: string, format: date, maxLength: 10, description: When does
            the recurring transaction expire in YYYY-MM-DD format., example: '2030-11-20'}
    Processor:
      x-model-version: 1.0
      description: Identifies the card processor.
      properties:
        code: {type: string, maxLength: 256, description: Key for the custom information.}
        platform: {type: string, maxLength: 256, description: Value for the custom
            information.}
        priority: {type: string, maxLength: 256, description: Value for the custom
            information.}
    AmountComponents:
      x-model-version: 1.0
      description: Used in transactions where additional <a href="../docs?path=docs/Resources/Master-Data/Amount-Components.md">amount</a>
        fields such as tax, surcharge, or fees are required as part of the request.
      properties:
        subTotal: {type: number, maximum: 1.0E18, description: Subtotal amount., example: '1.50'}
        vatAmount: {type: number, maximum: 1.0E18, description: Level 2 VAT (Value
            Added Tax) or alternate tax amount applied at the order level., example: '1.50'}
        localTax: {type: number, maximum: 1.0E18, description: Local sales tax amount
            included in a transaction., example: '1.50'}
        shippingAmount: {type: number, maximum: 1.0E18, description: Shipping amount
            included in a transaction., example: '1.50'}
        cashback: {type: number, maximum: 1.0E18, description: 'For Debit, EBTCash,
            or Credit: The amount of cash requested by the cardholder at the time
            of purchase.', example: '1.50'}
        tip: {type: number, maximum: 1.0E18, description: The portion of the transaction
            amount that represents the tip., example: '1.50'}
        surcharge: {type: number, maximum: 1.0E18, description: 'Identifies the transaction
            surcharge amount as an extra fee, tax, or cost added to the already existent
            cost of a good or service. Note: Not all processors and acquirers allow
            surcharge fees. For more information, please contact your account representative.',
          example: '1.50'}
        ITBISTaxAmount: {type: number, maximum: 1.0E18, description: Tax amount on
            the transfer of Industrialised Goods and Services (ITBIS)., example: '1.50'}
        convenienceFee: {type: number, maximum: 1.0E18, description: 'Optional convenience
            fee for payments made through an alternative channel. rather than by cash,
            check, or ACH. Note: Not all processors and acquirers allow convenience
            fees. For more information, please contact your account representative.',
          example: '1.50'}
    RegionalDebit:
      x-model-version: 1.0
      description: Data that applies to <a href="../docs?path=docs/Resources/Guides/Debit/Regional-Debit.md">regional
        debit</a> transactions.
      properties:
        pinBlock: {$ref: '#/components/schemas/PinBlock'}
        region: {type: string, description: Region of debit origin.}
        debitTransactionCode: {type: string, description: Identifies the debit transaction.}
        debitMACValue: {type: string, description: Used to confirm that the key data
            elements of the transaction have not been tampered.}
        encryptedKeyIndex: {type: number, description: 'Indicates the key index in
            use by PIN Pad, valid values are 1 through 9.', example: '1'}
        messageAuthenticationWorkingKey: {type: string, description: A message authentication
            code for a working key that uses a session key to detect both accidental
            and intentional modifications of the data.}
        messageAuthenticationWorkingKeyCheckDigits: {type: string, description: A
            message authentication code for a working key that uses a session key
            to check digits.}
        messageEncryptionWorkingKey: {type: string, description: A message encryption
            working key is typically a random string of bits generated specifically
            to scramble and unscramble data.}
        debitPinPadSerialNumber: {type: string, description: Serial Number of the
            PIN device in use at the POS.}
        accountType: {type: string, description: CHECKING or SAVINGS, example: CHECKING}
        transactionSequenceCounter: {type: integer, description: Contains a unique
            sequence counter for this transaction from this point of sale.}
    ChargesResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        source: {$ref: '#/components/schemas/Source'}
        paymentReceipt: {$ref: '#/components/schemas/PaymentReceipt'}
        billingAddress: {$ref: '#/components/schemas/BillingAddress'}
        shippingAddress: {$ref: '#/components/schemas/ShippingAddress'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        dynamicDescriptors: {$ref: '#/components/schemas/DynamicDescriptors'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        cardDetails: {$ref: '#/components/schemas/CardDetails'}
        paymentToken: {$ref: '#/components/schemas/ResponsePaymentToken'}
        paymentTokens:
          type: array
          items: {$ref: '#/components/schemas/ResponsePaymentToken'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
        authOptimizationDetails: {$ref: '#/components/schemas/AuthOptimizationDetails'}
    PaymentReceipt:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Payment-Receipt.md">Payment
        receipt</a> response details.
      properties:
        approvedAmount: {$ref: '#/components/schemas/Amount'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        merchantName: {type: string, maxLength: 1024, description: Name of the merchant
            returned from boarded account or dynamic descriptor.}
        merchantAddress: {type: string, maxLength: 1024, description: Street address
            of the merchant returned from boarded account or dynamic descriptor.}
        merchantCity: {type: string, maxLength: 256, description: City of the merchant
            returned from boarded account or dynamic descriptor.}
        merchantStateOrProvince: {type: string, maxLength: 256, description: State
            or Province of the merchant returned from boarded account or dynamic descriptor.}
        merchantCountry: {type: string, maxLength: 256, description: Country of the
            merchant returned from boarded account or dynamic descriptor.}
        merchantURL: {type: string, maxLength: 256, description: Merchant URL returned
            from boarded account.}
        merchantPostalCode: {type: string, maxLength: 10, description: Postal code
            of the merchant returned from boarded account or dynamic descriptor.}
    ProcessorResponseDetails:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md">processor
        response</a> details.
      properties:
        approvalStatus: {type: string, description: Final status of the transaction.,
          example: APPROVED}
        approvalCode: {type: string, description: Approval code from the processor.,
          example: OK3483}
        authenticationResponseCode: {type: string, description: Response code from
            authentication.}
        referenceNumber: {type: string, description: Transaction reference number.,
          example: 845366457890-TODO}
        schemeTransactionId: {type: string, description: Brand transaction ID., example: '019078743804756'}
        networkOriginalAmount: {type: number, maximum: 1.0E18, description: Network
            original amount, example: '100.50'}
        feeProgramIndicator: {type: string, description: Contains the Fee Program
            Indicator (FPI) code that may be returned on Debit or PLDebit transaction
            response., example: '123'}
        processor: {type: string, maxLength: 256, description: Card processor., example: fiserv}
        networkRouted: {type: string, maxLength: 10, description: 'Network label that
            shows the network where the transaction was routed for authorization (e.g.
            NYCE, PULSE, STAR, Visa, Mastercard, etc.).'}
        PAR: {type: string, maxLength: 29, description: 'A Payment Account Reference
            (PAR) is a unique identifier associated with a specific cardholder PAN.
            This identification number can be used in place of sensitive consumer
            identification fields, and transmitted across the payments ecosystem to
            facilitate consumer identification.'}
        networkInternationalId:
          type: string
          maxLength: 16
          example: FISERV
          description: |
            This field identifies the acquiring host.

            Valid Values:
            * FISERV — Fiserv NII excluding Canadian Debit and Credit
            * CANADA — Canadian processing (Debit and Credit)
            * LAC — Latin America/Caribbean (LAC) solutions
            * MEXICO — Mexico (PROSA) solution
        responseCode: {type: string, description: Normalized transaction response
            code from the gateway (Commerce Hub Response)., example: '00000'}
        responseMessage: {type: string, description: Normalized transaction message
            from the gateway (Commerce Hub Response)., example: APPROVAL}
        hostResponseCode: {type: string, description: Endpoint or issuer response
            code., example: '00'}
        hostResponseMessage: {type: string, description: Endpoint or issuer response
            message., example: APPROVAL}
        localTimestamp: {type: string, format: date-time, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        debitReceiptNumber: {type: string, maxLength: 6, description: Debit Receipt
            Number generated by switch.}
        responseIndicators: {$ref: '#/components/schemas/ResponseIndicator'}
        bankAssociationDetails: {$ref: '#/components/schemas/BankAssociationDetails'}
        additionalInfo:
          type: array
          items: {$ref: '#/components/schemas/NameValuePair'}
    ResponseIndicator:
      x-model-version: 1.0
      description: ''
      properties:
        alternateRouteDebitIndicator: {type: boolean, example: 'false'}
        signatureLineIndicator: {type: boolean, example: 'false'}
        signatureDebitRouteIndicator: {type: boolean, example: 'false'}
    BankAssociationDetails:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md#bank-association-details">Bank
        association</a> response details.
      properties:
        associationResponseCode: {type: string, maxLength: 32, description: Bank response
            code., example: '000'}
        transactionTimestamp: {type: string, format: date-time, maxLength: 64, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        transactionReferenceInformation: {type: string, maxLength: 256, description: Transaction
            reference information., example: ''}
        avsSecurityCodeResponse: {$ref: '#/components/schemas/AvsSecurityCodeResponse'}
    AvsSecurityCodeResponse:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md#address-and-security-code-response">Address
        and Security Code</a> verification response details.
      properties:
        streetMatch: {type: string, maxLength: 16, description: AVS street address
            result message., example: MATCH}
        postalCodeMatch: {type: string, maxLength: 16, description: AVS postal code
            result message., example: MATCH}
        securityCodeMatch: {type: string, maxLength: 16, description: Security code
            result message., example: MATCH}
        association: {$ref: '#/components/schemas/Association'}
    Association:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md#association-response">Bank
        association</a> security response details.
      properties:
        avsCode: {type: string, maxLength: 32, description: Bank AVS response code.,
          example: YY}
        securityCodeResponse: {type: string, maxLength: 32, description: Bank security
            code response., example: M}
        cardholderNameResponse: {type: string, maxLength: 32, description: 'Cardholder
            name response, if supported by card type.', example: '1'}
    NameValuePair:
      x-model-version: 1.0
      description: Generic object for the Name-Value pair types.
      properties:
        name: {type: string}
        value: {type: string}
    TransactionBatch:
      x-model-version: 1.0
      properties:
        julianDay: {type: string, description: 'The day of the year the current batch
            was opened, 001-366 format.', example: '001'}
        batchNumber: {type: string, description: The batch number within the Julian
            day for this transaction. values range from 000001 through 000999., example: '000001'}
        transactionClass: {type: string, description: 'Code that indicates the transaction
            that was logged under, ranges from 1 through 4--Captured- approved, Captured-
            Authorised Only, Declinced, Batch Control.', example: '1'}
        sequenceNumber: {type: string, description: 'Sequence number of this transaction
            within the current batch, ranges from 000001 through 000999.', example: '000001'}
    CardDetails:
      x-model-version: 1.0
      description: Card details for Account Information Response.
      properties:
        brand: {type: string, maxLength: 256, description: Card brand., example: VISA}
        brandProductId: {type: string, maxLength: 256, description: Category within
            the card brand., example: VISA_BUSINESS}
        cardFunction: {type: string, maxLength: 256, description: Identifies the type
            of card as CREDIT or DEBIT., example: CREDIT}
        commercialCard:
          type: string
          description: |
            Identifies if the card is a commercial card.
            Valid Values:
            * CORPORATE
            * BUSINESS
            * PURCHASE
            * UNAVAILABLE
            * NON_COMMERCIAL
          example: CORPORATE
        issuerCountry: {type: string, maxLength: 256, description: Card issuer two-letter
            country code., example: US}
        issuerName: {type: string, maxLength: 256, description: Issuing bank name.,
          example: First National Bank of Omaha}
    ResponsePaymentToken:
      x-model-version: 1.0
      properties:
        tokenData: {type: string, maxLength: 2048, description: Token created from
            the payment source., example: '1234123412340019'}
        tokenSource: {type: string, maxLength: 256, description: Source for the Token
            Service Provider (TSP)., example: TRANSARMOR}
        tokenResponseCode: {type: string, maxLength: 256, description: Response code
            for token generation request., example: '000'}
        tokenResponseDescription: {type: string, maxLength: 256, description: Response
            description for token generation request., example: SUCCESS}
    AuthOptimizationDetails:
      x-model-version: 1.0
      description: Updated account details provided by Auth Optimizer for expired
        cards
      properties:
        accountStatus:
          type: string
          description: |
            Indicates the current status of the account.

            Valid Values:
            * ACCOUNT_CHANGE
            * ACCOUNT_CLOSED
            * EXPIRATION_CHANGE
            * CONTACT_CARDHOLDER
          example: ACCOUNT_CHANGE
        accountUpdaterErrorCode: {type: string, description: Error code provided the
            account updater system., example: VAU001}
        originalResponseCode: {type: string, description: Original Response Code for
            re-authorized (Optimized) transaction., example: '006'}
    CaptureRequest:
      x-model-version: 1.0
      properties:
        source: {$ref: '#/components/schemas/Source'}
        amount: {$ref: '#/components/schemas/Amount'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        dynamicDescriptors: {$ref: '#/components/schemas/DynamicDescriptors'}
        billingAddress: {$ref: '#/components/schemas/BillingAddress'}
        shippingAddress: {$ref: '#/components/schemas/ShippingAddress'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
    CaptureResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        source: {$ref: '#/components/schemas/Source'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        billingAddress: {$ref: '#/components/schemas/BillingAddress'}
        shippingAddress: {$ref: '#/components/schemas/ShippingAddress'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        dynamicDescriptors: {$ref: '#/components/schemas/DynamicDescriptors'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        paymentReceipt: {$ref: '#/components/schemas/PaymentReceipt'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
    CancelRequest:
      x-model-version: 1.0
      properties:
        amount: {$ref: '#/components/schemas/Amount'}
        source: {$ref: '#/components/schemas/Source'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        dynamicDescriptors: {$ref: '#/components/schemas/DynamicDescriptors'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
    CancelResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        source: {$ref: '#/components/schemas/Source'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        paymentReceipt: {$ref: '#/components/schemas/PaymentReceipt'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
    RefundRequest:
      x-model-version: 1.0
      properties:
        source: {$ref: '#/components/schemas/Source'}
        amount: {$ref: '#/components/schemas/Amount'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        dynamicDescriptors: {$ref: '#/components/schemas/DynamicDescriptors'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
    RefundResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        source: {$ref: '#/components/schemas/Source'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        paymentReceipt: {$ref: '#/components/schemas/PaymentReceipt'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
        authOptimizationDetails: {$ref: '#/components/schemas/AuthOptimizationDetails'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
    AccountVerificationRequest:
      x-model-version: 1.0
      properties:
        source: {$ref: '#/components/schemas/Source'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        billingAddress: {$ref: '#/components/schemas/BillingAddress'}
        transactionProcessingDetails: {$ref: '#/components/schemas/TransactionProcessingDetails'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
    AccountVerificationResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        responsePaymentToken: {$ref: '#/components/schemas/ResponsePaymentToken'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
    TokenizationRequest:
      x-model-version: 1.0
      properties:
        source: {$ref: '#/components/schemas/Source'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        billingAddress: {$ref: '#/components/schemas/BillingAddress'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
    TokenizationResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        paymentToken: {$ref: '#/components/schemas/ResponsePaymentToken'}
        paymentTokens:
          type: array
          items: {$ref: '#/components/schemas/ResponsePaymentToken'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        billingAddress: {$ref: '#/components/schemas/BillingAddress'}
    EnhancedDataServiceRequest:
      x-model-version: 1.0
      properties:
        amount: {$ref: '#/components/schemas/Amount'}
        source: {$ref: '#/components/schemas/Source'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        dynamicDescriptors: {$ref: '#/components/schemas/DynamicDescriptors'}
        billingAddress: {$ref: '#/components/schemas/BillingAddress'}
        shippingAddress: {$ref: '#/components/schemas/ShippingAddress'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        customer: {$ref: '#/components/schemas/Customer'}
        fraudAttributes: {$ref: '#/components/schemas/FraudAttributes'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
        orderData: {$ref: '#/components/schemas/OrderData'}
        splitTender: {$ref: '#/components/schemas/SplitTender'}
    FraudAttributes:
      x-model-version: 1.0
      description: Fraud related Parameters
      properties:
        riskScore: {type: integer, maximum: 100, description: 'Merchant’s defined
            fraud risk score for this transaction 0-100, 100 being highest risk.',
          example: '100'}
        suspicious: {type: boolean, description: 'If the merchant detected suspicious
            activity on card, account or device used for this transaction in prior
            60 days.', example: 'true'}
    SplitTender:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Guides/Split-Tender.md">Split
        tender</a> information passed during a transaction request.
      properties:
        splitTenderId: {type: string, maxLength: 1024, description: A partially-authorized
            transaction will generate a split tender ID. Subsequent transactions to
            complete the authorization should include the split tender ID so that
            all the transactions comprising that authorization can be linked., example: '12423434'}
        splitTenderMethod:
          type: array
          items: {$ref: '#/components/schemas/SplitTenderMethod'}
    SplitTenderMethod:
      x-model-version: 1.0
      properties:
        type:
          type: string
          maxLength: 32
          description: "Identifies the additional forms of payment used as part of\
            \ this order.\n\nValid Values:         \n* CREDIT_CARD\n* COUPON\n* GIFT_CARD\n\
            * STORE_CREDIT\n* DEBIT_CARD\n* EBT_SNAP\n"
          example: CREDIT_CARD
        count: {type: integer, maximum: 99, description: Number of accounts presented
            of this type., example: '2'}
        amount: {$ref: '#/components/schemas/Amount'}
    EnhancedDataServiceResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
    ReturnOptimizerRequest:
      x-model-version: 1.0
      properties:
        source: {$ref: '#/components/schemas/Source'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
    ReturnOptimizerResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        transactionScoreResponse: {$ref: '#/components/schemas/TransactionScoreResponse'}
    TransactionScoreResponse:
      x-model-version: 1.0
      description: Response containing return score details
      properties:
        invocationId: {type: string, description: Unique Identifier associated with
            the invocation response, example: ad0760bf-2db5-4ba9-b294-0d2241ff58f8}
        consumerType:
          type: string
          description: |
            Indicator for new or returning customer. myReturnScoreDetails and peerReturnScoreDetails will not be present for New Customers

            Valid Values:
            * New
            * Existing
          example: Existing
        modelId: {type: string, description: Model Identifier, example: 1.0.0}
        myReturnScoreDetails: {$ref: '#/components/schemas/MyReturnScoreDetails'}
        peerReturnScoreDetails: {$ref: '#/components/schemas/ReturnScoreDetails'}
    MyReturnScoreDetails:
      x-model-version: 1.0
      description: My Return Score Details
      allOf:
      - {$ref: '#/components/schemas/ReturnScoreDetails'}
      - type: object
        properties:
          score: {maximum: 100, minimum: 0, type: integer, description: Normalized
              score of a return probability. 0 indicating a low returner and 100 indicating
              a high returner., example: '100'}
          returnProbabilityProfile:
            type: string
            description: |
              Bucketed return probability profile

              Valid Values:
              * High
              * Low
            example: High
    ReturnScoreDetails:
      x-model-version: 1.0
      description: Return Score Details
      properties:
        averageReturnValue: {type: number, description: Average amount value returned
            (ARV), example: '45.53'}
        averageOrderValue: {type: number, description: Average amount value spent
            (AOV), example: '275.25'}
        percentSalesReturned: {maximum: 1, minimum: 0, type: number, description: '%
            of sales returned (by Amount)', example: '0.3'}
  examples:
    ApplePayRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: ApplePay
          data: hbreWcQg980mUoUCfuCoripnHO210lvtizOFLV6PTw1DjooSwik778bH/qgK2pKelDTiiC8eXeiSwSIfrTPp6tq9x8Xo2H0KYAHCjLaJtoDdnjXm8QtC3m8MlcKAyYKp4hOW6tcPmy5rKVCKr1RFCDwjWd9zfVmp/au8hzZQtTYvnlje9t36xNy057eKmA1Bl1r9MFPxicTudVesSYMoAPS4IS+IlYiZzCPHzSLYLvFNiLFzP77qq7B6HSZ3dAZm244v8ep9EQdZVb1xzYdr6U+F5n1W+prS/fnL4+PVdiJK1Gn2qhiveyQX1XopLEQSbMDaW0wYhfDP9XM/+EDMLaXIKRiCtFry9nkbQZDjr2ti91KOAvzQf7XFbV+O8i60BSlI4/QRmLdKHmk/m0rDgQAoYLgUZ5xjKzXpJR9iW6RWuNYyaf9XdD8s2eB9aBQ=
          header: {applicationDataHash: 94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2,
            ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEvR+anQg6pElOsCnC3HIeNoEs2XMHQwxuy9plV1MfRRtIiHnQ6MyOS+1FQ7WZR2bVAnHFhPFaM9RYe7/bynvVvg==,
            publicKeyHash: KRsyW0NauLpN8OwKr+yeu4jl6APbgW05/TYo5eGW0bQ=, transactionId: '31323334353637',
            signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFSMIIBTgIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTkwNjA3MTg0MTIxWjAvBgkqhkiG9w0BCQQxIgQg0PLaZU4YWZqtP9t/ygv9XIS/5ngU6FlGjpvyK6VFXVMwCgYIKoZIzj0EAwIERjBEAiBTNmQEPyc3aMm4Mwa0riD3dNdSc9aAhslj65Us8b3aKwIgNSc/y+CWpsr8qDln0fZK6ZD/LWPMxofQedlPy7Q6gY8AAAAAAAA=,
            version: EC_v1, applicationData: VEVTVA==, merchantId: merchant.com.fapi.tcoe.applepay,
            merchantPrivateKey: MHcCAQEE234234234opsmasdsalsamdsad/asdsad/asdasd/asdAwEHoUQDQgAaslkdsad8asjdnlkm23leu9jclaskdas/masr4+/as34+4fh/sf64g/nX35fs5w==}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: ECOM, eciIndicator: SECURE_ECOM}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    ApplePayTokenRequest:
      value:
        source:
          sourceType: ApplePay
          data: hbreWcQg980mUoUCfuCoripnHO210lvtizOFLV6PTw1DjooSwik778bH/qgK2pKelDTiiC8eXeiSwSIfrTPp6tq9x8Xo2H0KYAHCjLaJtoDdnjXm8QtC3m8MlcKAyYKp4hOW6tcPmy5rKVCKr1RFCDwjWd9zfVmp/au8hzZQtTYvnlje9t36xNy057eKmA1Bl1r9MFPxicTudVesSYMoAPS4IS+IlYiZzCPHzSLYLvFNiLFzP77qq7B6HSZ3dAZm244v8ep9EQdZVb1xzYdr6U+F5n1W+prS/fnL4+PVdiJK1Gn2qhiveyQX1XopLEQSbMDaW0wYhfDP9XM/+EDMLaXIKRiCtFry9nkbQZDjr2ti91KOAvzQf7XFbV+O8i60BSlI4/QRmLdKHmk/m0rDgQAoYLgUZ5xjKzXpJR9iW6RWuNYyaf9XdD8s2eB9aBQ=
          header: {applicationDataHash: 94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2,
            ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEvR+anQg6pElOsCnC3HIeNoEs2XMHQwxuy9plV1MfRRtIiHnQ6MyOS+1FQ7WZR2bVAnHFhPFaM9RYe7/bynvVvg==,
            publicKeyHash: KRsyW0NauLpN8OwKr+yeu4jl6APbgW05/TYo5eGW0bQ=, transactionId: '31323334353637',
            signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFSMIIBTgIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTkwNjA3MTg0MTIxWjAvBgkqhkiG9w0BCQQxIgQg0PLaZU4YWZqtP9t/ygv9XIS/5ngU6FlGjpvyK6VFXVMwCgYIKoZIzj0EAwIERjBEAiBTNmQEPyc3aMm4Mwa0riD3dNdSc9aAhslj65Us8b3aKwIgNSc/y+CWpsr8qDln0fZK6ZD/LWPMxofQedlPy7Q6gY8AAAAAAAA=,
            version: EC_v1, applicationData: VEVTVA==, merchantId: merchant.com.fapi.tcoe.applepay,
            merchantPrivateKey: MHcCAQEE234234234opsmasdsalsamdsad/asdsad/asdasd/asdAwEHoUQDQgAaslkdsad8asjdnlkm23leu9jclaskdas/masr4+/as34+4fh/sf64g/nX35fs5w==}
        transactionInteraction: {eciIndicator: SECURE_ECOM}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    ApplePayChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: DecryptedWallet
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
          cavv: 01ade6ae340005c681c3a1890418b53000020000
          wallet: APPLE_PAY
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    ApplePayTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentToken
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: fiserv
          responseCode: '000000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
    GooglePayRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source: {sourceType: GooglePay, data: '{"encryptedMessage":"NZF5Vs2YaI/t25L/1+dp6tuUOvra9pszs2antqcbHJbkjMMXZSR7innTFJxNR5DNnf4GheWIso8n8MA1q1zqWCU8MaK9bnNcHxvROpvfsU3SCCjkfG2k2M4/RYMjs+lxYW/nEtIIKVVOkdjAj4pI/Wth8xQXphn7hDNiyp9tIydmlPZVnzkXI6mVbpHbbkaCCD4TNPhFBDtx0VafqRjbb2Wt3EDazTx3dHdd+qVX5Xj8/BPb1cmwHWvrDw/dQRk/E0TsP+erLjhLaZ8l2EycxeUEZYqSX5w77S8vd3sw8WXuOCMsU8sx0Bs5IY7hohq67qNDxckP1fcBD4OYdGP6bumJR0J6pJxD5iRh5lFSjN6zNLRI77ylxWL6DwHoe/pPdCc0n6cV0Nt0RJMLjerr12BLuhv4bPQ3QB6jxnbt8JK/EndgIG8xpFyNkKlRUyxAKM22/ZSy45d6qtZIKLXRqDTr9JMk8uJ53QRZtQx8k9KkRZGC+GM2sD+Z75fxc0Yye7l6H0D8p5z1iEzWnYHxd0pmY/cOYEJxnOOdD573QmE6ikFcyaAw3XnCyul/EA\u003d\u003d","ephemeralPublicKey":"BAhnPIWrCXWv/45GFK0mNAvN9w+NFBs3tQji0wTUS2+hiFKsZujG5wRd4JXGmxhG+k3bglYk544ILBNdDpsAh+o\u003d","tag":"liBzKfGcO+FclHg7XuqRJxR/8EJShRp9/APab0Sho08\u003d"}',
          signature: MEUCIFWTRWUZAOM5nfJC79FtJm56olnbwG4H5uWWxAUWAquiAiEA24j/BcOroeISsdJzYsyoVi8wzu4tnmKw+jdsGfuvPko=,
          version: ECv2, merchantId: 676174657761793A666972737464617461, merchantPrivateKey: DCEDF9AF72707BFD9C5231ECB9EAD040F3B4BA2AB608579736E37FDBA8884175566BDA410997B2575EA7E76AC54BBDB99DD0F74DD0A648BC0F6A2F06909E79A0F15D779F1A80CFC1EC9612476204C43A,
          signingVerificationKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIsFro6K+IUxRr4yFTOTO+kFCCEvHo7B9IOMLxah6c977oFzX/beObH4a9OfosMHmft3JJZ6B3xpjIb8kduK4/A==}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: ECOM, eciIndicator: SECURE_ECOM}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    GooglePayTokenRequest:
      value:
        source: {sourceType: GooglePay, data: '{"encryptedMessage":"NZF5Vs2YaI/t25L/1+dp6tuUOvra9pszs2antqcbHJbkjMMXZSR7innTFJxNR5DNnf4GheWIso8n8MA1q1zqWCU8MaK9bnNcHxvROpvfsU3SCCjkfG2k2M4/RYMjs+lxYW/nEtIIKVVOkdjAj4pI/Wth8xQXphn7hDNiyp9tIydmlPZVnzkXI6mVbpHbbkaCCD4TNPhFBDtx0VafqRjbb2Wt3EDazTx3dHdd+qVX5Xj8/BPb1cmwHWvrDw/dQRk/E0TsP+erLjhLaZ8l2EycxeUEZYqSX5w77S8vd3sw8WXuOCMsU8sx0Bs5IY7hohq67qNDxckP1fcBD4OYdGP6bumJR0J6pJxD5iRh5lFSjN6zNLRI77ylxWL6DwHoe/pPdCc0n6cV0Nt0RJMLjerr12BLuhv4bPQ3QB6jxnbt8JK/EndgIG8xpFyNkKlRUyxAKM22/ZSy45d6qtZIKLXRqDTr9JMk8uJ53QRZtQx8k9KkRZGC+GM2sD+Z75fxc0Yye7l6H0D8p5z1iEzWnYHxd0pmY/cOYEJxnOOdD573QmE6ikFcyaAw3XnCyul/EA\u003d\u003d","ephemeralPublicKey":"BAhnPIWrCXWv/45GFK0mNAvN9w+NFBs3tQji0wTUS2+hiFKsZujG5wRd4JXGmxhG+k3bglYk544ILBNdDpsAh+o\u003d","tag":"liBzKfGcO+FclHg7XuqRJxR/8EJShRp9/APab0Sho08\u003d"}',
          signature: MEUCIFWTRWUZAOM5nfJC79FtJm56olnbwG4H5uWWxAUWAquiAiEA24j/BcOroeISsdJzYsyoVi8wzu4tnmKw+jdsGfuvPko=,
          version: ECv2, merchantId: 676174657761793A666972737464617461, merchantPrivateKey: DCEDF9AF72707BFD9C5231ECB9EAD040F3B4BA2AB608579736E37FDBA8884175566BDA410997B2575EA7E76AC54BBDB99DD0F74DD0A648BC0F6A2F06909E79A0F15D779F1A80CFC1EC9612476204C43A,
          signingVerificationKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIsFro6K+IUxRr4yFTOTO+kFCCEvHo7B9IOMLxah6c977oFzX/beObH4a9OfosMHmft3JJZ6B3xpjIb8kduK4/A==}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: ECOM, eciIndicator: SECURE_ECOM}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    GooglePayChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: DecryptedWallet
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
          cavv: 01ade6ae340005c681c3a1890418b53000020000
          wallet: GOOGLE_PAY
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    GooglePayTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentToken
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: fiserv
          responseCode: '000000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
    PaymentCardRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019', expirationMonth: '02', expirationYear: '2035'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: ECOM, eciIndicator: CHANNEL_ENCRYPTED}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentCardForcedRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019', expirationMonth: '02', expirationYear: '2035'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012',
          approvalCode: OK5882}
        transactionInteraction: {origin: ECOM, eciIndicator: CHANNEL_ENCRYPTED}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentCardTokenRequest:
      value:
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019', expirationMonth: '02', expirationYear: '2035'}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: ECOM, eciIndicator: CHANNEL_ENCRYPTED}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentCardInfoRequest:
      value:
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019'}
    PaymentCardVerifyRequest:
      value:
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019', expirationMonth: '02', expirationYear: '2035',
            securityCode: '123', securityCodeIndicator: PROVIDED}
        billingAddress:
          firstName: Jane
          lastName: Smith
          address: {street: Main Street, houseNumberOrName: '123', city: Sandy Springs,
            stateOrProvince: GA, postalCode: '30303', country: US}
    PaymentCardEDSRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentCard
          card: {bin: '400555', last4: '0019'}
        transactionDetails:
          merchantOrderId: '123456789012'
          deviceFingerPrint:
          - dataStatic: {deviceId: '00:1B:44:11:3A:B7'}
            dataDynamic: {latitude: 13.0827 N, longitude: 80.2707 E, ipAddress: 172.27.37.221}
        customer:
          email: customer@somedomain.com
          phone:
          - {countryCode: '1', phoneNumber: 123-123-1234, type: MOBILE}
        splitTender:
          splitTenderMethod:
          - type: CREDIT_CARD
            count: '1'
            amount: {total: '7.04'}
          - type: GIFT_CARD
            count: '1'
            amount: {total: '5.00'}
        shippingAddress:
          firstName: Jane
          lastName: Doe
          address: {street: Main Street, houseNumberOrName: '123', recipientNameOrAddress: Accounting
              Department, city: Sandy Springs, stateOrProvince: GA, postalCode: '30303',
            country: US}
        merchantDetails: {merchantId: '1234567890123456', alternateMerchantId: '1234567890123456'}
    PaymentCardChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentTokens:
        - {tokenData: '8519371934460009', tokenSource: TRANSARMOR, tokenResponseCode: '000',
          tokenResponseDescription: SUCCESS}
        - {tokenData: '8519371934460010', tokenSource: CHASE, tokenResponseCode: '000',
          tokenResponseDescription: SUCCESS}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentCardCreditResponse:
      value:
        gatewayResponse:
          transactionType: CREDIT
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentCardTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentToken
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: fiserv
          responseCode: '000000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
    PaymentCardInfoResponse:
      value:
        gatewayResponse:
          transactionType: INFORMATION
          transactionState: SUCCESS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        cardDetails:
        - {brand: VISA, brandProductId: VISA_BUSINESS, cardFunction: CREDIT, commercialCard: CORPORATE,
          issuerCountry: US, issuerName: First National Bank of Omaha}
    PaymentCardVerifyResponse:
      value:
        gatewayResponse:
          transactionType: VERIFICATION
          transactionState: VERIFIED
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: fiserv
          responseCode: '000000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
            avsSecurityCodeResponse:
              streetMatch: EXACT_MATCH
              postalCodeMatch: EXACT_MATCH
              securityCodeMatch: MATCHED
              association: {avsCode: Y, securityCodeResponse: M}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    PaymentCardEDSResponse:
      value:
        gatewayResponse:
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db, clientRequestId: '4345791',
            transactionId: '84356531338'}
        processorResponseDetails: {referenceNumber: 845366457890-TODO}
    PaymentTokenRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentToken
          tokenData: '1234560000000019'
          tokenSource: TRANSARMOR
          declineDuplicates: false
          card: {expirationMonth: '10', expirationYear: '30'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: ECOM, eciIndicator: CHANNEL_ENCRYPTED}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentTokenForcedRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentToken
          tokenData: '1234560000000019'
          tokenSource: TRANSARMOR
          declineDuplicates: false
          card: {expirationMonth: '10', expirationYear: '30'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012',
          approvalCode: OK5882}
        transactionInteraction: {origin: ECOM, eciIndicator: CHANNEL_ENCRYPTED}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentTokenInfoRequest:
      value:
        source:
          sourceType: PaymentToken
          tokenData: '1234560000000019'
          tokenSource: TRANSARMOR
          card: {expirationMonth: '10', expirationYear: '30'}
    PaymentTokenVerifyRequest:
      value:
        source:
          sourceType: PaymentToken
          tokenData: '1234560000000019'
          tokenSource: TRANSARMOR
          card: {expirationMonth: '10', expirationYear: '30', securityCode: '123',
            securityCodeIndicator: PROVIDED}
        billingAddress:
          firstName: Jane
          lastName: Smith
          address: {street: Main Street, houseNumberOrName: '123', city: Sandy Springs,
            stateOrProvince: GA, postalCode: '30303', country: US}
    PaymentTokenEDSRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source: {sourceType: PaymentToken, tokenData: '1234560000000019'}
        transactionDetails:
          merchantOrderId: '123456789012'
          deviceFingerPrint:
          - dataStatic: {deviceId: '00:1B:44:11:3A:B7'}
            dataDynamic: {latitude: 13.0827 N, longitude: 80.2707 E, ipAddress: 172.27.37.221}
        customer:
          email: customer@somedomain.com
          phone:
          - {countryCode: '1', phoneNumber: 123-123-1234, type: MOBILE}
        splitTender:
          splitTenderMethod:
          - type: CREDIT_CARD
            count: '1'
            amount: {total: '7.04'}
          - type: GIFT_CARD
            count: '1'
            amount: {total: '5.00'}
        shippingAddress:
          firstName: Jane
          lastName: Doe
          address: {street: Main Street, houseNumberOrName: '123', recipientNameOrAddress: Accounting
              Department, city: Sandy Springs, stateOrProvince: GA, postalCode: '30303',
            country: US}
        merchantDetails: {merchantId: '1234567890123456', alternateMerchantId: '1234567890123456'}
    PaymentTokenChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentToken
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentTokenCreditResponse:
      value:
        gatewayResponse:
          transactionType: CREDIT
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentToken
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentTokenInfoResponse:
      value:
        gatewayResponse:
          transactionType: INFORMATION
          transactionState: SUCCESS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        cardDetails:
        - {brand: VISA, brandProductId: VISA_BUSINESS, cardFunction: CREDIT, commercialCard: CORPORATE,
          issuerCountry: US, issuerName: First National Bank of Omaha}
    PaymentTokenVerifyResponse:
      value:
        gatewayResponse:
          transactionType: VERIFICATION
          transactionState: VERIFIED
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentToken
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: fiserv
          responseCode: '000000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
            avsSecurityCodeResponse:
              streetMatch: EXACT_MATCH
              postalCodeMatch: EXACT_MATCH
              securityCodeMatch: MATCHED
              association: {avsCode: Y}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    PaymentTokenEDSResponse:
      value:
        gatewayResponse:
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db, clientRequestId: '4345791',
            transactionId: '84356531338'}
        processorResponseDetails: {referenceNumber: 845366457890-TODO}
    Payment3DSRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: Payment3DS
          card: {cardData: '4005550000000019', expirationMonth: '02', expirationYear: '2035',
            securityCode: '123'}
          cavv: 01ade6ae340005c681c3a1890418b53000020000
          channel: BROWSER
          merchantIdentifier: '1234567890123456'
          version: 3DS2
          xid: '&x_MD5_Hash=abfaf1d1df004e3c27d5d2e05929b529&x_state=BC&x_reference_3=&x_auth_code=ET141870&x_fp_timestamp=1231877695'
          verificationResponse: PASSED_VALIDATION
          authenticationAttemptResult: uyt45t89cnwu3rhc98a4hterjklth4o8ctsrjzth4
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: ECOM, eciIndicator: SECURE_ECOM}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    Payment3DSTokenRequest:
      value:
        source:
          sourceType: Payment3DS
          card: {cardData: '4005550000000019', expirationMonth: '02', expirationYear: '2035',
            securityCode: '123'}
          cavv: 01ade6ae340005c681c3a1890418b53000020000
          channel: BROWSER
          merchantIdentifier: '1234567890123456'
          version: 3DS2
          xid: '&x_MD5_Hash=abfaf1d1df004e3c27d5d2e05929b529&x_state=BC&x_reference_3=&x_auth_code=ET141870&x_fp_timestamp=1231877695'
          verificationResponse: PASSED_VALIDATION
          authenticationAttemptResult: uyt45t89cnwu3rhc98a4hterjklth4o8ctsrjzth4
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: ECOM, eciIndicator: SECURE_ECOM}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    Payment3DSChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: DecryptedWallet
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    Payment3DSTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentToken
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: fiserv
          responseCode: '000000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
    PaymentEMVRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentEMV
          emvData: 0249F3704833A12329F1002AB34
          encryptionData: {encryptionType: RSA, encryptionTarget: TRACK_2, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: POS, posEntryMode: ICR_RELIABLE, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentEMVForcedRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentEMV
          emvData: 0249F3704833A12329F1002AB34
          encryptionData: {encryptionType: RSA, encryptionTarget: TRACK_2, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012',
          approvalCode: OK5882}
        transactionInteraction: {origin: POS, posEntryMode: ICR_RELIABLE, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentEMVTokenRequest:
      value:
        source:
          sourceType: PaymentEMV
          emvData: 0249F3704833A12329F1002AB34
          encryptionData: {encryptionType: RSA, encryptionTarget: TRACK_2, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: POS, posEntryMode: ICR_RELIABLE, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentEMVInfoRequest:
      value:
        source:
          sourceType: PaymentEMV
          emvData: 0249F3704833A12329F1002AB34
          encryptionData: {encryptionType: RSA, encryptionTarget: TRACK_2, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
    PaymentEMVVerifyRequest:
      value:
        source:
          sourceType: PaymentEMV
          emvData: 0249F3704833A12329F1002AB34
          encryptionData: {encryptionType: RSA, encryptionTarget: TRACK_2, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        billingAddress:
          firstName: Jane
          lastName: Smith
          address: {street: Main Street, houseNumberOrName: '123', city: Sandy Springs,
            stateOrProvince: GA, postalCode: '30303', country: US}
    PaymentEMVChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: POS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentEMV
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentEMVCreditResponse:
      value:
        gatewayResponse:
          transactionType: CREDIT
          transactionState: AUTHORIZED
          transactionOrigin: POS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentEMV
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentEMVTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: POS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentToken
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: fiserv
          responseCode: '000000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
    PaymentEMVInfoResponse:
      value:
        gatewayResponse:
          transactionType: INFORMATION
          transactionState: SUCCESS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        cardDetails:
        - {brand: VISA, brandProductId: VISA_BUSINESS, cardFunction: CREDIT, commercialCard: CORPORATE,
          issuerCountry: US, issuerName: First National Bank of Omaha}
    PaymentEMVVerifyResponse:
      value:
        gatewayResponse:
          transactionType: VERIFICATION
          transactionState: VERIFIED
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: fiserv
          responseCode: '000000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
            avsSecurityCodeResponse:
              streetMatch: EXACT_MATCH
              postalCodeMatch: EXACT_MATCH
              securityCodeMatch: MATCHED
              association: {avsCode: Y, securityCodeResponse: M}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    PaymentTrackRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentTrack
          encryptionData: {encryptionType: RSA, encryptionTarget: TRACK_2, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: POS, posEntryMode: EMV_FALLBACK_MAG, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentTrackForcedRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentTrack
          encryptionData: {encryptionType: RSA, encryptionTarget: TRACK_2, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012',
          approvalCode: OK5882}
        transactionInteraction: {origin: POS, posEntryMode: EMV_FALLBACK_MAG, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentTrackTokenRequest:
      value:
        source:
          sourceType: PaymentTrack
          encryptionData: {encryptionType: RSA, encryptionTarget: TRACK_2, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: POS, posEntryMode: EMV_FALLBACK_MAG, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentTrackInfoRequest:
      value:
        source:
          sourceType: PaymentTrack
          encryptionData: {encryptionType: RSA, encryptionTarget: TRACK_2, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
    PaymentTrackVerifyRequest:
      value:
        source:
          sourceType: PaymentTrack
          encryptionData: {encryptionType: RSA, encryptionTarget: TRACK_2, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        billingAddress:
          firstName: Jane
          lastName: Smith
          address: {street: Main Street, houseNumberOrName: '123', city: Sandy Springs,
            stateOrProvince: GA, postalCode: '30303', country: US}
    PaymentTrackChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: RETAIL
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentTrack
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentTrackCreditResponse:
      value:
        gatewayResponse:
          transactionType: CREDIT
          transactionState: AUTHORIZED
          transactionOrigin: RETAIL
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentTrack
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentTrackTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: RETAIL
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentToken
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: fiserv
          responseCode: '000000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
    PaymentTrackInfoResponse:
      value:
        gatewayResponse:
          transactionType: INFORMATION
          transactionState: SUCCESS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        cardDetails:
        - {brand: VISA, brandProductId: VISA_BUSINESS, cardFunction: CREDIT, commercialCard: CORPORATE,
          issuerCountry: US, issuerName: First National Bank of Omaha}
    PaymentTrackVerifyResponse:
      value:
        gatewayResponse:
          transactionType: VERIFICATION
          transactionState: VERIFIED
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentTrack
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: fiserv
          responseCode: '000000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
            avsSecurityCodeResponse:
              streetMatch: EXACT_MATCH
              postalCodeMatch: EXACT_MATCH
              securityCodeMatch: MATCHED
              association: {avsCode: Y, securityCodeResponse: M}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    ManualEntryRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentCard
          encryptionData: {encryptionType: RSA, encryptionTarget: MANUAL, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: POS, posEntryMode: EMV_FALLBACK, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    ManualEntryForcedRequest:
      value:
        amount: {total: '12.04', currency: USD}
        source:
          sourceType: PaymentCard
          encryptionData: {encryptionType: RSA, encryptionTarget: MANUAL, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012',
          approvalCode: OK5882}
        transactionInteraction: {origin: POS, posEntryMode: EMV_FALLBACK, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    ManualEntryTokenRequest:
      value:
        source:
          sourceType: PaymentCard
          encryptionData: {encryptionType: RSA, encryptionTarget: MANUAL, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: POS, posEntryMode: EMV_FALLBACK, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    ManualEntryInfoRequest:
      value:
        source:
          sourceType: PaymentCard
          encryptionData: {encryptionType: RSA, encryptionTarget: MANUAL, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
    ManualEntryVerifyRequest:
      value:
        source:
          sourceType: PaymentCard
          encryptionData: {encryptionType: RSA, encryptionTarget: MANUAL, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        billingAddress:
          firstName: Jane
          lastName: Smith
          address: {street: Main Street, houseNumberOrName: '123', city: Sandy Springs,
            stateOrProvince: GA, postalCode: '30303', country: US}
    ManualEntryChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: POS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    ManualEntryCreditResponse:
      value:
        gatewayResponse:
          transactionType: CREDIT
          transactionState: AUTHORIZED
          transactionOrigin: POS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    ManualEntryTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: RETAIL
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: fiserv
          responseCode: '000000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
    ManualEntryInfoResponse:
      value:
        gatewayResponse:
          transactionType: INFORMATION
          transactionState: SUCCESS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        cardDetails:
        - {brand: VISA, brandProductId: VISA_BUSINESS, cardFunction: CREDIT, commercialCard: CORPORATE,
          issuerCountry: US, issuerName: First National Bank of Omaha}
    ManualEntryVerifyResponse:
      value:
        gatewayResponse:
          transactionType: VERIFICATION
          transactionState: VERIFIED
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: fiserv
          responseCode: '000000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
            avsSecurityCodeResponse:
              streetMatch: EXACT_MATCH
              postalCodeMatch: EXACT_MATCH
              securityCodeMatch: MATCHED
              association: {avsCode: Y, securityCodeResponse: M}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    SecondaryRequest:
      value:
        amount: {total: '12.04', currency: USD}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    CancelResponse:
      value:
        gatewayResponse:
          transactionType: CANCEL
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    CaptureResponse:
      value:
        gatewayResponse:
          transactionType: CAPTURE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    RefundResponse:
      value:
        gatewayResponse:
          transactionType: REFUND
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: fiserv
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
