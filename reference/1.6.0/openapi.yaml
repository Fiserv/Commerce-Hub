openapi: 3.0.2
info: {title: Payments, description: This API Specification is designed to provide technical guidance required to consume and integrate with our APIs for payment processing., version: v1.3.0}
servers:
- {url: 'https://prod.api.fiservapps.com/ch/', description: Production}
- {url: 'https://cert.api.fiservapps.com/ch/', description: Sandbox}
paths:
  /payments/v1/charges:
    x-model-version: 1.0
    post:
      tags: [Payment Endpoint Definition]
      x-group-name: Payments
      x-proxy-name: Charges
      x-default-example: PaymentCard
      summary: Submit a charge transaction.
      description: |+
        Use this payload to originate a financial transaction based on the <code>captureFlag</code>
        
        * <a href="../docs?path=docs/Resources/API-Documents/Payments/Charges.md">Pre-Auth</a> = <i>false</i>
        * <a href="../docs?path=docs/Resources/API-Documents/Payments/Charges.md">Sale</a> = <i>true</i>
        * <a href="../docs?path=docs/Resources/API-Documents/Payments/Capture.md">Capture</a> = <i>true</i> with a <a href="../docs?path=docs/Resources/Master-Data/Reference-Transaction-Details.md">transaction identifier</a>
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ChargesRequest'
            examples:
              PaymentCard-Encrypted:
                summary: ChargesRequest Request with Encrypted PaymentCard,
                $ref: '#/components/examples/PaymentCardEncryptedRequest'
              PaymentEMV:
                summary: ChargesRequest with PaymentEMV
                $ref: '#/components/examples/PaymentEMVRequest'
              PaymentTrack:
                summary: ChargesRequest with PaymentTrack
                $ref: '#/components/examples/PaymentTrackRequest'
              ApplePay:
                summary: ChargesRequest with ApplePay
                $ref: '#/components/examples/ApplePayRequest'
              GooglePay:
                summary: ChargesRequest with GooglePay
                $ref: '#/components/examples/GooglePayRequest'
              Payment3DS:
                summary: ChargesRequest with Payment3DS
                $ref: '#/components/examples/Payment3DSRequest'
              PaymentToken:
                summary: ChargesRequest with PaymentToken
                $ref: '#/components/examples/PaymentTokenRequest'
              PaymentSession:
                summary: ChargesRequest with PaymentSession
                $ref: '#/components/examples/PaymentSessionRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ChargesResponse'
              examples:
                PaymentCard-Encrypted:
                  summary: ChargesRequest with encrypted PaymentCard,
                  $ref: '#/components/examples/PaymentCardChargesResponse'
                PaymentEMV:
                  summary: ChargesResponse with PaymentEMV
                  $ref: '#/components/examples/PaymentEMVChargesResponse'
                PaymentTrack:
                  summary: ChargesResponse with PaymentTrack
                  $ref: '#/components/examples/PaymentTrackChargesResponse'
                ApplePay:
                  summary: ChargesResponse with ApplePay
                  $ref: '#/components/examples/ApplePayChargesResponse'
                GooglePay:
                  summary: ChargesResponse with GooglePay
                  $ref: '#/components/examples/GooglePayChargesResponse'
                Payment3DS:
                  summary: ChargesResponse with Payment3DS
                  $ref: '#/components/examples/Payment3DSChargesResponse'
                PaymentToken:
                  summary: ChargesResponse with PaymentToken
                  $ref: '#/components/examples/PaymentTokenChargesResponse'
                PaymentSession:
                  summary: ChargesResponse with PaymentSession
                  $ref: '#/components/examples/PaymentCardChargesResponse'
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /payments/v1/cancels:
    x-model-version: 1.1
    post:
      tags:
      - Cancel Endpoint Definition
      x-group-name: 'Payments'
      x-proxy-name: 'Cancels'
      x-default-example: transactionId
      summary: Submit a cancel transaction.
      description: 'Use this payload to perform cancel a transaction (aka void).'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelRequest'
            examples:
              merchantTransactionId:
                summary: Cancel a transaction using Merchant Transaction ID
                $ref: '#/components/examples/SecondaryRequestWithReferenceMerchantTransactionId'
              transactionId:
                summary: Cancel a transaction using CommerceHub Transaction ID
                $ref: '#/components/examples/SecondaryRequestWithReferenceTransactionId'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CancelResponse'
              examples:
                merchantTransactionId:
                  summary: Cancel response using Merchant Transaction ID
                  $ref: '#/components/examples/CancelResponse'
                transactionId:
                  summary: Cancel response using Transaction ID
                  $ref: '#/components/examples/CancelResponse'   
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
  /payments/v1/refunds:
    x-model-version: 1.0
    post:
      tags:
      - Refund Endpoint Definition
      x-group-name: 'Payments'
      x-proxy-name: 'Refund'
      summary: Submit a refund transaction.
      description: 'Use this payload to perform a partial or full refund (aka credit/return). This will return funds to the customer.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RefundRequest'
            examples:
              merchantTransactionId:
                summary: Refund a transaction using Merchant Transaction ID
                $ref: '#/components/examples/SecondaryRequestWithReferenceMerchantTransactionId'
              transactionId:
                summary: Refund a transaction using CommerceHub Transaction ID
                $ref: '#/components/examples/SecondaryRequestWithReferenceTransactionId'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RefundResponse'
              examples:
                merchantTransactionId:
                  summary: Refund a transaction using Merchant Transaction ID
                  $ref: '#/components/examples/RefundResponse'
                transactionId:
                  summary: Refund a transaction using CommerceHub Transaction ID
                  $ref: '#/components/examples/RefundResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
  /payments-vas/v1/accounts/verification:
    x-model-version: 1.0
    post:
      tags:
        - Account Verification Endpoint Definition
      x-group-name: 'Payments VAS'
      x-proxy-name: 'Verification'
      summary: Verify a payment card or payment token.
      description: 'Use this payload to perform an account verification. This will check the validity and respond if an account is valid or not'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountVerificationRequest'
            examples:
              PaymentCard-Encrypted:
                summary: AccountVerificationRequest with encrypted PaymentCard
                $ref: '#/components/examples/PaymentCardEncryptedVerifyRequest'
              PaymentSession:
                summary: AccountVerificationRequest with PaymentSession
                $ref: '#/components/examples/PaymentSessionVerifyRequest'
              PaymentEMV:
                summary: AccountVerificationRequest with PaymentEMV
                $ref: '#/components/examples/PaymentEMVVerifyRequest'
              PaymentTrack:
                summary: AccountVerificationRequest with PaymentTrack
                $ref: '#/components/examples/PaymentTrackVerifyRequest'
              PaymentToken:
                summary: AccountVerificationRequest with PaymentToken
                $ref: '#/components/examples/PaymentTokenVerifyRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountVerificationResponse'
              examples:
                PaymentCard-Encrypted:
                  summary: AccountVerificationResponse with encrypted PaymentCard
                  $ref: '#/components/examples/PaymentCardVerifyResponse'
                PaymentSession:
                  summary: AccountVerificationResponse with PaymentSession
                  $ref: '#/components/examples/PaymentCardVerifyResponse'
                PaymentEMV:
                  summary: AccountVerificationResponse with PaymentEMV
                  $ref: '#/components/examples/PaymentEMVVerifyResponse'
                PaymentTrack:
                  summary: AccountVerificationResponse with PaymentTrack
                  $ref: '#/components/examples/PaymentTrackVerifyResponse'
                PaymentToken:
                  summary: AccountVerificationResponse with PaymentToken
                  $ref: '#/components/examples/PaymentTokenVerifyResponse'
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /payments-vas/v1/tokens:
    x-model-version: 1.0
    post:
      x-group-name: Payments VAS
      x-proxy-name: Tokenization
      x-default-example: PaymentCard
      summary: Create a payment token.
      description: Use this payload to create a payment token from a payment source.
      requestBody:
        required: true
        content:
          application/json:
            schema: {$ref: '#/components/schemas/TokenizationRequest'}
            examples:
              PaymentCard-Encrypted: {summary: TokenizationRequest with encrypted PaymentCard, $ref: '#/components/examples/PaymentCardEncryptedTokenRequest'}
              PaymentEMV: {summary: TokenizationRequest with PaymentEMV, $ref: '#/components/examples/PaymentEMVTokenRequest'}
              PaymentTrack: {summary: TokenizationRequest with PaymentTrack, $ref: '#/components/examples/PaymentTrackTokenRequest'}
              ApplePay: {summary: TokenizationRequest with ApplePay, $ref: '#/components/examples/ApplePayTokenRequest'}
              GooglePay: {summary: TokenizationRequest with GooglePay, $ref: '#/components/examples/GooglePayTokenRequest'}
              Payment3DS: {summary: TokenizationRequest with Payment3DS, $ref: '#/components/examples/PaymentCard3DSTokenizationRequest'}
              PaymentSession: {summary: TokenizationRequest with PaymentSession, $ref: '#/components/examples/PaymentSessionTokenRequest'}
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema: {$ref: '#/components/schemas/TokenizationResponse'}
              examples:
                PaymentCard-Encrypted: {summary: TokenizationRequest with encrypted PaymentCard, $ref: '#/components/examples/PaymentCardEncryptedTokenRequest'}
                PaymentEMV: {summary: TokenizationResponse with PaymentEMV, $ref: '#/components/examples/PaymentEMVTokenResponse'}
                PaymentTrack: {summary: TokenizationResponse with PaymentTrack, $ref: '#/components/examples/PaymentTrackTokenResponse'}
                ApplePay: {summary: TokenizationResponse with ApplePay, $ref: '#/components/examples/ApplePayTokenResponse'}
                GooglePay: {summary: TokenizationResponse with GooglePay, $ref: '#/components/examples/GooglePayTokenResponse'}
                Payment3DS: {summary: TokenizationResponse with Payment3DS, $ref: '#/components/examples/PaymentCard3DSTokenizationRequest'}
                PaymentSession: {summary: TokenizationResponse with PaymentSession, $ref: '#/components/examples/PaymentCardTokenResponse'}
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /daas/v1/enhanceddata:
    x-model-version: 1.0
    post:
      tags: [Enhanced Data Definition]
      x-group-name: Data Solutions
      x-proxy-name: Enhanced Data Service
      x-default-example: PaymentCard
      summary: Submit a EDS Request.
      description: Use this payload prior to a transaction to perform an Enhanced
        Data Service request for a payment card or payment token. This will be used
        by the issuer to make a more informed authorization decision.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EnhancedDataServiceRequest'
            examples:
              PaymentCard:
                summary: EDSRequest with PaymentCard
                $ref: '#/components/examples/PaymentCardEDSRequest'
              PaymentToken:
                summary: EDSRequest with PaymentToken
                $ref: '#/components/examples/PaymentTokenEDSRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EnhancedDataServiceResponse'
              examples:
                PaymentCard:
                  summary: EDSResponse with PaymentCard
                  $ref: '#/components/examples/PaymentCardEDSResponse'
                PaymentToken:
                  summary: EDSResponse with PaymentToken
                  $ref: '#/components/examples/PaymentTokenEDSResponse'
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /daas/v1/returnoptimizer:
    x-model-version: 1.0
    post:
      tags: [Return Optimizer Definition]
      x-group-name: Data Solutions
      x-proxy-name: Return Optimization Service
      x-default-example: PaymentToken
      summary: Submit a ROS request.
      description: Use this payload prior to a transaction to perform an Return Optimizer
        request for a PaymentToken. This will be used by the merchant
        to make a more informed authorization decision.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReturnOptimizerRequest'
            examples:
              PaymentCard:
                summary: ReturnOptimizerRequest with PaymentCard
                $ref: '#/components/examples/PaymentCardEDSRequest'
              PaymentToken:
                summary: ReturnOptimizerRequest with PaymentToken
                $ref: '#/components/examples/PaymentTokenEDSRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ReturnOptimizerResponse'
              examples:
                PaymentCard:
                  summary: ReturnOptimizerResponse with PaymentCard
                  $ref: '#/components/examples/PaymentCardEDSResponse'
                PaymentToken:
                  summary: ReturnOptimizerResponse with PaymentToken
                  $ref: '#/components/examples/PaymentTokenEDSResponse'
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /payments/v1/transaction-inquiry:
    x-model-version: 1.0
    post:
      tags:
        - Transaction Inquiry
      x-group-name: 'Payments'
      x-proxy-name: 'Inquiry'
      x-default-example: transactionId
      summary: Submit a transaction inquiry.
      description: 'Provides a Commerce Hub transaction and their attributes based on order identifier.' 
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TransactionInquiryRequest'
            examples:
              transactionId:
                summary: Transaction inquiry request using transactionID
                $ref: '#/components/examples/TransactionInquiryRequest'
              merchantOrderId:
                summary: Transaction inquiry request using merchantOrderID
                $ref: '#/components/examples/TransactionInquiryByMerchantOrderIdRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TransactionInquiryResponse'
              examples:
                transactionId:
                    summary: Transaction inquiry response from transactionID
                    $ref: '#/components/examples/TransactionInquiryResponse'
                merchantOrderId:
                    summary: Transaction inquiry response from merchantOrderID
                    $ref: '#/components/examples/TransactionInquiryByMerchantOrderIdResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /payments-vas/v1/security/credentials:
    x-model-version: 1.0
    post:
      tags:
        - Payment Security Endpoint
      x-group-name: 'Security'
      x-proxy-name: 'Credentials'
      x-default-example: Credentials
      summary: Request security credentials (access token).
      description: |+
        A credentials request is used for authorizing or submitting subsequent financial transactions.

        * Returns an <code>accessToken</code> used in creating an <a href="../docs?path=docs/Resources/API-Documents/Authentication-Header.md">authentication header</a>.
        * Returns a <code>sessionId</code> used with <a href="../docs?path=docs/Online-Mobile-Digital/Secure-Data-Capture/Secure-Data-Capture.md">Secure Data Capture</a>.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SecurityCredentialsRequest'
            examples:
              Credentials:
                summary: Security credentials request
                $ref: '#/components/examples/SecurityCredentialsRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityCredentialsResponse'
              examples:
                Credentials:
                  summary: Security credentials response
                  $ref: '#/components/examples/SecurityCredentialsResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /payments-vas/v1/accounts/information-lookup:
    x-model-version: 1.0
    post:
      tags:
        - Account Information Endpoint Definition
      x-group-name: 'Payments VAS'
      x-proxy-name: 'Information Lookup'
      x-default-example: PaymentCard
      summary: Lookup a payment card or payment token.
      description: 'Use this to look up card related information such as issuer country, card function and card brand associated with a card or token.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInformationRequest'
            examples:
              PaymentCard:
                summary: AccountInformationRequest with PaymentCard
                $ref: '#/components/examples/PaymentCardInfoRequest'
              PaymentEMV:
                summary: AccountInformationRequest with PaymentEMV
                $ref: '#/components/examples/PaymentEMVInfoRequest'
              PaymentTrack:
                summary: AccountInformationRequest with PaymentTrack
                $ref: '#/components/examples/PaymentTrackInfoRequest'
              ManualEntry:
                summary: AccountInformationRequest with manual entry PaymentCard
                $ref: '#/components/examples/ManualEntryInfoRequest'
              PaymentToken:
                summary: AccountInformationRequest with PaymentToken
                $ref: '#/components/examples/PaymentTokenInfoRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AccountInformationResponse'
              examples:
                PaymentCard:
                  summary: AccountInformationResponse with PaymentCard
                  $ref: '#/components/examples/PaymentCardInfoResponse'
                PaymentEMV:
                  summary: AccountInformationResponse with PaymentEMV
                  $ref: '#/components/examples/PaymentEMVInfoResponse'
                PaymentTrack:
                  summary: AccountInformationResponse with PaymentTrack
                  $ref: '#/components/examples/PaymentTrackInfoResponse'
                ManualEntry:
                  summary: AccountInformationResponse with maunal entry PaymentCard
                  $ref: '#/components/examples/ManualEntryInfoResponse'
                PaymentToken:
                  summary: AccountInformationResponse with PaymentToken
                  $ref: '#/components/examples/PaymentTokenInfoResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /payments-vas/v1/card-capture:
    x-model-version: 1.0
    post:
      summary: 'Submit a <a href="../docs?path=docs/Online-Mobile-Digital/Secure-Data-Capture/API/API-Only.md">merchant managed</a> card capture for use with Secure Card Capture'
      x-group-name: 'Payments VAS'
      x-proxy-name: 'Card Capture'
      x-default-example: PaymentCard
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CardCaptureRequest'
            examples:
              PaymentCard-Encrypted:
                summary: CardCapture Request with PaymentCard,
                $ref: '#/components/examples/PaymentCardCaptureRequest'
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CardCaptureResponse'
              examples:
                PaymentCard-Encrypted:
                  summary: CardCaptureResponse for PaymentCard
                  $ref: '#/components/examples/PaymentCardCaptureResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}

  /security/v1/keys/generate:
    x-model-version: 1.0
    post:
      tags:
        - Payment Security Endpoint
      x-group-name: 'Security'
      x-proxy-name: 'Generate Key'
      summary: Receives an encryption key request and returns the generated encryption key response.
      description: Generate a Multi-use encryption key.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptionKeyRequest'
            examples:
              Generate:
                summary: Generate Encryption Key Request
                $ref: '#/components/examples/EncryptionKeyRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionKeyResponse'
              examples:
                Generate:
                  summary: Generate Encryption Key Response
                  $ref: '#/components/examples/EncryptionKeyGenerateResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
  /security/v1/keys/{keyId}/revoke:
    x-model-version: 1.0
    post:
      tags:
        - Payment Security Endpoint
      x-group-name: 'Security'
      x-proxy-name: 'Revoke Key'
      summary: Revokes an encryption key using the key ID specified in the URL path
      description: Revoke a multi-use encryption key.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncryptionKeyRequest'
            examples:
              Revoke:
                summary: Revoke Encryption Key Request
                $ref: '#/components/examples/EncryptionKeyRequest'
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncryptionKeyResponse'
              examples:
                Revoke:
                  summary: Revoke Encryption Key Response
                  $ref: '#/components/examples/EncryptionKeyRevokedResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      - {$ref: '#/components/parameters/KeyIdParam'}

  /payments-vas/v1/3ds/authenticate:
    x-model-version: 1.0
    post:
      tags:
        - 3-D Secure Authentication Endpoint Definition
      x-group-name: '3-D Secure'
      x-proxy-name: 'Authentication'
      summary: Authenticate a given payment instrument.
      description: 'Use this payload to perform an account authentication for 3-D Secure.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreeDSAuthenticationRequest'
            examples:
              PaymentCard:
                summary: ThreeDSAuthenticationRequest with PaymentCard
                $ref: '#/components/examples/ThreeDSAuthenticationRequestPaymentCard'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreeDSAuthenticationResponse'
              examples:
                PaymentCard:
                  summary: ThreeDSAuthenticationResponse with PaymentCard
                  $ref: '#/components/examples/ThreeDSAuthenticationResponsePaymentCard'
                PaymentCard-Challenge:
                  summary: ThreeDSAuthenticationResponse with PaymentCard
                  $ref: '#/components/examples/ThreeDSAuthenticationResponsePaymentCardChallenge'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      - {$ref: '#/components/parameters/KeyIdParam'}

  /payments-vas/v1/accounts/gift-cards:
    x-model-version: 1.0
    post:
      tags:
        - Gift Card Operations Endpoint Definition
      x-group-name: 'Payments VAS'
      x-proxy-name: 'Gift Cards'
      summary: Submit a Gift card transaction.
      description: 'Use this endpoint to perform the following gift card operations; activations, reloads, deactivations, balance merges. Utilize the balance inquiry endpoint to verify a gift card balance.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GiftCardRequest'
            examples:
              CreateDigitalCard: 
                summary: Create Digital Gift Card Request
                $ref: '#/components/examples/CreateDigitalGiftCardRequest'
              Activate-Reactivate: 
                summary: GiftCardRequest with PaymentCard
                $ref: '#/components/examples/PaymentCardActivateCardRequest'
              Reload: 
                summary: GiftCardRequest with PaymentCard
                $ref: '#/components/examples/PaymentCardReloadRequest'
              Cashout: 
                summary: GiftCardRequest with PaymentCard
                $ref: '#/components/examples/PaymentCardCashoutRequest'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GiftCardResponse'
              examples:
                CreateDigitalCard: 
                  summary: Create Active Gift Card Response
                  $ref: '#/components/examples/CreateDigitalGiftCardResponse'
                Activate-Reactivate: 
                  summary: GiftCardResponse with PaymentCard 
                  $ref: '#/components/examples/PaymentCardActivateCardResponse'
                Reload: 
                  summary: GiftCardResponse with PaymentCard 
                  $ref: '#/components/examples/PaymentCardReloadResponse'
                Cashout: 
                  summary: GiftCardResponse with PaymentCard 
                  $ref: '#/components/examples/PaymentCardCashoutResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      - {$ref: '#/components/parameters/KeyIdParam'}

  /payments-vas/v1/3ds/device-data-initialize:
    x-model-version: 1.0
    post:
      tags:
        - Device Data Initialization Endpoint Definition
      x-group-name: '3-D Secure'
      x-proxy-name: 'Device Data Initialization'
      summary: Device data initialization with a 3DS Provider.
      description: 'Use this payload to initialize the device data collection process with 3DS provider.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreeDSDeviceDataInitializationRequest'
#            examples:
#              PaymentCard:
#                summary: ThreeDSDeviceDataInitializationRequest with PaymentCard
#                $ref: '#/components/examples/PaymentCardDeviceDataInitializationRequest'
#              PaymentSession: 
#                summary: ThreeDSDeviceDataInitializationRequest with PaymentSession
#                $ref: '#/components/examples/PaymentSessionDeviceDataInitializationRequest'
#              PaymentToken:
#                summary: ThreeDSDeviceDataInitializationRequest with PaymentToken
#                $ref: '#/components/examples/PaymentTokenDeviceDataInitializationRequest'
      responses:
        201: 
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreeDSDeviceDataInitializationResponse'
#              examples:
#                PaymentCard:
#                  summary: ThreeDSDeviceDataInitializationResponse with PaymentCard
#                  $ref: '#/components/examples/PaymentCardDeviceDataInitializationResponse'
#               PaymentSession: 
#                 summary: ThreeDSDeviceDataInitializationResponse with PaymentSession
#                  $ref: '#/components/examples/PaymentSessionDeviceDataInitializationResponse'
#                PaymentToken:
#                  summary: ThreeDSDeviceDataInitializationResponse with PaymentToken
#                  $ref: '#/components/examples/PaymentTokenDeviceDataInitializationResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      - {$ref: '#/components/parameters/KeyIdParam'}

  /payments-vas/v1/accounts/balance-inquiry:
    x-model-version: 1.0
    post:
      tags:
        - Balance Inquiry Endpoint Definition
      x-group-name: 'Payments VAS'
      x-proxy-name: 'Balance Inquiry'
      summary: Receives balance inquiry request and returns balance inquiry response.
      description: Provides the available balance for a payment source.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BalanceInquiryRequest'
            examples:
              Balance-Inquiry: 
                summary: Balance Inquiry with PaymentCard
                $ref: '#/components/examples/PaymentCardBalanceInquiryRequest'
      responses:
        200:
          description: Inquired
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BalanceInquiryResponse'
              examples: 
                Balance-Inquiry: 
                  summary: Balance Inquiry with PaymentCard
                  $ref: '#/components/examples/PaymentCardBalanceInquiryResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      - {$ref: '#/components/parameters/KeyIdParam'}
  
  /payments-vas/v1/3ds/verify:
    x-model-version: 1.0
    post:
      tags:
        - 3-D Secure Verification Endpoint Definition
      x-group-name: '3-D Secure'
      x-proxy-name: 'Verification'
      summary: Verify a challenge results with a 3DS Provider.
      description: 'Use this payload to verify a challenge results with 3DS provider.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ThreeDSVerificationRequest'
            examples:
              transactionId:
                summary: ThreeDSVerificationRequest with transactionId
                $ref: '#/components/examples/ThreeDSVerificationRequestTransactionId'
              merchantTransactionId:
                summary: ThreeDSVerificationRequest with merchantTransactionId
                $ref: '#/components/examples/ThreeDSVerificationRequestMerchantTransactionId'
      responses:
        201:
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ThreeDSVerificationResponse'
              examples:
                transactionId:
                  summary: ThreeDSVerificationResponse with transactionId
                  $ref: '#/components/examples/ThreeDSVerificationResponse'
                merchantTransactionId:
                  summary: ThreeDSVerificationResponse with merchantTransactionId
                  $ref: '#/components/examples/ThreeDSVerificationResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      - {$ref: '#/components/parameters/KeyIdParam'}

  /status:
    x-model-version: 1.0
    get:
      x-group-name: 'Health Check'
      x-proxy-name: 'Status'
      summary: Provides Commerce Hub Health Status.
      description: Use this API for retrieving the status of CommerceHub application as well as the error counts by products.
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HealthCheckStatusResponse'
              examples:
                HealthCheckStatus:
                  summary: Health Check Status Response.
                  $ref: '#/components/examples/HealthCheckStatusResponse'
        401:
          $ref: '#/components/responses/Unauthorized'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      - {$ref: '#/components/parameters/KeyIdParam'}

  /payments-vas/v1/accounts/currencies/dcc:
    x-model-version: 1.0
    post:
      tags:
        - Currencies Endpoint Definition
      x-group-name: 'Global Currency'
      x-proxy-name: 'Dynamic Currency Conversion'
      summary: Submit a currency conversion transaction.
      description: 'Use this payload to get the exchange rate and target amount for a Dynamic Currency Conversion (DCC) request'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DccRequest'
            examples:
              BIN-Rate:
                summary: DccRequest with PaymentCard
                $ref: '#/components/examples/PaymentCardDccRequest'
              Currency-Rate:
                summary: DccRequest with PaymentCard
                $ref: '#/components/examples/PaymentCardDccRequest'
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DccResponse'
              examples:
                PaymentCard-DCC:
                  summary: DccResponse with PaymentCard
                  $ref: '#/components/examples/DccResponse'
                CurrencyCode-DCC:
                  summary: DccResponse with PaymentCard
                  $ref: '#/components/examples/DccResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      - {$ref: '#/components/parameters/KeyIdParam'}

  /payments-vas/v1/partner-tokens:
    x-model-version: 1.0
    post:
      x-group-name: 'Accounts'
      x-proxy-name: 'Partner Tokens'
      summary: Create a partner payment token using a payment token
      description: 'Use this payload to create a partner payment token from a TransArmor token.'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerTokenizationRequest'
            examples:
              PaymentToken:
                summary: PartnerTokenizationRequest with PaymentToken,
                $ref: '#/components/examples/PartnerPaymentTokenRequest'
      responses:
        200:
          description: Success.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PartnerTokenizationResponse'
              examples:
                PaymentToken:
                  summary: PartnerTokenizationResponse with Payment Token
                  $ref: '#/components/examples/PartnerPaymentTokenResponse'
        400:
          $ref: '#/components/responses/BadRequest'
        401:
          $ref: '#/components/responses/Unauthorized'
        404:
          $ref: '#/components/responses/NotFound'
        408:
          $ref: '#/components/responses/RequestTimeout'
        415:
          $ref: '#/components/responses/UnsupportedMediaType'
        425:
          $ref: '#/components/responses/TooEarly'
        429:
          $ref: '#/components/responses/TooManyRequest'
        500:
          $ref: '#/components/responses/ServerError'
        503:
          $ref: '#/components/responses/ServiceUnavailable'
        504:
          $ref: '#/components/responses/GatewayTimeout'
      parameters:
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      - {$ref: '#/components/parameters/KeyIdParam'}

components:
  parameters:
    OrderIdParam:
      x-model-version: 1.0
      name: orderId
      schema: {
        type: string,
        default: "orderId"
      }
      in: path
      required: true
      description: Use this to perform secondary transaction, received from primary
        auth or sale.
    TransactionIdParam:
      x-model-version: 1.0
      name: transactionId
      schema: {
        type: string,
        default: "transactionId"
      }
      in: path
      required: true
      description: Use this to perform secondary transaction, received from primary
        auth or sale.
    WalletTypeParam:
      x-model-version: 1.0
      name: walletType
      schema: {
        type: string,
        default: "walletType"
      }
      in: path
      required: true
      description: |+
        Wallet type for which the keypair is to be generated.

        Valid Values:
        * ApplePay
        * SamsungPay
    KeyIdParam:
      x-model-version: 1.0
      name: keyId
      schema:
        type: string
      in: path
      required: true
      description: 'The identifier used to uniquely identify an encryption key'
    AuthorizationTokenTypeHeader:
      x-model-version: 1.0
      name: Auth-Token-Type
      schema: {
        type: string,
        default: "Auth-Token-Type"
      }
      in: header
      required: true
      description: Indicates authorization type HMAC, JWT, or AccessToken.
    AuthorizationHeader:
      x-model-version: 1.0
      name: Authorization
      schema: {
        type: string,
        default: "Authorization"
      }
      in: header
      required: true
      description: Authorization header used to ensure the request has not been tampered
        with during transmission. Valid encryption; HMAC, JWT, or AccessToken. For
        more information, refer to the supporting documentation on the Developer Portal.
    MessageDigestHeader:
      x-model-version: 1.0
      name: Message-Digest
      schema: {
        type: string,
        default: "Message-Digest"
      }
      in: header
      required: false
      description: Needed only from customer browser or app to the API in Hosted Payment
        Page requests.
    AcceptLanguageHeader:
      x-model-version: 1.0
      name: Accept-Language
      schema: {
        type: string,
        default: "Accept-Language"
      }
      in: header
      required: false
      description: The Accept Language header contains information about the language
        preference of a user. This HTTP header is useful to multilingual sites for
        deciding the best language to serve to the client. For example en-US or fr-CA.
    ContentTypeHeader:
      x-model-version: 1.0
      name: Content-Type
      schema:
        type: string
        enum: [application/json]
        default: application/json
      in: header
      required: true
      description: The content type. Valid value (application/json).
    ClientRequestIdHeader:
      x-model-version: 1.0
      name: Client-Request-Id
      schema: {
        type: string,
        default: "Client-Request-Id"
      }
      in: header
      required: true
      description: A client-generated ID for request tracking and signature creation,
        unique per request. This is also used for idempotency control. Recommended
        128-bit UUID format.
    TimestampHeader:
      x-model-version: 1.0
      name: Timestamp
      schema: {type: integer, format: int64}
      in: header
      required: true
      description: Epoch timestamp in milliseconds in the request from a client system.
        Used for authorization header generation and time limit (5 minutes).
    ApiKeyHeader:
      x-model-version: 1.0
      name: Api-Key
      schema: {
        type: string,
        default: "Api-Key"
      }
      in: header
      required: true
      description: API key provided to the merchant associating the requests with
        the appropriate app in the Developer Portal.
  responses:
    BadRequest:
      x-model-version: 1.0
      description: The request cannot be validated.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: GATEWAY, code: '105', field: amount.currency, message: Invalid
                amount or currency}
    Unauthorized:
      x-model-version: 1.0
      description: The request was unauthorized.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: ApiKey and/or Authentication supplied are invalid.}
    NotFound:
      x-model-version: 1.0
      description: The requested resource does not exist.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Resource not found.}
    RequestTimeout:
      x-model-version: 1.0
      description: The request was timed out due to not receiving the request in time.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Broken client connectivity.}
    UnsupportedMediaType:
      x-model-version: 1.0
      description: The media type is not supported.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Media type is not supported.}
    TooEarly:
      x-model-version: 1.0
      description: The request was sent too early.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: GATEWAY, message: The request was sent too early.}
    TooManyRequest:
      x-model-version: 1.0
      description: Too many request were sent.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Request volume is too high.}
    ServerError:
      x-model-version: 1.0
      description: An unexpected internal server error occurred.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: GATEWAY, message: Error sending request to Transarmor.}
    ServiceUnavailable:
      x-model-version: 1.0
      description: The service was unavailable.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: APIM, message: Service unavailable.}
    GatewayTimeout:
      x-model-version: 1.0
      description: The request timed out while waiting for a response.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: GATEWAY, message: The request timed out while waiting for the
                  response.}
  schemas:
    ErrorResponse:
      x-model-version: 1.0
      description: Response containing an error object.
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        error:
          type: array
          items:
            $ref: '#/components/schemas/Error'
        paymentTokens:
          type: array
          items:
            $ref: '#/components/schemas/ResponsePaymentToken'
        processorResponseDetails:
          $ref: '#/components/schemas/ProcessorResponseDetails'
    Error:
      x-model-version: 1.0
      description: Error information.
      properties:
        type: {description: 'The type of response either from the HOST, GATEWAY, NETWORK,
            or APIM.', type: string, example: HOST}
        code: {description: 'Error response code from the host, gateway or network.',
          type: string}
        field: {description: The property or attribute associated with the error.,
          type: string, example: source.sourceType}
        message: {description: Information specific to a property or attribute., type: string,
          example: Missing type ID property.}
        additionalInfo: {description: Additional info added by commerce hub in addition
            to error message returned by GATEWAY, type: string, example: 'The Reauthorization
            request was not successful and the Cancel of referenced authorization
            transaction was not processed, per Auth_before_Cancel configuration'}
    GatewayResponse:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Gateway-Response.md">gateway
        response</a> details.
      properties:
        transactionType: {type: string, maxLength: 256, description: Transaction type
            performed., example: CHARGE}
        transactionState: {type: string, maxLength: 256, description: Final state
            of the transaction., example: AUTHORIZED}
        transactionOrigin: {type: string, maxLength: 4, description: Transaction origin
            based on original request., example: ECOM}
        transactionProcessingDetails: {$ref: '#/components/schemas/TransactionProcessingDetails'}
    TransactionProcessingDetails:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Gateway-Response.md#transaction-processing-details">transaction
        response</a> details.
      properties:
        orderId: {type: string, maxLength: 40, description: Order identifier returned
            in the parameter orderId from a Charge transaction., example: R-3b83fca8-2f9c-4364-86ae-12c91f1fcf16}
        transactionTimestamp: {type: string, format: date-time, description: 'Date
            and time the transaction occurred in YYYY-MM-DDThh:mm:ssZ format.', example: '2016-04-16T16:06:05Z'}
        apiTraceId: {pattern: '^[a-f0-9]{32}$', type: string, maxLength: 32, description: Request
            identifier in API that can be used to request logs from the support team.,
          example: 1234567a1234567b1234567c1234567d}
        clientRequestId: {type: string, maxLength: 64, description: Echoes back the
            value in the request header for tracking., example: 30dd879c-ee2f-11db-8314-0800200c9a66}
        transactionId: {type: string, maxLength: 40, description: Unique identifier
            for each transaction on the gateway. This value will be populated for
            the secondary transaction from the path., example: '838916029301'}
 
    CardCaptureRequest:
      x-model-version: 1.0
      properties:
        source:
          $ref: '#/components/schemas/PaymentCard'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
          
    CardCaptureResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        cardDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardDetails'
        paymentToken:
          $ref: '#/components/schemas/ResponsePaymentToken'
        paymentTokens:
          type: array
          items:
            $ref: '#/components/schemas/ResponsePaymentToken'
        processorResponseDetails:
          $ref: '#/components/schemas/ProcessorResponseDetails'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
    
    TransactionInquiryRequest:
      x-model-version: 1.0
      properties:
        referenceTransactionDetails:
          $ref: '#/components/schemas/ReferenceTransactionDetails'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'

    TransactionInquiryResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        source:
          $ref: '#/components/schemas/Source'
        paymentReceipt:
          $ref: '#/components/schemas/PaymentReceipt'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddress'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        transactionInteraction:
          $ref: '#/components/schemas/TransactionInteraction'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        additionalDataCommon:
          $ref: '#/components/schemas/AdditionalDataCommon'
        transactionBatch:
          $ref: '#/components/schemas/TransactionBatch'
        networkDetails:
          $ref: '#/components/schemas/NetworkDetails'
        cardDetails:
          $ref: '#/components/schemas/CardDetails'
        paymentToken:
          $ref: '#/components/schemas/ResponsePaymentToken'
        paymentTokens:
          type: array
          items:
            $ref: '#/components/schemas/ResponsePaymentToken'
        storedCredentials:
          $ref: '#/components/schemas/StoredCredentials'
        authOptimizationDetails:
          $ref: '#/components/schemas/AuthOptimizationDetails'
        linkedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/LinkedTransactionDetails'
        error:
          type: array
          items:
            $ref: '#/components/schemas/Error'

    AccountInformationRequest:
      x-model-version: 1.0
      properties:
        source:
          $ref: '#/components/schemas/Source'
    AccountInformationResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        cardDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardDetails'
    ChargesRequest:
      x-model-version: 1.0
      properties:
        amount: {$ref: '#/components/schemas/Amount'}
        amountComponents:
          $ref: '#/components/schemas/AmountComponents'
        source: {$ref: '#/components/schemas/Source'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        orderData:
          $ref: '#/components/schemas/OrderData'
        referenceTransactionDetails: {$ref: '#/components/schemas/ReferenceTransactionDetails'}
        dynamicDescriptors: {$ref: '#/components/schemas/DynamicDescriptors'}
        billingAddress: {$ref: '#/components/schemas/BillingAddress'}
        shippingAddress: {$ref: '#/components/schemas/ShippingAddress'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        customer: {$ref: '#/components/schemas/Customer'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
        additionalData3DS:
          $ref: '#/components/schemas/AdditionalData3DS'
        splitSettlement:
          type: array
          items:
            $ref: '#/components/schemas/SplitSettlement'
    Phone:
      x-model-version: 1.0
      description: Customer <a href="../docs?path=docs/Resources/Master-Data/Customer-Details.md">phone</a>
        information.
      properties:
        countryCode: {type: string, maxLength: 4, description: ISO country code.,
          example: '91'}
        phoneNumber: {type: string, maxLength: 15, description: Contact phone number.,
          example: 123-123-1234}
        type:
          type: string
          maxLength: 16
          description: |+
            Indicates the type of phone number.

            Valid Values:
            * DAY
            * HOME
            * NIGHT
            * WORK
            * MOBILE
          example: DAY
    Address:
      x-model-version: 1.0
      description: Model for <a href="../docs?path=docs/Resources/Master-Data/Address.md">address</a>
        information.
      properties:
        street: {type: string, maxLength: 256, description: Street address., example: 123
            Main Street}
        houseNumberOrName: {type: string, maxLength: 256, description: 'Secondary
            address information, e.g. house number or name.', example: Apt 213}
        recipientNameOrAddress: {type: string, maxLength: 256, description: 'Tertiary
            address information e.g. recipient name, company name or address.', example: 'ATTN:
            Accounting Dept'}
        city: {type: string, maxLength: 256, description: City or locality., example: Sandy
            Springs}
        stateOrProvince: {type: string, maxLength: 256, description: State or province.,
          example: GA}
        postalCode: {type: string, maxLength: 10, description: ZIP code or postal
            code., example: 30303-0001}
        country: {type: string, maxLength: 256, description: 'ISO-3166-1 alpha-2,
            alpha-3, numeric or full country name.', example: US}
        county: {type: string, maxLength: 256, description: 'The 5-digit number or
            full county name identifying the U.S. county as defined by FIPS, indicating
            where the transaction occurred. Commonly used with EBT transactions.',
          example: '13121'}
        addressHistory:
          type: string
          maxLength: 32
          description: |+
            Update history of the address on file.

            Valid Values:
            * FIRST
            * LESS_THAN_30_DAYS
            * 30_60_DAYS
            * 60_90_DAYS
            * OVER_90_DAYS
          example: OVER_90_DAYS
    Amount:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Amount-Components.md">Amount</a>
        object to support the request for payment.
      properties:
        total: {type: number, maximum: 1.0E18, description: Sub-component values must
            add up to total amount., example: 13.50}
        currency: {type: string, maxLength: 3, description: ISO 3 Currency Format.,
          example: USD}
    Source:
      x-model-version: 1.0
      description: Payment <a href="../docs?path=docs/Resources/Guides/Payment-Sources/Source-Type.md">source</a>
        details.
      required: [sourceType]
      discriminator: {propertyName: sourceType}
      properties:
        sourceType:
          type: string
          maxLength: 256
          description: |+
            Payment source type for a transaction request.

            Valid Values:
            * <a href="../docs?path=docs/Online-Mobile-Digital/3D-Secure/3DSecure.md">3-D Secure</a>
            * <a href="../docs?path=docs/Online-Mobile-Digital/Wallets-AltPayments/Apple-Pay/Apple-Pay.md">ApplePay</a>
            * <a href="../docs?path=docs/Online-Mobile-Digital/Wallets-AltPayments/Google-Pay/Google-Pay.md">GooglePay</a>
            * <a href="../docs?path=docs/Resources/Guides/Payment-Sources/Payment-Card.md">PaymentCard</a>
            * <a href="../docs?path=docs/Resources/API-Documents/Payments_VAS/Payment-Token.md">PaymentToken</a>
            * <a href="../docs?path=docs/In-Person/Encrypted-Payments/EMV.md">PaymentEMV</a>
            * <a href="../docs?path=docs/In-Person/Encrypted-Payments/Track.md">PaymentTrack</a>
            * <a href="../docs?path=docs/Online-Mobile-Digital/Secure-Data-Capture/Secure-Data-Capture.md">PaymentSession</a>
          example: PaymentCard
    PaymentCard:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          encryptionData: {$ref: '#/components/schemas/EncryptionData'}
          pinBlock: {$ref: '#/components/schemas/PinBlock'}
    Card:
      x-model-version: 1.0
      description: Common <a href="../docs?path=docs/Resources/Master-Data/Card.md">card</a>
        data for a transaction request and response.
      properties:
        cardData: {type: string, maxLength: 256, description: Card number or encrypted
            data., example: '4005550000000019'}
        nameOnCard: {type: string, maxLength: 256, description: Cardholder name.,
          example: Jane Smith}
        expirationMonth: {pattern: '^(0[1-9]|1[012])$', type: string, description: 2-digit
            expiration month., example: '05'}
        expirationYear: {pattern: '^[0-9]{4}$', type: string, maxLength: 4, description: 4-digit
            expiration year., example: '2035'}
        securityCode: {type: string, maxLength: 4, description: 'Card Security Code
            (CSC), Card Verification Data (CVD), Card Verification Number (CVN), Card
            Verification Value (CVV), Card Verification Code (CVC), Verification Code
            (V-code or V code), or Signature Panel Code (SPC).', example: '111'}
        securityCodeIndicator:
          type: string
          maxLength: 15
          description: |+
            Indicates how the security code is passed.

            Valid Values:
            * NOT_SUPPORTED (Default)
            * PROVIDED
            * VALUE_ILLEGIBLE
            * NOT_AVAILABLE
          example: PROVIDED
        bin: {type: string, maxLength: 8, description: 'Bank Identification Number
            (BIN), the initial set of four to six numbers of the Primary Account Number
            (PAN). The BIN identifies the issuer and Level 2/3 qualifications.', example: '400555'}
        last4: {type: string, maxLength: 4, description: Contains the last four digits
            of the Primary Account Number (PAN)., example: '0019'}
        scheme: {type: string, maxLength: 256, description: Card brand., example: VISA}
        beginningBalance: {type: number, maximum: 1.0E18, description: Beginning card
            balance., example: 1.00}
        endingBalance: {type: number, maximum: 1.0E18, description: Ending card balance.,
          example: 0.10}

    EncryptionData:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Encryption-Data.md">Encrypted
        Data</a> for EMV, Track, or Manual Entry transactions.
      properties:
        encryptionType:
          type: string
          maxLength: 256
          description: |+
            Encryption type to be passed.

            Valid Values:
            * RSA (Default)
            * VERIFONE
            * VERIFONE_VDR
            * AES_DUKPT
            * TDES_DUKPT
            * ON_GUARD
            * FPE
          example: RSA
        encryptionTarget:
            type: string
            maxLength: 256
            description: '<a href="../docs?path=docs/Resources/Master-Data/Encryption-Data.md#encryption-target">Encryption target</a> identifies the data based on how it is entered into the POS device or terminal, website, virtual terminal (VPOS), or mobile app or device.'
            example: 'MANUAL'
        encryptionBlock: {type: string, maxLength: 2000, description: This field contains
            the track data or card number provided in encrypted form., example: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==}
        deviceType:
          type: string
          maxLength: 256
          description: |+
            Device type need to be sent for TDES and AES encrypted track data.

            Valid values:
            * INGENICO (Default)
            * RPXXX
            * CLOVER
            * NCR
            * NCRTLV
          example: INGENICO
        securitykeyUpdateIndicator: {type: boolean, description: 'Provided in response.
            POS is expected to download updated key, key cert.', example: 'false'}
        keyId: {type: string, maxLength: 40, description: Needs to be passed if track
            data is encrypted., example: '88000000022'}
        encryptedKey: {type: string, maxLength: 2000, description: Merchant or device
            defined encryption key required for decryption of encrypted <code>cardData</code>.
            Normally used in card not present integrations e.g. Mobile device., example: NdCmVw5}
    PinBlock:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Pin-Block.md">Encrypted
        PIN Block</a> for Debit, EBT, or Credit transactions.
      properties:
        encryptedPin: {type: string, maxLength: 2000, description: 'This field contains
            the Encrypted PIN Block for Debit, EBT, Fleet or Credit transactions.',
          example: F5f36kA...}
        keySerialNumber: {type: string, maxLength: 256, description: 'This field is
            used to create the base PIN encryption key for DUKPT PIN Debit, EBT, Fleet
            and Credit Transactions.', example: 15f36kA...}
        pinEncryptionWorkingKey: {type: string, maxLength: 2000, description: Terminal
            PIN Encryption working key (TKPE). A PIN Encryption Key is a used to protect
            PINs as they are transmitted., example: A23f36kA...}
    PaymentEMV:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          emvData: {type: string, description: EMV/Chip data is a series of "Tag/Length/Value"
              combination for chip card processing., example: 0249F3704833A12329F1002AB34}
          encryptionData: {$ref: '#/components/schemas/EncryptionData'}
          pinBlock: {$ref: '#/components/schemas/PinBlock'}
    PaymentTrack:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          encryptionData: {$ref: '#/components/schemas/EncryptionData'}
          pinBlock: {$ref: '#/components/schemas/PinBlock'}
          track1Data: {type: string, maxLength: 79, description: 'Information such
              as the Expiration Date, Primary Account Number, etc. encoded on Track
              1 magnetic stripe.', example: '%B4445222299990007^LAST/FIRST^14125025432198712345Q?'}
          track2Data: {type: string, maxLength: 40, description: 'Information such
              as the Expiration Date, Primary Account Number, etc. encoded on Track
              2 magnetic stripe.', example: ';4445222299990007=14125025432198712345?'}
    PaymentToken:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          tokenData: {type: string, maxLength: 2048, description: Token created from
              the payment source., example: '1234123412340019'}
          PARId: {type: string, maxLength: 256, description: Payment Account Reference
              ID (PARID) for tokens. Ties transactions with multiple payment sources
              or tokens to a customer.}
          declineDuplicates: {type: boolean, description: Identifies if a duplicate
              create token should be rejected when one has already been created for
              the payment source., example: false}
          tokenSource: {type: string, maxLength: 256, description: Source for the
              Token Service Provider (TSP)., example: TRANSARMOR}
          card: {$ref: '#/components/schemas/Card'}
    PaymentSession:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          sessionId: {type: string, maxLength: 64, description: Session ID for the
              card captured., example: 123e4567-e89b-12d3-a456-556642440000}
    ApplePay:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        description: Apple Pay source.
        properties:
          data: {type: string, maxLength: 4000, description: 'Encrypted data. Payment
              data dictionary, base64 encoded as a string.', example: hbreWcQg980mUoUCfuCoripnHO210lvtizOFLV6PTw1DjooSwik778bH/qgK2pKelDTiiC8eXeiSwSIfrTPp6tq9x8Xo2H0KYAHCjLaJtoDdnjXm8QtC3m8MlcKAyYKp4hOW6tcPmy5rKVCKr1RFCDwjWd9zfVmp/au8hzZQtTYvnlje9t36xNy057eKmA1Bl1r9MFPxicTudVesSYMoAPS4IS+IlYiZzCPHzSLYLvFNiLFzP77qq7B6HSZ3dAZm244v8ep9EQdZVb1xzYdr6U+F5n1W+prS/fnL4+PVdiJK1Gn2qhiveyQX1XopLEQSbMDaW0wYhfDP9XM/+EDMLaXIKRiCtFry9nkbQZDjr2ti91KOAvzQf7XFbV+O8i60BSlI4/QRmLdKHmk/m0rDgQAoYLgUZ5xjKzXpJR9iW6RWuNYyaf9XdD8s2eB9aBQ=}
          header: {$ref: '#/components/schemas/AppleHeader'}
          signature: {type: string, maxLength: 4000, description: 'Signature of the
              payment and header data. The signature includes the signing certificate,
              its intermediate CA certificate, and information about the signing algorithm.
              Detached PKCS #7 signature, base64 encoded as string.', example: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFSMIIBTgIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTkwNjA3MTg0MTIxWjAvBgkqhkiG9w0BCQQxIgQg0PLaZU4YWZqtP9t/ygv9XIS/5ngU6FlGjpvyK6VFXVMwCgYIKoZIzj0EAwIERjBEAiBTNmQEPyc3aMm4Mwa0riD3dNdSc9aAhslj65Us8b3aKwIgNSc/y+CWpsr8qDln0fZK6ZD/LWPMxofQedlPy7Q6gY8AAAAAAAA=}
          version: {type: string, maxLength: 64, description: 'Specific protocol version
              supported by Apple. Version information about the payment token. The
              token uses EC_v1 for ECC-encrypted data, and RSA_v1 for RSA-encrypted
              data.', example: EC_v1}
          applicationData: {type: string, maxLength: 4000, description: 'Hash of the
              applicationData property of the original PKPaymentRequest object. If
              the value of that property is null, this key is omitted. SHA–256 hash
              hex encoded as a string.', example: VEVTVA==}
          applePayMerchantId: {type: string, maxLength: 256, description: Unique AppID
              registered in the Apple portal., example: merchant.com.fapi.tcoe.applepay}
          merchantPrivateKey: {type: string, maxLength: 256, description: Merchant
              private key in hex encoded format., example: MHcCAQEE234234234opsmasdsalsamdsad/asdsad/asdasd/asdAwEHoUQDQgAaslkdsad8asjdnlkm23leu9jclaskdas/masr4+/as34+4fh/sf64g/nX35fs5w==}
    AppleHeader:
      x-model-version: 1.0
      description: Additional version-dependent information used to decrypt and verify
        the payment.
      properties:
        applicationDataHash: {type: string, maxLength: 256, description: Encrypted
            app data., example: 94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2}
        ephemeralPublicKey: {type: string, maxLength: 256, description: 'Used to derive
            the actual public key. Ephemeral public key bytes. EC_v1 only. X.509 encoded
            key bytes, base64 encoded as a string.', example: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEvR+anQg6pElOsCnC3HIeNoEs2XMHQwxuy9plV1MfRRtIiHnQ6MyOS+1FQ7WZR2bVAnHFhPFaM9RYe7/bynvVvg==}
        publicKeyHash: {type: string, maxLength: 256, description: 'Hash of the X.509
            encoded public key bytes of the merchant’s certificate. SHA–256 hash,
            base64 encoded as a string.', example: KRsyW0NauLpN8OwKr+yeu4jl6APbgW05/TYo5eGW0bQ=}
        transactionId: {type: string, maxLength: 256, description: Transaction ID
            generated by the Apple device. A hexadecimal identifier as a string.,
          example: '31323334353637'}
    GooglePay:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        description: Google Pay source.
        properties:
          data: {type: string, maxLength: 4000, description: 'Encrypted data. Payment
              data dictionary, base64 encoded as a string.', example: '{"encryptedMessage":"NZF5Vs2YaI/t25L/1+dp6tuUOvra9pszs2antqcbHJbkjMMXZSR7innTFJxNR5DNnf4GheWIso8n8MA1q1zqWCU8MaK9bnNcHxvROpvfsU3SCCjkfG2k2M4/RYMjs+lxYW/nEtIIKVVOkdjAj4pI/Wth8xQXphn7hDNiyp9tIydmlPZVnzkXI6mVbpHbbkaCCD4TNPhFBDtx0VafqRjbb2Wt3EDazTx3dHdd+qVX5Xj8/BPb1cmwHWvrDw/dQRk/E0TsP+erLjhLaZ8l2EycxeUEZYqSX5w77S8vd3sw8WXuOCMsU8sx0Bs5IY7hohq67qNDxckP1fcBD4OYdGP6bumJR0J6pJxD5iRh5lFSjN6zNLRI77ylxWL6DwHoe/pPdCc0n6cV0Nt0RJMLjerr12BLuhv4bPQ3QB6jxnbt8JK/EndgIG8xpFyNkKlRUyxAKM22/ZSy45d6qtZIKLXRqDTr9JMk8uJ53QRZtQx8k9KkRZGC+GM2sD+Z75fxc0Yye7l6H0D8p5z1iEzWnYHxd0pmY/cOYEJxnOOdD573QmE6ikFcyaAw3XnCyul/EA\u003d\u003d","ephemeralPublicKey":"BAhnPIWrCXWv/45GFK0mNAvN9w+NFBs3tQji0wTUS2+hiFKsZujG5wRd4JXGmxhG+k3bglYk544ILBNdDpsAh+o\u003d","tag":"liBzKfGcO+FclHg7XuqRJxR/8EJShRp9/APab0Sho08\u003d"}'}
          signature: {type: string, maxLength: 1500, description: 'Verifies that the
              message came from Google, base64 encoded, and created with ECDSA by
              the intermediate signing key.', example: MEUCIFWTRWUZAOM5nfJC79FtJm56olnbwG4H5uWWxAUWAquiAiEA24j/BcOroeISsdJzYsyoVi8wzu4tnmKw+jdsGfuvPko=}
          version: {type: string, maxLength: 32, description: 'Specific protocol version
              supported by Google. Identifies the encryption or signing scheme under
              which the message is created. It allows the protocol to evolve over
              time, if needed.', example: ECv2}
          merchantId: {type: string, maxLength: 256, description: Single merchant
              identifier common for all Google Pay merchants., example: 676174657761793A666972737464617461}
          keyInfo:
            type: array
            items: {$ref: '#/components/schemas/KeyInfo'}
    KeyInfo:
      x-model-version: 1.0
      properties:
        merchantPrivateKey: {type: string, maxLength: 1024, description: 'Merchant
            private key, hex encoded.', example: DCEDF9AF72707BFD9C5231ECB9EAD040F3B4BA2AB608579736E37FDBA8884175566BDA410997B2575EA7E76AC54BBDB99DD0F74DD0A648BC0F6A2F06909E79A0F15D779F1A80CFC1EC9612476204C43A}
        signingVerificationKey: {type: string, maxLength: 1024, description: 'Signing
            verification key, base64 encoded.', example: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIsFro6K+IUxRr4yFTOTO+kFCCEvHo7B9IOMLxah6c977oFzX/beObH4a9OfosMHmft3JJZ6B3xpjIb8kduK4/A==}
    SamsungPay:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          data: {type: string, description: ''}
          version: {type: string, description: '100'}
          samsungPayMerchantId: {type: string, maxLength: 256, description: Unique
              AppID registered in the Samsung portal., example: merchant.com.futurex}
          merchantPrivateKey: {type: string, maxLength: 256, description: Merchant
              private key in hex encoded format., example: 2B939D88050A48885DC2FDD8BC1780CC0AF4DA741424A82A60579DB3F08C7DCF81B03E7A0EC28D6705705488FDEFF6DEC8E37D3C20E9C11B36C9D710C42D029831}
    Payment3DS:
      x-model-version: 1.0
      allOf:
        - $ref: '#/components/schemas/Source'
        - type: object
          description: '3DSecure source.'
          properties:
            card:
              $ref: '#/components/schemas/Card'
            merchantIdentifier:
              type: string
              maxLength: 256
              description: 'A unique ID used to identify the merchant. The merchant must use the value assigned by the acquirer.'
              example: '1234567890123456'
            version:
              type: string
              maxLength: 64
              description: 'Specific protocol version supported by 3DS.'
              example: '3DS2'
            cavv:
              type: string
              maxLength: 256
              description: 'The Cardholder Authentication Verification Value (CAVV) is a cryptographic value derived by the issuer during payment authentication that can provide evidence of the results of payment authentication during an online purchase.'
              example: 'AAABCZIhcQAAAABZlyFxAAAAAAA'
            xid:
              type: string
              maxLength: 256
              description: '3DSecure/Verified by Visa value returned by Cardinal Commerce.'
              example: '&x_MD5_Hash=abfaf1d1df004e3c27d5d2e05929b529&x_state=BC&x_reference_3=&x_auth_code=ET141870&x_fp_timestamp=1231877695'
            verificationResponse:
              type: string
              maxLength: 256
              description: 'Verification response message.'
              example: 'PASSED_VALIDATION'
            authenticationAttemptResult:
              type: string
              maxLength: 256
              description: 'Result of authentication attempt from Payer Authentication Response (PaRes).'
              example: 'uyt45t89cnwu3rhc98a4hterjklth4o8ctsrjzth4'
            channel:
              type: string
              maxLength: 32
              description: |+
          
                Valid Values: 
                * MOBILE_APP
                * MOBILE_WEB
                * BROWSER_PC
                * KIOSK
                * CONSOLE
                * 3DS_REQUESTOR_INITIATED
            authenticationResponse:
              type: string
              description: 'The result of authentication attempt returned by the 3D Secure authentication process (PaRes).'
              example: 'A'
            directoryServerTransactionId:
              type: string
              description: 'The response transaction UUID from the DS (directory server)'
              example: 'f38e6948-5388-41a6-bca4-b49723c19437'
            messageCategory:
              type: string
              description: 'Indicates the message category of 3d secure authentication version 2.X. 01 = Payment Authentication 02 = Non-Payment Authentication 80 = Mastercard Data Only'
              example: '1'
            tavv:
              type: string
              description: 'Cryptographic value that is generated during the Visa transaction authentication process for a payment token transaction.'
              example: 'AAABCZIhcQAAAABZlyFxAAAAAAA'
            challengeStatus:
              type: string
              description: 'The transaction status as returned by the 3D Secure authentication process. (CRes)'
              example: 'A'
    DecryptedWallet:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          cavv: {type: string, maxLength: 40, description: Cryptogram., example: 01ade6ae340005c681c3a1890418b53000020000}
          xid: {type: string, maxLength: 40, description: Cryptogram.}
          walletType: {type: string, maxLength: 256, description: 'Identifies the
              wallet as APPLE_PAY, GOOGLE_PAY, or SAMSUNG_PAY.', example: APPLE_PAY}
    TransactionDetails:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Transaction-Details.md">Transaction
        details</a> specific to each request based on business requirements.
      properties:
        approvalCode: {type: string, description: Reference number received as the
            result of a successful external authorization (e.g. by phone). The gateway
            needs this number for uniquely mapping a ForcedTicket transaction to a
            previously performed external authorization.}
        primaryTransactionId: {type: string, maxLength: 40, description: The unique
            identifier from the original transaction passed for a reauthorization
            and incremental authorization., example: '838916029301'}
        primaryOrderId:
          type: string
          maxLength: 40
          description: 'The unique order identifier from the original transaction passed for a reauthorization and incremental authorization.'
          example: '838916029301'
        clientRequestId:
          type: string
          maxLength: 64
          description: 'Echoes back the value in the request header for tracking.'
          example: '30dd879c-ee2f-11db-8314-0800200c9a66'
        captureFlag: {type: boolean, description: Designates if the transaction should
            be captured. Auth (False) or Sale (True)., example: true}
        transactionCaptureType: 
            type: string
            description: 'Identifies if settlement was HOST, GATEWAY, or TERMINAL_DIRECT capture.'
            maxLength: 64
            example: HOST
        accountVerification: {type: boolean, description: Determines if verification
            should be performed on the payment type., example: 'false'}
        partialApproval:
          type: boolean
          description: ' Indicates if a partial approval is allowed.'
          example: true
        merchantTransactionId: {type: string, maxLength: 128, description: Merchant
            transaction ID (aka transaction reference ID)., example: '1343678765'}
        merchantOrderId: {type: string, maxLength: 128, description: Merchant order
            ID (aka customer reference number or purchase order number)., example: 845366457890-TODO}
        merchantInvoiceNumber: {type: string, maxLength: 12, description: Merchant
            invoice number (aka reference number)., example: '123890'}
        receiptEmail: {type: string, maxLength: 256, description: Email address to
            send a digital receipt., example: abc@gmail.com}
        paymentDescription: {type: string, maxLength: 1024, description: Payment description.}
        cardVerificationAmount: {type: number, maximum: 1.0E18, description: Amount
            used to verify the transaction. Some issuers do not allow $0.00 authorizations.,
          example: 0.02}
        partiallyApprovedTransactionAmount: {type: number, maximum: 1.0E18, description: The
            partially approved transaction amount from the original request., example: 10.55}
        splitTenderId: {type: string, maxLength: 1024, description: A partially-authorized
            transaction will generate a split tender ID. Subsequent transactions to
            complete the authorization should include the split tender ID so that
            all the transactions comprising that authorization can be linked., example: '12423434'}
        authorizationTypeIndicator:
          type: string
          maxLength: 11
          description: |
            Type of authorization requested.

            Valid Values:
            * INITIAL
            * REAUTH
            * DEFERRED
            * INCREMENTAL
            * ESTIMATED
          example: REAUTH
        duplicateTransactionCheckingIndicator: {type: boolean, description: Determines
            if duplicate transactions should be checked., example: false}
        primaryTransactionType:
          type: string
          maxLength: 14
          description: |
            Identifies the primary transaction type.

            Valid Values:
            * AUTH_ONLY
            * CHARGE_PREAUTH
            * CHARGE_SALE
            * CANCEL
            * REFUND
          example: CHARGE_SALE
        vaultFundingSource: {type: boolean, description: Identifies if the customer
            information was from the vault., example: false}
        deviceFingerprint:
          type: array
          items: {$ref: '#/components/schemas/DeviceFingerPrint'}
        splitShipment: {$ref: '#/components/schemas/SplitShipment'}
        reversalReasonCode:
          type: string
          maxLength: 22
          description: "Reason the merchant/customer requests for cancel (void).\n\
            \              \nValid Values:\n* VOID\n* TIMEOUT\n* EDIT_ERROR\n* MAC_VERIFICATION_ERROR\n\
            * MAC_SYNCH_ERROR\n* ENCRYPTION_ERROR\n* SYSTEM_ERROR\n* SUSPECTED_FRAUD\n"
          example: VOID
        physicalGoodsIndicator: {type: boolean, description: Identifies if physical
            goods were sold., example: false}
        authorizationSequence:
          type: string
          maxLength: 27
          description: |
            Type of authorization sequence requested.

            Valid Values:
            * AUTHORIZATION_ONLY - (default)
            * AUTHORIZATION_BEFORE_CANCEL
            * CANCEL_BEFORE_AUTHORIZATION
          example: CANCEL_BEFORE_AUTHORIZATION
        createToken: {type: boolean, description: Used to create a token on a charge
            transaction., example: true}
        retrievalReferenceNumber: {type: string, maxLength: 12, description: 'Retrieval
            reference number can be any value based on the merchant’s choosing (e.g.
            sequential tracking of transactions, fixed value etc.) used for transaction
            retrieval from the networks.', example: "56004567"}
    SplitShipment:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Guides/Split-Shipment.md">Split
        shipment</a> information.
      properties:
        totalCount: {type: integer, maximum: 99, description: Identifies the number
            of shipments if the transaction will contain multiple shipments. Can be
            set during pre-auth or the first post-auth., example: 5}
        finalShipment: {type: boolean, description: Identifies the final shipment.,
          example: false}
    DeviceFingerPrint:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Device-Fingerprint.md">Device
        fingerprint</a> details for mobile transactions.
      properties:
        provider: {type: string, maxLength: 256, description: Device authentication
            utilized., example: InAuth}
        dataCapture: {$ref: '#/components/schemas/DataCapture'}
        dataStatic: {$ref: '#/components/schemas/DataStatic'}
        dataDynamic: {$ref: '#/components/schemas/DataDynamic'}
    DataCapture:
      x-model-version: 1.0
      description: Data capture details.
      properties:
        rawData: {type: string, maxLength: 256, description: Raw data from the data
            capture., example: aaaaaXREUVZGRlFY...aMV}
        dataEventId: {type: string, maxLength: 256, description: Unique ID for the
            data capture., example: BB8E4E92...Fz1E063113}
        captureTime: {type: string, format: date-time, maxLength: 20, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
    DataStatic:
      x-model-version: 1.0
      description: Static data details.
      properties:
        operatingSystem: {type: string, maxLength: 256, description: Device operating
            system (OS)., example: ANDROID}
        operatingSystemVersion: {type: string, maxLength: 256, description: Device
            operating system (OS) version., example: 5.1.1 Lollipop}
        model: {type: string, maxLength: 256, description: Device model., example: XYX-1}
        type: {type: string, maxLength: 256, description: Device type/name., example: Moto
            G}
        deviceId: {type: string, maxLength: 48, description: MAC of the device originating
            the transaction., example: '00:1B:44:11:3A:B7'}
        javaScriptEnabled: {type: boolean, maxLength: 8, description: Indicates if
            the device has JavaScript enabled., example: 'true'}
        javaEnabled: {type: boolean, maxLength: 8, description: Indicates if the device
            has Java enabled., example: 'true'}
        userAgent: {type: string, description: 'User agent data from the user device,
            truncated to 2048 bytes.', example: 'Mozilla/5.0 (Windows NT 6.1; Win64;
            x64; rv:47.0) Gecko/20100101 Firefox/47.0'}
        locale: {type: string, maxLength: 8, description: Language/Region code of
            user in IETF BCP47 format., example: en-US}
    DataDynamic:
      x-model-version: 1.0
      description: Dynamic data details.
      properties:
        latitude: {type: string, maxLength: 256, description: Cardholder current latitude
            GPS position., example: 13.0827 N}
        longitude: {type: string, maxLength: 256, description: Cardholder current
            longitude GPS position., example: 80.2707 E}
        ipAddress: {type: string, maxLength: 39, description: Device IP address.,
          example: 172.27.37.221}
        captureTime: {type: string, format: date-time, maxLength: 20, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        address: {$ref: '#/components/schemas/Address'}
    ReferenceTransactionDetails:
      x-model-version: 1.0
      description: '<a href="../docs?path=docs/Resources/Master-Data/Reference-Transaction-Details.md">Reference Transaction details</a> specific to each request based on business requirements.'
      properties:
        referenceTransactionId:
          type: string
          maxLength: 40
          description: 'Commerce Hub generated <code>transactionId</code> from the original transaction used for reference in a secondary transaction.'
          example: '838916029301'
        referenceMerchantTransactionId:
          type: string
          maxLength: 128
          description: 'Merchant/client generated <code>merchantTransactionId</code> from the original transaction used for reference in a secondary transaction'
          example: '1343678765'
        referenceMerchantOrderId:
          type: string
          maxLength: 128
          description: 'Merchant/client generated <code>merchantOrderId</code> from the original transaction used for reference in a secondary transaction'
          example: '953729024'
        referenceOrderId:
          type: string
          maxLength: 128
          description: 'Commerce Hub generated <code>orderId</code> from the original transaction used for reference in a secondary transaction'
          example: 'CHG014994a6b0729e4517858f74c6a41c8d61'
        referenceClientRequestId:
          type: string
          maxLength: 128
          description: 'Merchant/client generated <code>clientRequestId</code> from the original transaction. Can only be used in a transaction inquiry request.'
          example: '2994454'
    OrderData:
      x-model-version: 1.0
      properties:
        orderDate:
          type: string
          format: date
          maxLength: 10
          description: 'Date that goods and services are ordered, in YYYY-MM-DD format.'
          example: '2020-11-20'
        itemCount:
          type: integer
          description: 'Total number of items included in the purchase.'
          example: '1'
        itemDetails:
          type: array
          items:
            $ref: '#/components/schemas/ItemDetails'
        preOrder:
          type: boolean
          description: 'Identifies if the purchase is a preorder.'
          example: 'true'
        preOrderDate:
          type: string
          format: date
          maxLength: 10
          description: 'Date that goods and services are pre-ordered, in YYYY-MM-DD format.'
          example: '2020-11-20'
        reOrder:
          type: boolean
          description: 'Identifies if the purchase is a reorder.'
          example: 'false'
        goodsSoldCode:
          type: string
          maxLength: 16
          description: |+
            Indicates a specific type of goods. It is used to help identify potentially fraudulent sales.

             Valid Values:
            * GIFT_CARD
            * PHYSICAL_GOODS
            * DIGITAL_GOODS
            * CHECK_ACCEPTANCE
            * ACCOUNT_FUNDING
            * QUASI_CASH
            * OTHER
          example: 'GIFT_CARD'
        giftcardCount:
          type: integer
          maximum: 999
          description: 'Total number of gift cards purchased.'
          example: '1'
        orderDescription:
          type: string
          maxLength: 255
          description: 'Name or description of the order'
          example: 'Description for an order'
        supplierVatRegistrationNumber:
          type: string
          maxLength: 15
          description: 'Supplier VAT registration number.'
          example: 'U12345678'
    ItemDetails:
      x-model-version: 1.0
      description: ''
      properties:
        groupingIndicator:
          type: boolean
          example: 'true'
        groupingId:
          type: integer
          maximum: 100
          description: 'Item group ID. The group this item belongs to. Provided by the merchant'
          example: '1'
        commodityCode:
          type: string
          maxLength: 256
          description: |+
            Identifies the commodity code of the products sold, using UNSPSC standard codes.

            Valid Values:
            * 40515 – Diesel
            * 40509 – Petrol
          example: '40515'
        itemType:
          type: string
          maxLength: 256
          description: |+
            Identifies the type of the item.

            Valid Values:
            * PRODUCT
            * TAX
            * SHIPPING
            * ADJUSTMENT
          example: 'PRODUCT'
        itemSubType:
          type: string
          maxLength: 256
          description: |+
            Identifies the sub type of item.

            Valid Values:
            * FUEL
            * MERCHANDISE
            * SERVICE
            * FINANCIAL
            * DISCOUNT
            * PROMOTION
            * CREDIT
            * COUPON
            * FEES
            * OTHER
          example: 'FUEL'
        paymentSystemProductCode:
          type: string
          maxLength: 4
          description: 'Payment system product code'
          example: '001'
        productUPC:
          type: string
          maxLength: 12
          description: 'Universal Product Code identifier used for retail products worldwide'
          example: '03600029145'
        itemUrl:
          type: string
          maxLength: 512
          description: 'Item url'
          example: 'https://www.somedomain.com/product/detail/1234'
        itemImageUrl:
          type: string
          maxLength: 512
          description: 'Item image url'
          example: 'https://www.somedomain.com/images/product-1234.jpg'
        itemDescription:
          type: string
          maxLength: 1024
          description: 'Name or description of item'
          example: 'This is a description for item'
        productSKU:
          type: string
          maxLength: 64
          description: 'Stock keeping unit identifier consisting of letters and numbers that identify characteristics about each product.'
          example: 'UGG-BB-PUR-06'
        quantity:
          type: number
          maximum: 99999999
          description: 'Identifies the number of units of the product sold.'
          example: '25'
        unitOfMeasurement:
          type: string
          description: |+
            Identifies the type of measurement for the product sold.

            Valid Values:
            * CARTON
            * GALLON
            * KILOGRAM
            * LITER
            * POUND
            * QUART
            * UNIT
            * OUNCE
            * OTHER
          example: 'GALLON'
        amountComponents:
          description: 'Used in transactions where additional fields such as tax, surcharge, or fees are required as part of the request.'
          $ref: '#/components/schemas/AmountComponents'
        insuranceClaimNumber:
          type: string
          maxLength: 64
          example: '0123456789'
          description: 'The Insurance Claim Number of the Customer.'
        department:
          type: string
          maxLength: 256
          description:
            'Merchant defined code identifying the department the item was purchased.'
          example: '33'
        subDepartment:
          type: string
          maxLength: 256
          description: 'Merchant defined sub code identifying the sub department the item was purchased.'
          example: '22'
        departmentClass:
          type: string
          maxLength: 256
          description: 'Merchant defined code identifying the department class the item was purchased.'
          example: '51'
        departmentSubClass:
          type: string
          maxLength: 256
          description: 'Merchant defined sub code identifying the department sub class the item was purchased.'
          example: '67'
        itemNumber:
          type: number
          maximum: 998
          description: 'Line item number.'
          example: '1'
    DynamicDescriptors:
      x-model-version: 1.0
      description: '<a href="../docs?path=docs/Resources/Guides/Dynamic-Descriptor.md">Dynamic descriptor</a> information about a merchant and appears on the customer statement. Note: This has limited platform availability. For more information, please contact your Account Representative.'
      properties:
        mcc: {type: string, maxLength: 4, description: Merchant Category Code (MCC).
            The MCC is an industry standard four-digit number used to classify a business
            by the type of goods or services provided., example: '4457'}
        merchantName: {type: string, maxLength: 1024, description: Doing Business
            As (DBA) name., example: MyWebsite.com}
        customerServiceNumber: {type: string, maxLength: 15, description: Customer
            service phone number information that is passed to the issuer and may
            appear on the customer statement., example: '1231231234'}
        serviceEntitlement: {type: string, maxLength: 16, description: Merchant service
            entitlement number (aka merchant ID)., example: '67893827513'}
        address: {$ref: '#/components/schemas/Address'}
    BillingAddress:
      x-model-version: 1.0
      description: Billing <a href="../docs?path=docs/Resources/Master-Data/Address.md">address</a>
        information.
      properties:
        firstName: {type: string, maxLength: 256, description: Billing first name.,
          example: Jane}
        lastName: {type: string, maxLength: 256, description: Billing last name.,
          example: Smith}
        address: {$ref: '#/components/schemas/Address'}
        phone: {$ref: '#/components/schemas/Phone'}
    ShippingAddress:
      x-model-version: 1.0
      description: Shipping and/or delivery <a href="../docs?path=docs/Resources/Master-Data/Address.md">address</a>
        information.
      properties:
        firstName: {type: string, maxLength: 256, description: Shipping contact first
            name., example: Joe}
        lastName: {type: string, maxLength: 256, description: Shipping contact last
            name., example: Smith}
        shipToEmail: {type: string, maxLength: 256, description: Email on a digital
            delivery transaction., example: customer@domain.com}
        shippingMethod:
          type: string
          maxLength: 13
          description: |
            Shipping or delivery method.

            Valid Values:
            * SAME_DAY
            * OVERNIGHT - Next day
            * PRIORITY - 2-3 days
            * GROUND - 4 days
            * ELECTRONIC - Email or digital goods
            * SHIP_TO_STORE
          example: SAME_DAY
        address: {$ref: '#/components/schemas/Address'}
        phone: {$ref: '#/components/schemas/Phone'}
    MerchantDetails:
      x-model-version: 1.0
      description: Used to pass <a href="../docs?path=docs/Resources/Master-Data/Merchant-Details.md">merchant</a>
        specific data during the transaction.
      properties:
        tokenType: {type: string, maxLength: 64, description: Specific value to be passed to tokenization platform., example: AB01}
        storeId: {type: string, maxLength: 1024, description: 'The unique ID or number
            used to identify the unique location, store, or site.', example: '12345'}
        siteId: {type: string, maxLength: 1024, description: The location ID or number
            used to identify the unique site and merchant in petro industry., example: CA123456}
        terminalId: {type: string, maxLength: 1024, description: Identifies the specific
            device or point of entry where the transaction originated assigned by
            the acquirer or the gateway., example: '12'}
        merchantId: {type: string, maxLength: 1024, description: A unique ID used
            to identify the Merchant. The merchant must use the value assigned by
            the acquirer or the gateway when submitting a transaction., example: '123456789012345'}
    Customer:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Customer-Details.md">Customer</a>
        specific data.
      properties:
        merchantCustomerId: {type: string, maxLength: 1024, description: Unique customer
            identifier., example: '234567'}
        processorCustomerId: {type: string, maxLength: 1024, description: Unique customer
            identifier on processor network., example: '1122334'}
        firstName: {type: string, maxLength: 256, description: Customer first name.,
          example: Joe}
        lastName: {type: string, maxLength: 256, description: Customer last name.,
          example: Smith}
        dob: {type: string, format: date, maxLength: 10, description: Customer date
            of birth in YYYY-MM-DD format., example: '1990-01-01'}
        email: {type: string, maxLength: 256, description: Customer email address.,
          example: customer@domain.com}
        ipAddress: {type: string, maxLength: 39, description: The IP address of the
            customer., example: 170.165.02.26}
        hostName: {type: string, maxLength: 1024, description: The name of the server
            the customer is connected to., example: dreamwave.com}
        locale: {type: string, maxLength: 256, description: Language/region code of
            user in IETF BCP47 format., example: en-US}
        driverLicenseNumber: {type: string, maxLength: 256, description: 'Customer
            driver license number, including state.', example: GA456183789}
        ssn: {type: string, maxLength: 9, description: Customer SSN or US federal
            tax ID number (business checks only)., example: '123456789'}
        phone:
          type: array
          items: {$ref: '#/components/schemas/Phone'}
    StoredCredentials:
      x-model-version: 1.0
      description: Used to initiate an initial or subsequent <a href="../docs?path=docs/Resources/Guides/Stored-Credentials.md">stored
        credentials</a> transaction.
      properties:
        scheduled: {type: boolean, description: Indicator if this is a scheduled transaction.,
          example: true}
        initiator:
          type: string
          maxLength: 11
          description: |
            Indicates whether it is a merchant-initiated or explicitly consented to by card holder.

            Valid Values:
            * MERCHANT
            * CARD_HOLDER
          example: MERCHANT
        sequence:
          type: string
          maxLength: 10
          description: |
            Indicates if the transaction is first or subsequent.

            Valid Values:
            * FIRST
            * SUBSEQUENT
            * SINGLE
          example: FIRST
        schemeReferenceTransactionId: {type: string, maxLength: 256, description: The
            transaction ID received from the issuer for the initial transaction. May
            be required if sequence is subsequent., example: '54231235467'}
        originationDate: {type: string, format: date, maxLength: 10, description: 'Date
            the customer account was created with merchant, in YYYY-MM-DD format.',
          example: '2020-11-20'}
        accountAge:
          type: string
          maxLength: 32
          description: "Indicator on the age of customer account with merchant.\n\n\
            Valid Values: \n* GUEST\n* NEW_ACCOUNT\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n\
            * 60_90_DAYS\n* OVER_90_DAYS\n"
          example: 'GUEST '
        count: {type: integer, description: Number of cards on file with this account.,
          example: 1}
        lastUpdated:
          type: string
          maxLength: 32
          description: "Age of most recent card add/modify.\n\nValid Values: \n* NEVER\n\
            * NOW\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n* Over 60 DAYS\n"
          example: NEVER
        age:
          type: string
          maxLength: 32
          description: "Indicator on the age of this payment card on file with merchant.\n\
            \  \nValid Values: \n* GUEST\n* NEW_ACCOUNT\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n\
            * 60_90_DAYS\n* OVER_90_DAYS\n"
          example: GUEST
        attempts: {type: integer, description: Number of attempts to add a payment
            card in prior 24 hours., example: 1}
        accountPasswordReset:
          type: string
          maxLength: 32
          description: "Indicator of the last time the account password was reset.\n\
            \nValid Values: \n* NEVER\n* NOW\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n\
            * 60_90_DAYS\n* OVER_90_DAYS\n"
          example: NEVER
        sixMonthTransactionCount: {type: integer, description: Number of transaction
            on this account in prior 6 months., example: 5}
        twentyFourHourTransactionCount: {type: integer, description: Number of transaction
            on this account in prior 24 hours., example: 1}
        retryAttempts: {type: integer, description: Number of retry attempt if the
            initial transaction was unsuccessful., example: 0}
        schemeOriginalAmount:
          type: number
          maximum: 999999999999999999.999
          description: 'Original transaction amount, required for card on file transactions. Discover Only.'
          example: '9.66'
    TransactionInteraction:
      x-model-version: 1.0
      description: '<a href="../docs?path=docs/Resources/Master-Data/Transaction-Interaction.md">Transaction interaction</a> information based on where the transaction is acquired and the capabilities of the terminal or software.'
      properties:
        origin:
          type: string
          maxLength: 4
          description: 'The <a href="../docs?path=docs/Resources/Master-Data/Transaction-Interaction.md#transaction-origin">source</a>of the transaction.'
          example: 'ECOM'
        eciIndicator:
          type: string
          maxLength: 36
          description: '<a href="../docs?path=docs/Resources/Master-Data/Transaction-Interaction.md#electronic-commerce-indicator">Electronic Commerce Indicator (ECI)</a> is mandatory for all E-commerce transactions.'
          example: 'SECURE_ECOM'
        posEntryMode:
          type: string
          maxLength: 22
          description: 'An identifier used to indicate how the account number was <a href="../docs?path=docs/Resources/Master-Data/Transaction-Interaction.md#pos-entry-mode">entered</a>on the transaction.'
          example: 'MANUAL'
        posConditionCode:
          type: string
          maxLength: 26
          description: 'An identifier used to indicate the transaction <a href="../docs?path=docs/Resources/Master-Data/Transaction-Interaction.md#pos-condition-code">condition</a> at the Point-of-Sale (POS).'
          example: 'CARD_NOT_PRESENT_ECOM'
        responseCode:
          type: string
          description: 'Response code returned by network/issuer used in subsequent transactions.'
        posData:
          type: string
          description: 'POS data returned by network/issuer used in subsequent transactions.'
        mobileInteraction:
          type: string
          maxLength: 12
          description: 'Mobile method of interaction.'
          example: 'PHONE'
        cardholderAuthenticationMethod:
          type: string
          maxLength: 32
          description: 'Identifies how the cardholder was authenticated/verified.'
          example: 'PIN'
        authorizationCharacteristicsIndicator:
          type: string
          maxLength: 23
          description: 'Response code used for qualification used in subsequent transactions.'
          example: 'CARD_NOT_PRESENT'
        cardholderAuthenticationEntity:
          type: string
          maxLength: 32
          description: 'Identifies what entity authenticated the cardholder.'
          example: 'UNSPECIFIED'
        cardHolderAuthenticationRisk:
          type: string
          maxLength: 25
          description: 'Identifies the Security Risk from the Card Holder Authentication.'
          example: 'NO_RISK'
        terminalTimestamp:
          type: string
          format: date-time
          description: 'Terminal timestamp in ISO 8601 format YYYY-MM-DDThh:mm:ssZ'
          example: '2016-04-16T16:06:05Z'
        serviceCode:
          type: string
          maxLength: 3
          description: 'If this field is returned in an authorization response, and if returned must be provided in subsequent Capture transactions.'
        applicationExpiryDate:
          type: string
          format: date
          description: 'Captured from the EMV chip data. YYYY-MM-DD format.'
          example: ' 2021-09-03'
        hostPosEntryMode:
          type: string
          maxLength: 50
          description: 'Pos Entry Mode from the response.'
          example: 'UNSPECIFIED'
        hostPosConditionCode:
          type: string
          maxLength: 50
          description: 'Pos Condition Code from the response.'
          example: 'UNSPECIFIED'
        originType:
          type: string
          description: 'Defines the type of transaction Origin.'
          example: 'PHONE'
        additionalPosInformation:
          $ref: '#/components/schemas/AdditionalPosInformation'
        network:
          $ref: '#/components/schemas/Network'
        terminalEntryCapability:
          type: string
          description: 'Identifies how data can be entered in the terminal or software.'
          example: 'CHIP_ONLY'
        dccApplied:
          type: string
          maxLength: 26
          description: 'Indicates the choice made by the customer for a Dynamic Currency Conversion (DCC) transaction.'
          example: 'APPROVED_CONVERSION'
    AdditionalPosInformation:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Additional-POS-Info.md">Additional
        terminal</a> or software specific information.
      properties:
        posId: {type: string, description: 'Identifies the specific device or point
            of entry where the transaction originated. For example, pump number, lane
            number, terminal number, etc.', example: '1234'}
        cashierId: {type: string, description: Used to uniquely identify the merchant’s
            store cashier or employee accepting the transaction., example: '3456'}
        stan: {type: string, description: System Trace or Debit Reg E Receipt Number
            - A system-generated number is provided by the merchant and it uniquely
            identifies a transaction. This number needs to be a unique number per
            Merchant and Terminal ID., maxLength: 6, example: '123456'}
        posFormFactorIndicator: {type: string, description: 'This field is used to
            identify the form factor used at the POS for MasterCard PayPass transactions.
            Note: Some values from 00–19 may indicate not only the physical form factor
            but also other attributes such as device technology and payment app specifications.
            Values from 20–99 exclusively indicate the form factor only without also
            indicating the storage technology.', example: '02'}
        alternateRoutingIndicator: {type: boolean, description: 'Identifies if the
            terminal support the Alternate Routing feature used for PINless POS, Signature
            Debit, and EMV Common AID features (excluding Online PIN CVM) allows merchants
            to process PIN Debit Network transactions without a PIN.', example: 'true'}
        dataEntrySource:
          type: string
          maxLength: 50
          example: ELECTRONIC_PAYMENT_TERMINAL
          description: |
            Channel the consumer used to initiate a card not present transaction.

            Valid Values:
            * MOBILE_APP
            * MOBILE_WEB
            * BROWSER_PC
            * KIOSK
            * CONSOLE
            * 3DS_REQUESTOR_INITIATED
            * UNSPECIFIED
            * ELECTRONIC_PAYMENT_TERMINAL
            * AUTOMATED_FUEL_DISPENSING_MACHINE
            * UNATTENDED_CUSTOMER_TERMINAL
            * ECOMMERCE_CUSTOMER_PRESENT
            * MOBILE_TERMINAL
            * MOBILE_POS
            * ELECTRONIC_CASH_REGISTER
            * IVR_VRU
            * TICKET_MACHINE
            * CALL_CENTER_OPERATOR
        transactionQualifier: {type: string, description: Used for Discover - Discover
            TransactionQualifier.}
        attendedTerminalData:
          type: string
          maxLength: 16
          description: |
            Indicates if the card acceptor was at the point of sale.

            Valid Values:
            * ATTENDED – Attended terminal (Not a valid option if cardholderActivatedTerminalInformation is CAT_LEVEL_6)
            * UNATTENDED – Unattended terminal or software
            * NONE – No terminal or software used (VRU, etc.)
          example: ATTENDED
        cardholderActivatedTerminalInformation:
          type: string
          maxLength: 16
          description: |
            Identifies Cardholder Activated Terminal (CAT) capabilities of the device.

            Valid Values:
            * BLANK – Not a CAT device
            * CAT_LEVEL_1 - Automated dispensing machine with online/offline PIN (MC Only)
            * CAT_LEVEL_2 - Self-service terminal, used for automated fueling transactions and unattended terminals.
            * CAT_LEVEL_3 - Limited amount terminal
            * CAT_LEVEL_6 - Electronic commerce transaction (attendedTerminalData must not be ATTENDED)
          example: '2'
        posHardwareAndSoftware: {$ref: '#/components/schemas/PosHardwareAndSoftware'}
        posFeatures: {$ref: '#/components/schemas/PosFeatures'}
        supervisorId: {type: string, description: Used to uniquely identify the merchant’s
            store supervisor transactions., example: '1234567'}
    PosHardwareAndSoftware:
      x-model-version: 1.0
      description: Terminal hardware and software information.
      properties:
        hardwareVendorIdentifier: {type: string, description: 'Hardware vendor identifier
            assigned by Chase merchant services at time of certification, represented
            in ASCII HEX.'}
        softwareIdentifier: {type: string, description: 'Software Identifier assigned
            by Chase merchant services at time of certification, represented in ASCII
            HEX.'}
        hardwareSerialNumber: {type: string, description: 'Serial number of hardware
            device. The hardware serial # can be left-justified, space-filled.', example: V1234567}
        softwareApplicationName: {type: string, description: Name of software application.}
        softwareReleaseDate: {type: string, format: date, description: 'Date software
            was released, in YYYY-MM-DD format.', example: '2022-05-21'}
        softwareVersionNumber: {description: EPROM or version information related
            to the terminal software., type: string}
    PosFeatures:
      x-model-version: 1.0
      description: Terminal or software feature information.
      properties:
        hostProcessingPlatform: {type: string, description: Indicates which system
            is being used by the payment application and to what extent it is being
            used., example: TAS}
        messageFormatSupport: {type: string, description: Indicates which message
            format the application uses to communicate with the Chase merchant services
            PNS Host.}
        emvSupport: {type: string, description: Indicates the payment brands supported
            by the application for EMV processing. Required for any application that
            supports EMV processing.}
        peripheralInformation1: {type: string, description: Indicates the type of
            peripheral device attached to or being used by the payment application
            or point of sale device. Only the highest level of support should be indicated
            unless multiple devices are attached.}
        peripheralInformation2: {type: string, description: Reserved for future use.}
        communicationInformation1: {type: string, description: Indicates the methods
            of communication supported by the payment application. It is possible
            for an application to support more than one type of communication at a
            time., example: DIAL}
        communicationInformation2: {type: string, description: Reserved for future
            use.}
        industryInformation1: {type: string, description: Indicates the industries
            supported by the payment application. More than one industry can be indicated.}
        industryInformation2: {type: string, description: Reserved for future use.}
        classAndComplianceCertification: {type: string, description: 'Indicates the
            type of application or device sending the transaction, Class A or Class
            B.', example: A}
        otherCapabilities: {type: string, description: 'Indicates whether the transaction
            originated from a mobile device that uses Chase merchant services’ mobile
            payment gateway or originated from a device that does not use Chase merchant
            services’ Mobile Payment Gateway. Note: It is required for merchants to
            send the appropriate information in this element in the case where a mobile
            terminal is supported.'}
        cardCaptureCapability: {type: boolean, example: true, description: Identifies
            if the terminal is able to capture the card data.}
        pinAuthenticationCapability:
          type: string
          maxLength: 25
          example: CAN_ACCEPT_PIN
          description: |
            PIN entry capability of the Point of Sale.

            Valid Values:
            * UNSPECIFIED
            * CAN_ACCEPT_PIN
            * CANNOT_ACCEPT_PIN
            * PIN_PAD_IS_DOWN
            * PIN_VERIFIED_BY_TERMINAL
        authenticationCapability:
          type: string
          maxLength: 50
          example: UNSPECIFIED
          description: |
            Identifies the terminals capability to authenticate  the cardholder.

            Valid Values:
            * UNSPECIFIED
            * NONE
            * PIN
            * ELECTRONIC_SIGNATURE
            * INOPERATIVE
            * OTHER
        taxPromptCapability:
          type: string
          maxLength: 25
          example: CAPABLE
          description: |
            This field indicates the capability of the terminal to prompt for the Tax Amount, and then handle the Commercial card type in the response message.

            Valid Values:
            * CAPABLE
            * NOT_CAPABLE
        terminalEntryCapability:
          type: string
          maxLength: 28
          description: |
            Identifies how data can be entered in the terminal or software.

            Valid Values:
            * UNSPECIFIED - Default
            * ECOMMERCE - E-commerce no terminal used
            * MAG_STRIPE_ONLY - Track read only
            * MAG_STRIPE_MANUAL - Track read or manual key
            * MAG_STRIPE_MANUAL_CHIP - Track read, manual key or chip
            * BARCODE - Barcode scan
            * CONTACTLESS - Contactless integrated circuit read
            * OCR - Opitcal character reader
            * CHIP_ONLY - Chip only
            * CHIP_MAG_STRIPE - Chip with track fallback
            * MANUAL_ONLY - Manual key only
            * CONTACTLESS_MAG_STRIPE - Contactless or track read
            * HYBRID - Hybrid entry mode"
          example: CHIP_ONLY
        PINcaptureCapability:
          type: string
          maxLength: 50
          description: |
            Identifies the terminals capability to caputer a PIN.

            Valid Values:
            * UNSPECIFIED - Default
            * PIN_4 - PIN capability 4 characters maximum
            * PIN_5 - PIN capture capability 5 characters maximum
            * PIN_6 - PIN capture capability 6 characters maximum
            * PIN_7 - PIN capture capability 7 characters maximum
            * PIN_8 - PIN capture capability 8 characters maximum
            * PIN_9 - PIN capture capability 9 characters maximum
            * PIN_10 - PIN capture capability 10 characters maximum
            * PIN_11 - PIN capture capability 11 characters maximum
            * PIN_12 - PIN capture capability 12 characters maximum
            * NONE
          example: UNSPECIFIED
    Network:
      x-model-version: 1.0
      description: ''
      required: [network]
      discriminator: {propertyName: network}
      properties:
        network: {type: string, description: Processing card network}
    Mastercard:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Network'}
      - type: object
        properties:
          interchangeComplianceIndicator: {type: string, description: 'A code to indicate
              that Mastercard interchange compliance data was provided for this transaction,
              and if any other special Mastercard authorization requirements were
              met.'}
          bankNetRefNumber: {type: string, description: A Mastercard generated identifier
              for each original authorization request. Reference number assigned by
              Mastercard to each authorization message.}
          bankNetDate: {type: string, description: A Mastercard generated date for
              this transaction. MMDD format}
          cvcErrorIndicator: {type: string, description: Indicates the CVC Error response
              data.}
          transactionIntegrityClass: {type: string, description: Contains the MasterCard
              provided Transaction Integrity Classification for Point of Sale (POS)
              Purchase and Purchase with Cash Back transactions initiated on the Authorization
              Platform.}
          xCodeResponse: {type: string, maxLength: 6, description: Conditional for
              Mastercard EMV chip transactions. This value is used to notify the chip
              that the transaction was unable to go online and is required for batch
              uploads.}
          chipCryptoValue: {type: string, maxLength: 3, description: Additional EMV
              chip info returned by Mastercard.}
          cardDataOutputCapability:
            type: string
            maxLength: 25
            example: UNSPECIFIED
            description: |
              Identifies the card's capability to output data.

              Valid Values:
              * UNSPECIFIED
              * NONE
              * MAG_STRIPE
              * ICC
              * OTHER
          terminalDataOutputCapability:
            type: string
            maxLength: 25
            example: UNSPECIFIED
            description: |
              Identifies the terminal's capability to display response data.

              Valid Values:
              * UNSPECIFIED
              * NONE
              * PRINTING_ONLY
              * DISPLAY_ONLY
              * PRINTING_AND_DISPLAY
    Visa:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Network'}
      - type: object
        properties:
          VISABID: {type: string, maxLength: 128, description: The Business Identifier
              (BID) provided by Visa to Third Party Services (TPS)., example: '0123456789'}
          VISAAUR: {type: string, maxLength: 128, description: Agent Unique Account
              Result (AUAR) provided by Visa to Third Party Services (TPS) in 12 hex
              digit format., example: 12345AD89012}
          cardAuthenticationResultCode: {type: string, maxLength: 1, description: Card
              Authentication Results Code returned by Visa for EMV chip transactions.}
          spendQualificationIndicator: {type: boolean, example: false, description: A
              field used by Visa to establish annual point-of-sale spending requirements.}
    AmericanExpress:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Network'}
      - type: object
        properties:
          safeKeyResponse:
            type: string
            maxLength: 50
            description: |
              Response that corresponds to the American Express SafeKey response value.

              Valid Values:
              * FAILED_AUTH - Authentication Issuer Key
              * PASSED_AUTH - Authentication Issuer key
              * PASSED_ATTEMPT - Attempt, Issuer Key
              * FAILED_ATTEMPT - Attempt, Issuer Key
              * FAILED_NON_PARTICIPANT - Attempt, Issuer not participating, Network Key
              * PASSED_NON_PARTICIPANT - Attempt, Issuer not participating, Network Key
              * FAILED_PARTICIPANT - Attempt, Participating, ACS not available, Network Key
              * PASSED_PARTICIPANT - Attempt, Participating, ACS not available, Network Key
              * UNCHEKED
            example: PASSED_AUTH
    Discover:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Network'}
      - type: object
    NetworkDetails:
      x-model-version: 1.0
      description: Contains the authorization <a href="../docs?path=docs/Resources/Master-Data/Network-Details.md">network
        response</a> details.
      properties:
        network:
          $ref: '#/components/schemas/Network'
        debitNetworkId:
          type: string
          maxLength: 64
          description: 'Network ID for the debit component.'
          example: '123456'
        transactionSequence:
          type: string
          maxLength: 64
          description: 'Transaction specific data that may be returned in response messages.'
          example: '1123456'
        systemTrace:
          type: string
          maxLength: 64
          description: 'Original trace number that was returned in an authorization response.'
          example: '123456789'
        debitIssuerData:
          type: string
          description: 'Debit issuer specific data that may be returned in the response messages.'
          example: 'Standard Issuer'
        networkResponseCode:
          type: string
          maxLength: 16
          description: 'Debit network response code.'
          example: '00'
        posEntryModeChange:
          type: boolean
          description: 'Issuer will reply if the entry mode has changed.'
        cardLevelResultCode:
          type: string
          description: 'Identifies purchase, corporate, and business card level e.g. Level II/Level III'
        validationCode:
          type: string
          description: 'A code calculated by card brands to ensure that the fields present in the authorization are also present in the clearing record.'
          example: ''
        downgradeReason:
          type: string
          description: 'Downgrade reason as supplied by network.'
          example: 'ACCOUNT_NUMBER_MISSING'
        creditAuthType:
          type: string
          description: 'Indicates the type of authorization required.'
          example: 'DISCOVER'
        authScore:
          type: string
          description: 'The auth score returned for the transaction.'
          example: ''
        partialAuthTransactionId:
          type: string
          description: 'Generated identifier unique for each original authorization request.'
          example: ''
        totalAuthAmount:
          type: number
          description: 'Total amount authorized.'
          example: '13.50'
        transactionIdentifier:
          type: string
          description: 'This field represents a unique value used to identify and link all related transactions for authorization and settlement'
        magStripeQualityIndicator:
          type: string
          description: |+
            This field dentifies the error encountered with the track data provided in the authorization request message.
            
            Valid Values:
            * TRACK_PRESENT - Track 1 and Track 2 present in the message
            * NO_TRACK - Track 1 or Track 2 not present in the message
            * PAN_NOT_EQUAL - Primary Account Number not equal in track data
            * EXPIRATION_NOT_EQUAL - Expiration date not equal in track data
            * CARD_TYPE_INVALID - Card type invalid in track data
            * FIELD_SEPARATORS - Field separator(s) invalid in track data
            * EXCEEDS_LENGTH -  A field within the track data exceeds maximum length
            * CATEGORY_CODE - The transaction category code is "T".
            * CUSTOMER_PRESENCE - POS customer presence indicator is false.
            * CARD_PRESENCE - POS card presence indicator is false.
          example: 'TRACK_PRESENT'
        networkAvsCode:
          type: string
          maxLength: 1
          description: 'Non-Normalized newtork AVS response code is available.'
          example: ''
        panMappingAccountNumber:
          type: string
          maxLength: 19
          description: 'Returned for MasterCard Token transactions (only for MCCs 4111, 4131, 4784, and 7523) and for all AMEX Token transactions.'
          example: ''
        cardholderResponse:
          type: string
          maxLength: 5
          description: |+
            Non-normalized response from for verifying cardholder data where each position represents the postal/zip code, address, name, telephone, and email respectively.

            Valid Values:
            * Y = Yes data matches
            * N = No data does not match
            * U - Data unchecked
            * R - Retry
            * S - Service not allowed
            * Blank - Data not sent
          example: 'YYNUU'
        authSource:
          type: string
          description: 'Code indicating how the network performed the authorization.'
          example: 'STIP'
        debitRouting:
          type: string
          maxLength: 256
          description: |+
            Provides the Debit network routing Type for PINless and Signature Debit transactions.

            Valid Values:
            * CREDIT
            * DEBIT
            * DUAL
          example: 'CREDIT'
    AdditionalDataCommon:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Additional-Data.md">Common
        data</a> passed during a transaction request based on business requirements.
      properties:
        paymentAmountType:
          type: string
          maxLength: 20
          description: 'An identifier used to indicate the transaction payment amount type'
          example: 'FIXED or VARIABLE'
        additionalData: {$ref: '#/components/schemas/AdditionalData'}
        directedRouting: {$ref: '#/components/schemas/DirectedRouting'}
        subMerchant: {$ref: '#/components/schemas/SubMerchant'}
        installments: {$ref: '#/components/schemas/Installments'}
        privateLabel: {$ref: '#/components/schemas/PrivateLabel'}
        customFields:
          description: Used to submit merchant custom values.
          type: array
          items: {$ref: '#/components/schemas/KeyValuePair'}
        deferredPayments: {$ref: '#/components/schemas/DeferredPayments'}
        billPaymentType:
          type: string
          maxLength: 11
          description: |
            Indicates the type of bill payment.

            Valid Values:
            * SINGLE - Single charge not for recurring services or installment plan.
            * RECURRING - Agreement where charges will occur on a periodic basis.
            * INSTALLMENT - Single purchase where the cardholder is billed (charged) in installments.
            * DEFERRED - A charge for an order with a delayed payment for a specified amount of time.
          example: RECURRING
        recurring: {$ref: '#/components/schemas/Recurring'}
    AdditionalData:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Additional-Data.md">Additional
        data</a> passed during a transaction request.
      properties:
        baiFlag:
          type: string
          maxLength: 31
          description: |
            Business Application Identifier. This identifies the intended use of a push payment. It determines the data carried in the message, the limits and economics that may apply to the transaction, and may be used by the sending and/or receiving issuer to make an authorization decision.

            Valid Values:
            * PERSON_TO_PERSON - Person to person
            * PERSON_TO_PERSON_BANK_INITIATED - Person to person bank initiated
            * DIGITAL_WALLET_PAN - Digital Wallet PAN
            * ACCOUNT_TO_ACCOUNT - Account to account
            * TOP_OFF - Top Off
            * ACCOUNT_VERIFICATION - Account Verification ($0.00 Transaction)
            * FUNDS_TRANSFER - Funds Transfer
          example: PERSON_TO_PERSON
        ecomURL: {type: string, maxLength: 512, description: This field contains the
            URL of the site performing the Ecommerce transaction., example: 'https://www.somedomain.com'}
        requestedTestErrorResponseCode: {type: string, maxLength: 23, description: Value
            used to test/replicate a transaction error., example: '213'}
        emvParameterDownloadIndicator: {type: string, description: 'Indicator if EMV
            Parameter has to be downloaded, sent as part of Auth/Sale Response.'}
    DirectedRouting:
      x-model-version: 1.0
      description: Used to directly route debit transactions to a specific processing
        network.
      properties:
        network:
          type: string
          maxLength: 16
          description: |
            Identifies the debit card processing network.

            Valid Values:
            * NYCE
            * PULSE
            * VISA
          example: VISA
        cardFunction: {type: string, maxLength: 6, description: Identifies if the
            processing method is CREDIT or DEBIT., example: CREDIT}
        processors:
          type: array
          items: {$ref: '#/components/schemas/Processor'}
          description: Identifies the card processor.
    SubMerchant:
      x-model-version: 1.0
      description: Sub-merchant information applicable to <a ="../docs?path=docs/Resources/Guides/Industry-Verticals/Payment-Faciliator.md">Payment
        Facilitators</a> (also known as payment service providers or aggregators).
      properties:
        id: {type: string, description: Sub-merchant ID used by Payment Facilitators.,
          example: '9999'}
        name: {type: string, maxLength: 256, description: Merchant name/product/service
            to be used in lieu of the Payment Facilitator name., example: Some Business}
        street: {type: string, maxLength: 256, description: Merchant street address
            to be used in lieu of the Payment Facilitator street., example: 123 Main
            Street}
        city: {type: string, maxLength: 256, description: Merchant city to be used
            in lieu of the Payment Facilitator city., example: Atlanta}
        state: {type: string, maxLength: 256, description: Merchant state to be used
            in lieu of the Payment Facilitator state., example: GA}
        postalCode: {type: string, maxLength: 10, description: Merchant postal code
            to be used in lieu of the Payment Facilitator postal code., example: 30303-001}
        country: {type: string, maxLength: 256, description: Merchant country to be
            used in lieu of the Payment Facilitator country., example: US}
        taxId: {type: string, maxLength: 9, description: Tax ID collected of the merchant
            for this transaction., example: '123456789'}
    Installments:
      x-model-version: 1.0
      description: Installment bill payment transaction information.
      properties:
        installmentAmount: {type: number, maximum: 1.0E18, description: Amount the
            customer will be charged per installment., example: 20.00}
        lastInstallmentAmount: {type: number, maximum: 1.0E18, description: Amount
            the customer will be charged on the last installment., example: 20.00}
        installmentCount: {type: integer, maximum: 999, description: Number of installment
            payments in the plan, example: 12}
        interestRate: {type: number, maximum: 100, description: Indicates the installment
            interest rate if applicable., example: 1.32}
        paymentFirstDay: {type: number, maximum: 1.0E18, description: Amount the customer
            will be charged on the first day., example: 15.00}
        invoiceId: {type: string, maxLength: 256, description: 'Invoice Number of
            an installment bill payment transaction. Note: This field has limited
            platform availability. For more information, please contact your account
            representative.', example: '534242'}
        invoiceDate: {type: string, format: date, maxLength: 10, description: Date
            that the installment invoice was created in YYYY-MM-DD format., example: '2020-05-01'}
        deliveryDate: {type: string, format: date, maxLength: 10, description: Date
            the product or service is delivered in YYYY-MM-DD format., example: '2020-05-01'}
        dueDate: {type: string, format: date, maxLength: 10, description: Date final
            payment is due for the installment invoice in YYYY-MM-DD format., example: '2030-05-01'}
    PrivateLabel:
      x-model-version: 1.0
      description: 'Private label transaction information.'
      properties:
        creditPlanNumber:
          type: string
          maxLength: 5
          description: 'Payment program assigned by the private label processor.'
          example: '00100'
        minimumSpendExemptIndicator:
          type: string
          enum: ["EXEMPT","NOT_EXEMPT"]
          description: |+
            The minimum spend amount the customer is exempt from.
            Valid Values:
            * EXEMPT 
            * NOT_EXEMPT
          example: 'EXEMPT'
    KeyValuePair:
      x-model-version: 1.0
      description: Key value pair information.
      properties:
        key: {type: string, maxLength: 256, description: Key for the custom information.}
        value: {type: string, maxLength: 256, description: Value for the custom information.}
    DeferredPayments:
      x-model-version: 1.0
      description: Deferred bill payment transaction information.
      properties:
        numberOfPayments: {type: string, maxLength: 32, description: Number of payments
            for a sale transaction if the customer pays the total amount in multiple
            transactions., example: '5'}
        paymentPlan:
          type: string
          maxLength: 11
          description: |
            This field details the type of the Deferred Payment Plan (DPP) for Mexican payments.

            Valid Values:
            * NO_INTEREST – No Interest charges
            * INTEREST – Interest charges
            * PAY_LATER – Pay at a Later Date
          example: PAY_LATER
        timePeriod: {type: string, maxLength: 64, description: Number of months for
            which the payment would not be enforced., example: '12'}
    Recurring:
      x-model-version: 1.0
      description: Recurring
      properties:
        frequency:
          type: string
          description: "Number of days between transactions.\n\nValid Values:\n* ONCE\
            \ - One Time\n* DAILY - Every Day\n* WEEKLY - Every 7 Days\n* BI_WEEKLY\
            \ - Every 14 Days\n* SEMI_MONTHLY - Every 15 Days\n* MONTHLY - Every Month\
            \ on the Same Date\n* BI_MONTHLY - Every 2 Months on the Same Date\n*\
            \ QUARTERLY - Every 3 Months on the Same Date\n* 4_MONTHS - Every 4 Months\
            \ on the Same Date\n* SEMI_ANNUALLY - Every 6 Months on the Same Date\n\
            * ANNUALLY - Once a Year on the Same Date \n"
          example: MONTHLY
        merchantDeclineAdvice:
          type: string
          maxLength: 32
          description: |
            Identifies the reason for declining a MasterCard and Visa recurring payment transaction.

            Valid Values:
            * NOT_PROVIDED
            * NEW_ACCOUNT_INFORMATION
            * TRY_AGAIN_LATER
            * DO_NOT_TRY_AGAIN
            * TOKEN_NOT_SUPPORTED
            * DO_NOT_HONOR
          example: NOT_PROVIDED
        expiry: {type: string, format: date, maxLength: 10, description: When does
            the recurring transaction expire in YYYY-MM-DD format., example: '2030-11-20'}
    Processor:
      x-model-version: 1.0
      description: Identifies the card processor.
      properties:
        processorName:
          type: string
          maxLength: 256
          description: |
            Identifies the payment processor.

            Valid Values:
            * FISERV
            * CHASE
        processingPlatform: 
          type: string
          maxLength: 256
          description:  |
            Identifies the payment platform of the processor.

            Valid Values:
            * NASHVILLE
            * TAMPA
            * SALEM
        priority:
          type: string
          maxLength: 256
          description:  |
            Identifies the priority to use each processor.

            Valid Values:
            * PRIMARY
            * SECONDARY
    AmountComponents:
      x-model-version: 1.0
      description: 'Used in transactions where additional <a href="../docs?path=docs/Resources/Master-Data/Amount-Components.md">amount</a> fields such as tax, surcharge, or fees are required as part of the request.'
      properties:
        unitPrice:
          type: number
          maximum: 999999999999999999.999
          description: 'Identifies the price per unit of measure for the product sold. This should exclude any taxes or charges.'
          example: 10.00
        subTotal:
          type: number
          maximum: 999999999999999999.999
          description: 'The total amount before any other costs, discounts, fees, or taxes.'
          example: 1.50
        cashback:
          type: number
          maximum: 999999999999999999.999
          description: 'For Debit, EBTCash, or Credit: The amount of cash requested by the cardholder at the time of purchase.'
          example: 1.50
        tip:
          type: number
          maximum: 999999999999999999.999
          description: 'The portion of the transaction amount that represents the tip.'
          example: 1.50
        surcharge:
          type: number
          maximum: 999999999999999999.999
          description: 'Identifies the transaction surcharge amount as an extra fee, tax, or cost added to the already existent cost of a good or service. Note: Not all processors and acquirers allow surcharge fees. For more information, please contact your account representative.'
          example: 1.50
        convenienceFee:
          type: number
          maximum: 999999999999999999.999
          description: 'Optional convenience fee for payments made through an alternative channel. rather than by cash, check, or ACH. Note: Not all processors and acquirers allow convenience fees. For more information, please contact your account representative.'
          example: 1.50
        shippingRate:
          type: number
          maximum: 100
          description: 'Shipping, delivery or freight rate percent.'
          example: 1
        shippingAmount:
          type: number
          maximum: 999999999999999999.999
          description: 'Total amount of shipping, delivery or freight charges applied.'
          example: 1.50
        freightAmount:
          type: number
          maximum: 999999999999999999.999
          description: 'Freight amount applied'
          example: 5.00
        freightRate:
          type: number
          maximum: 100
          description: 'Freight rate percent.'
          example: 1
        priceAdjustments:
          type: array
          description: 'Identifies the type of price adjustment being applied.'
          items:
            $ref: '#/components/schemas/PriceAdjustmentDetails'
        netAmount:
          description: 'The pre-tax cost of an item, minus any discounts or promotions.'
          type: number
          maximum: 999999999999999999.999
          example: 40.10
        taxAmounts:
          type: array
          description: 'Total amounts for taxes applied to the purchase'
          items:
            $ref: '#/components/schemas/TaxDetails'
        grossAmount:
          type: number
          maximum: 999999999999999999.999
          description: 'The total cost of an item, including the unit price and any other costs, discounts, fees, or taxes.'
          example: 100.50
    PriceAdjustmentDetails:
      x-model-version: 1.0
      description: ''
      properties:
        adjustmentType:
          type: string
          description: |+
            Identifies the type of price adjustment being applied.

            Valid Values:
            * DISCOUNT
            * PROMOTION
            * CREDIT
            * COUPON
            * FEES
          example: 'DISCOUNT'
        adjustmentDescription:
          type: string
          description: ''
          example: 'This is a discount'
        adjustmentRate:
          type: number
          maximum: 100
          description: 'Rate percent being applied.'
          example: 10
        adjustmentAmount:
          type: number
          maximum: 999999999999999999.999
          description: 'Amount being applied.'
          example: 2.00
    TaxDetails:
      x-model-version: 1.0
      description: ''
      properties:
        taxType:
          type: string
          description: |+
            Identifies the type of tax being applied.

            Valid Values:
            * UNKNOWN (default)
            * FEDERAL - Federal/National Sales Tax
            * STATE - State Sales Tax
            * CITY - City Sales Tax
            * LOCAL - Local Sales Tax
            * MUNICIPAL - Municipal Sales Tax
            * OTHER - Other Tax
            * DUTY - Duty tax
            * VAT - Value Added Tax
            * GST - Goods and Services Tax
            * PST - Provincial Sales Tax
            * HST - Harmonized Sales Tax
            * QST - Quebec Sales Tax
            * ITBIS - Industrialized Goods and Services Transfer Tax
            * ROOM - Room Tax
            * OCCUPANCY - Occupancy Tax
            * ENERGY - Energy Tax
            * ALTERNATE_TAX - Alternate Tax
            * NOT_SUPPORTED
          example: 'STATE'
        taxRate:
          type: number
          maximum: 100
          description: 'Tax rate percent being applied.'
          example: 10
        taxAmount:
          type: number
          maximum: 999999999999999999.999
          description: 'Tax amount being applied.'
          example: 2.00
        taxExempt:
          type: boolean
          description: 'Designates if the specified tax type is tax exempt. Tax Exempt (true) or Not Tax Exempt (false).'
          example: true

    RegionalDebit:
      x-model-version: 1.0
      description: 'Data that applies to <a href="../docs?path=docs/Resources/Guides/Debit/Regional-Debit.md">regional debit</a> transactions.'
      properties:
        pinBlock: {$ref: '#/components/schemas/PinBlock'}
        region: {type: string, description: Region of debit origin.}
        debitTransactionCode: {type: string, description: Identifies the debit transaction.}
        debitMACValue: {type: string, description: Used to confirm that the key data
            elements of the transaction have not been tampered.}
        encryptedKeyIndex: {type: number, description: 'Indicates the key index in
            use by PIN Pad, valid values are 1 through 9.', example: 1}
        messageAuthenticationWorkingKey: {type: string, description: A message authentication
            code for a working key that uses a session key to detect both accidental
            and intentional modifications of the data.}
        messageAuthenticationWorkingKeyCheckDigits: {type: string, description: A
            message authentication code for a working key that uses a session key
            to check digits.}
        messageEncryptionWorkingKey: {type: string, description: A message encryption
            working key is typically a random string of bits generated specifically
            to scramble and unscramble data.}
        debitPinPadSerialNumber: {type: string, description: Serial Number of the
            PIN device in use at the POS.}
        accountType: {type: string, description: CHECKING or SAVINGS, example: CHECKING}
        transactionSequenceCounter: {type: integer, description: Contains a unique
            sequence counter for this transaction from this point of sale.}
    ChargesResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        source: {$ref: '#/components/schemas/Source'}
        paymentReceipt: {$ref: '#/components/schemas/PaymentReceipt'}
        billingAddress: {$ref: '#/components/schemas/BillingAddress'}
        shippingAddress: {$ref: '#/components/schemas/ShippingAddress'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        dynamicDescriptors: {$ref: '#/components/schemas/DynamicDescriptors'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        cardDetails: {$ref: '#/components/schemas/CardDetails'}
        paymentToken: {$ref: '#/components/schemas/ResponsePaymentToken'}
        paymentTokens:
          type: array
          items: {$ref: '#/components/schemas/ResponsePaymentToken'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
        authOptimizationDetails: {$ref: '#/components/schemas/AuthOptimizationDetails'}
        additionalData3DS:
          $ref: '#/components/schemas/AdditionalData3DS'

    PaymentReceipt:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Payment-Receipt.md">Payment receipt</a> response details.
      properties:
        approvedAmount: {$ref: '#/components/schemas/Amount'}
        amountComponents:
          $ref: '#/components/schemas/AmountComponents'
        balances:
          type: array
          items:
            $ref: '#/components/schemas/Balance'
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        merchantName: {type: string, maxLength: 1024, description: Name of the merchant
            returned from boarded account or dynamic descriptor.}
        merchantAddress: {type: string, maxLength: 1024, description: Street address
            of the merchant returned from boarded account or dynamic descriptor.}
        merchantCity: {type: string, maxLength: 256, description: City of the merchant
            returned from boarded account or dynamic descriptor.}
        merchantStateOrProvince: {type: string, maxLength: 256, description: State
            or Province of the merchant returned from boarded account or dynamic descriptor.}
        merchantCountry: {type: string, maxLength: 256, description: Country of the
            merchant returned from boarded account or dynamic descriptor.}
        merchantURL: {type: string, maxLength: 256, description: Merchant URL returned
            from boarded account.}
        merchantPostalCode: {type: string, maxLength: 10, description: Postal code
            of the merchant returned from boarded account or dynamic descriptor.}

    Balance:
      x-model-version: 1.0
      description: '<a href="../docs?path=docs/Resources/Master-Data/Balance-Components.md">Balance</a> object to support account balances.'
      properties:
        beginningBalance:
          type: number
          maximum: 999999999999999999.999
          description: 'Account beginning balance.'
          example: 13.50
        endingBalance:
          type: number
          maximum: 999999999999999999.999
          description: 'Account ending balance.'
          example: 13.50
        currency:
          type: string
          maxLength: 3
          description: 'ISO 3 Currency Format.'
          example: 'USD'
        balanceType:
          type: string
          maxLength: 17
          description: 'Indicates <a href="../docs?path=docs/Resources/Master-Data/Balance-Components.md#balance-type">type</a> of account balance represents.'
          example: 'GIFT_CARD'

    ProcessorResponseDetails:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md">processor
        response</a> details.
      properties:
        approvalStatus: {type: string, description: Final status of the transaction.,
          example: APPROVED}
        approvalCode: {type: string, description: Approval code from the processor.,
          example: OK3483}
        authenticationResponseCode: {type: string, description: Response code from
            authentication.}
        referenceNumber: {type: string, description: Transaction reference number.,
          example: 845366457890-TODO}
        feeProgramIndicator: {type: string, description: Contains the Fee Program
            Indicator (FPI) code that may be returned on Debit or PLDebit transaction
            response., example: '123'}
        processor: {type: string, maxLength: 256, description: Card processor., example: FISERV}
        host: {type: string, maxLength: 256, description: Processing endpoint or issuer., example: NASHVILLE}
        networkRouted: {type: string, maxLength: 10, description: 'Network label that
            shows the network where the transaction was routed for authorization (e.g.
            NYCE, PULSE, STAR, Visa, Mastercard, etc.).'}
        PAR: {type: string, maxLength: 29, description: 'A Payment Account Reference
            (PAR) is a unique identifier associated with a specific cardholder PAN.
            This identification number can be used in place of sensitive consumer
            identification fields, and transmitted across the payments ecosystem to
            facilitate consumer identification.'}
        networkInternationalId:
          type: string
          maxLength: 16
          example: FISERV
          description: |
            This field identifies the acquiring host.

            Valid Values:
            * FISERV — Fiserv NII excluding Canadian Debit and Credit
            * CANADA — Canadian processing (Debit and Credit)
            * LAC — Latin America/Caribbean (LAC) solutions
            * MEXICO — Mexico (PROSA) solution
        responseCode: {type: string, description: Normalized transaction response
            code from the gateway (Commerce Hub Response)., example: '00000'}
        responseMessage: {type: string, description: Normalized transaction message
            from the gateway (Commerce Hub Response)., example: APPROVAL}
        hostResponseCode: {type: string, description: Endpoint or issuer response
            code., example: '00'}
        hostResponseMessage: {type: string, description: Endpoint or issuer response
            message., example: APPROVAL}
        localTimestamp: {type: string, format: date-time, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        debitReceiptNumber: {type: string, maxLength: 6, description: Debit Receipt
            Number generated by switch.}
        purchaseOrderRequiredIndicator:
          type: string
          maxLength: 15
          description: |+
            It identifies if the purchase order (PO) number is required.

            Valid Values:
            * REQUIRED
            * NOT_REQUIRED
          example: 'REQUIRED'
        taxExemptIndicator:
          type: string
          enum: ["TAX_EXEMPT", "NOT_EXEMPT"]
          description: |+
            Identifies if the customer is tax exempt.

            Valid Values:
            * TAX_EXEMPT
            * NOT_EXEMPT
          example: 'TAX_EXEMPT'
        purchaseAprType:
          type: string
          enum: ["VARIABLE", "FIXED"]
          description: |+
            The annual percentage rate charged on the account.

            Valid Values:
            * VARIABLE
            * FIXED
          example: 'VARIABLE'
        arqcResponseCode:
          type: string
          enum: ["VALIDATION_FAILED", "VALIDATION_UNAVAILABLE", "UNAVAILABLE", "VALIDATION_BYPASSED", "VALIDATION_PASSED"]
          description: |+
            An ARQC (Authorization Request Cryptogram) generated by the EMV card upon request from the pos terminal to obtain authorization for payment.

            Valid Values:
            * VALIDATION_FAILED
            * VALIDATION_UNAVAILABLE
            * UNAVAILABLE
            * VALIDATION_BYPASSED
            * VALIDATION_PASSED
          example: 'VALIDATION_UNAVAILABLE'
        responseIndicators: {$ref: '#/components/schemas/ResponseIndicator'}
        bankAssociationDetails: {$ref: '#/components/schemas/BankAssociationDetails'}
        additionalInfo:
          type: array
          items: {$ref: '#/components/schemas/NameValuePair'}
    ResponseIndicator:
      x-model-version: 1.0
      description: ''
      properties:
        alternateRouteDebitIndicator: {type: boolean, example: 'false'}
        signatureLineIndicator: {type: boolean, example: 'false'}
        signatureDebitRouteIndicator: {type: boolean, example: 'false'}
    BankAssociationDetails:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md#bank-association-details">Bank
        association</a> response details.
      properties:
        associationResponseCode: {type: string, maxLength: 32, description: Bank response
            code., example: '000'}
        transactionTimestamp: {type: string, format: date-time, maxLength: 64, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        transactionReferenceInformation: {type: string, maxLength: 256, description: Transaction
            reference information., example: ''}
        avsSecurityCodeResponse: {$ref: '#/components/schemas/AvsSecurityCodeResponse'}
    AvsSecurityCodeResponse:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md#address-and-security-code-response">Address
        and Security Code</a> verification response details.
      properties:
        streetMatch: {type: string, maxLength: 16, description: AVS street address
            result message., example: MATCH}
        postalCodeMatch: {type: string, maxLength: 16, description: AVS postal code
            result message., example: MATCH}
        securityCodeMatch: {type: string, maxLength: 16, description: Security code
            result message., example: MATCH}
        association: {$ref: '#/components/schemas/Association'}
    Association:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md#association-response">Bank
        association</a> security response details.
      properties:
        avsCode: {type: string, maxLength: 32, description: Bank AVS response code.,
          example: YY}
        securityCodeResponse: {type: string, maxLength: 32, description: Bank security
            code response., example: M}
        cardholderNameResponse: {type: string, maxLength: 32, description: 'Cardholder
            name response, if supported by card type.', example: '1'}
    NameValuePair:
      x-model-version: 1.0
      description: Generic object for the Name-Value pair types.
      properties:
        name: {type: string}
        value: {type: string}
    TransactionBatch:
      x-model-version: 1.0
      properties:
        julianDay: {type: string, description: 'The day of the year the current batch
            was opened, 001-366 format.', example: '001'}
        batchNumber: {type: string, description: The batch number within the Julian
            day for this transaction. values range from 000001 through 000999., example: '000001'}
        transactionClass: {type: string, description: 'Code that indicates the transaction
            that was logged under, ranges from 1 through 4--Captured- approved, Captured-
            Authorised Only, Declinced, Batch Control.', example: '1'}
        sequenceNumber: {type: string, description: 'Sequence number of this transaction
            within the current batch, ranges from 000001 through 000999.', example: '000001'}
    CardDetails:
      x-model-version: 1.0
      description: 'Card details for Account Information Response.'
      properties:
        binSource:
          type: string
          maxLength: 30
          description: |+
            Categorizes the source of the BIN record.
            
            Valid Values:
            * FISERV - (Default) Fiserv Global BIN file
            * CHASE - Chase BIN file(s)
            * PRIVATE_LABEL - Private Label specific BIN (availability restricted per merchant)
          example: 'CHASE'
        recordType:
          type: string
          maxLength: 10
          description: |+
            Record Type
            
            Valid Values:
            * DETAIL - Detail Record
          example: 'DETAIL'
        lowBin:
          type: string
          maxLength: 21
          description: 'This field contains the low BIN value of the BIN range.'
          example: '400337'
        highBin:
          type: string
          maxLength: 21
          description: 'This field contains the high BIN value of the BIN range.'
          example: '400338'
        binLength:
          type: string
          maxLength: 2
          description: 'Length of the BIN.'
          example: '6'
        binDetailPan:
          type: string
          maxLength: 2
          description: 'Displays the primary PAN length.'
          example: '16'
        issuerBankName:
          type: string
          maxLength: 100
          description: 'Issuer bank name for the BIN.'
          example: 'Example Bank'
        countryCode:
          type: string
          maxLength: 3
          description: 'ISO-3166-1 alpha-3 country code.'
          example: 'USA'
        detailedCardProduct:
          type: string
          maxLength: 21
          description: |+
            Card Product.
            
            Valid Values:
            * VISA - Visa
            * MASTERCARD - Mastercard
            * AMEX - American Express
            * DISCOVER - Discover
            * PIN_ONLY - PIN Only (Not Visa, Mastercard, American Express, Discover)
            * MAESTRO - International Maestro
            * DINERS - Diners Club
            * INTERAC - Interac
            * JCB - JCB
          example: 'VISA'
        detailedCardIndicator:
          type: string
          maxLength: 16
          description: |+
            Determines the card type (credit, debit).
            
            Valid Values:
            * CREDIT
            * DEBIT
            * COMMERCIAL_DEBIT
            * CONSUMER_DEBIT
          example: 'CREDIT'
        pinSignatureCapability:
          type: string
          maxLength: 16
          description: |+
            Determines the card PIN/Signature capability.

            Valid Values:
            * PIN_CAPABLE - PIN Capable
            * SIGNATURE - Signature Capable
            * PIN_OR_SIGNATURE - Supports Both PIN or Signature
          example: 'PIN_OR_SIGNATURE'
        issuerUpdateYear:
          type: string
          maxLength: 2
          description: 'The year the BIN record was last updated.'
          example: '20'
        issuerUpdateMonth:
          type: string
          maxLength: 2
          description: 'The month the BIN record was last updated.'
          example: '09'
        issuerUpdateDay:
          type: string
          maxLength: 2
          description: 'The day the BIN record was last updated.'
          example: '22'
        regulatorIndicator:
          type: string
          maxLength: 15
          description: |+
            Applies to US issued cards only (Visa, Mastercard, and Discover).
            
            Valid Values:
            * NON_REGULATED - (Default) ISS non-regulated (unregulated issuer OR Non US issued card)
            * REGULATED - ISS regulated (regulated issuer)
            * REGULATED_FRAUD - ISS regulated fraud (regulated issuer with fraud)
          example: 'NON_REGULATED'
        cardClass:
          type: string
          maxLength: 30
          description: |+
            Categorizes the BIN as a Business card, Corporate T&E card, Purchase card or Consumer card.
            
            Valid Values:
            * BUSINESS
            * CONSUMER
            * PURCHASE
            * CORPORATE
          example: 'CONSUMER'
        debitPinlessIndicator:
          type: array
          items:
            $ref: '#/components/schemas/DebitNetworkPinlessDetails'
          description: 'A list of Debit Network PINless Details.'
        ebtState:
          type: string
          maxLength: 2
          description: 'This is the EBT State. Will only be present if EBT capable. Information originates from the debit network.'
        fsaIndicator:
          type: string
          maxLength: 13
          description: |+
            FSA/HSA (Flexible Spending Account / Health Savings Account) indicator, which denotes prepaid card program in the US that permits use of funds to pay for qualified out of pocket medical expenses.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        nonMoneyTransferOCTsDomestic:
          type: string
          maxLength: 13
          description: |+
            Indicates if domestic non-money transfer OCTs are supported. Visa Only.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        nonMoneyTransferOCTsCrossBorder:
          type: string
          maxLength: 13
          description: |+
            Indicates if cross-border non-money transfer OCTs are supported. Visa Only.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        onlineGamblingOCTsDomestic:
          type: string
          maxLength: 13
          description: |+
            Indicates if domestic online gambling OCTs are supported. Visa Only.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        onlineGamblingOCTsCrossBorder:
          type: string
          maxLength: 13
          description: |+
            Indicates if cross-border online gambling OCTs are supported. Visa Only.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        moneyTransferOCTsDomestic:
          type: string
          maxLength: 13
          description: |+
            Indicates if domestic money transfer OCTs are supported. Visa Only.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        moneyTransferOCTsCrossBorder:
          type: string
          maxLength: 13
          description: |+
            Indicates if cross-border money transfer OCTs are supported. Visa Only.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        fastFundsDomesticMoneyTransfer:
          type: string
          maxLength: 13
          description: |+
            Indicates if fast funds is supported for domestic money transfer OCTs. Visa Only.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        fastFundsCrossBorderMoneyTransfer:
          type: string
          maxLength: 13
          description: |+
            Indicates if fast funds is supported for cross-border money transfer OCTs. Visa Only.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        fastFundsDomesticNonMoneyTransfer:
          type: string
          maxLength: 13
          description: |+
            Indicates if fast funds is supported for domestic non-money transfer OCTs. Visa Only.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        fastFundsCrossBorderNonMoneyTransfer:
          type: string
          maxLength: 13
          description: |+
            Indicates if fast funds is supported for cross-border non-money transfer OCTs. Visa Only.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        fastFundsDomesticGambling:
          type: string
          maxLength: 13
          description: |+
            Indicates if fast funds is supported for domestic gambling OCTs. Visa Only.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        fastFundsCrossBorderGambling:
          type: string
          maxLength: 13
          description: |+
            Indicates if fast funds is supported for cross-border gambling OCTs. Visa Only.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        prepaidIndicator:
          type: string
          maxLength: 13
          description: |+
            Indicates whether the card is prepaid.
            
            Valid Values:
            * NON_PREPAID - (Default) No / Not Supported
            * PREPAID - Yes / Supported
          example: 'SUPPORTED'
        anonymousPrepaidIndicator:
          type: string
          maxLength: 26
          description: |+
            Identifies whether Anonymous Prepaid is supported, like AMLD5 (Anti-Money Laundering Directive) compliant,
            non-AMLD5 compliant, or non-anonymous prepaid programs / not a prepaid program. Mastercard Only.

            Valid Values:
            * AMLD5_NON_COMPLIANT - Anonymous Mastercard and Maestro prepaid card programs, not AMLD5 compliant
            * AMLD5_COMPLIANT_EQUIVALENT - Anonymous Mastercard and Maestro prepaid card programs with restrictions considered by the issuer as either compliant with or equivalent to AMLD5 requirements
            * NON_ANONYMOUS - Non-Anonymous Mastercard and Maestro prepaid programs that follow full Know-Your-Customer (KYC) or Simplified Due Diligence (SDD) or not a Prepaid Program
            example: 'AMLD5_COMPLIANT_EQUIVALENT'
        productId:
          type: string
          maxLength: 5
          description: 'Indicates card product sub categories (Purchase Card, Business Card, etc.) for Visa, Mastercard, Discover or Private Label. Refer to BIN specs for valid values.'
          example: 'N1'
        visaProductSubType:
          type: string
          maxLength: 2
          description: 'This is used to identify product subtypes. Refer to BIN specs for valid values.'
          example: 'HC'
        visaLargeTicketIndicator:
          type: string
          maxLength: 13
          description: |+
            Visa large ticket indicator.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        accountFundSource:
          type: string
          maxLength: 15
          description: |+
            For Visa, Mastercard, Discover, and UnionPay. Identifies the source of the funds associated with the primary account for the card.
            
            Valid Values:
            * CREDIT - Credit
            * DEBIT - Debit
            * PREPAID - Prepaid
            * CHARGE - Charge
            * DEFERRED_DEBIT - Deferred Debit (Visa ONLY)
          example: 'CREDIT'
        panLengthMin:
          type: string
          maxLength: 2
          description: 'Primary Account Number (PAN) Length Minimum'
          example: '16'
        panLengthMax:
          type: string
          maxLength: 2
          description: 'Primary Account Number (PAN) Length Maximum'
          example: '16'
        tokenIndicator:
          type: string
          maxLength: 13
          description: |+
            Token indicator.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        issuingNetwork:
          type: string
          maxLength: 10
          description: |+
            Identifies Discover card types.

            Valid Values:
            * DISCOVER - Discover
            * DINERS - Diners
            * JCB - JCB (Japanese Credit Bank)
            * CUP - CUP (China Union Pay)
            * PAYPAL - PayPal
          example: 'DINERS'
        cardholderBillingCurrency:
          type: string
          maxLength: 3
          description: 'Cardholder billing currency in 3-letter ISO currency format.'
          example: 'USD'
        accountFundSourceSubtype:
          type: string
          maxLength: 22
          description: |+
            Account fund source subtype. Mastercard only.

            Valid Values:
            * PREPAID_RELOADABLE - Prepaid card is reloadable
            * PREPAID_NON_RELOADABLE - Prepaid card is non-reloadable
          example: 'PREPAID_RELOADABLE'
        b2bProgramId:
          type: string
          maxLength: 15
          description: |+
            Business-to-Business Virtual Payments Product Offering. Visa only.
            
            Valid Values:
            * B2B_PROGRAM_1 - B2B Program 1
            * B2B_PROGRAM_2 - B2B Program 2
            * B2B_PROGRAM_3 - B2B Program 3
            * B2B_PROGRAM_4 - B2B Program 4
            * B2B_PROGRAM_5 - B2B Program 5
            * B2B_PROGRAM_6 - B2B Program 6
          example: 'B2B_PROGRAM_1'
        moneySendIndicator:
          type: string
          maxLength: 25
          description: |+
            MoneySend is a set of a Mastercard network transactions that facilitate fund transfers.
            This indicator determines if the Mastercard account is eligible to receive a MoneySend payment.
            
            Valid Values:
            * UNKNOWN - (Default) MoneySend unknown
            * DOMESTIC_AND_CROSS_BORDER - MoneySend enabled Domestic and Cross-Border
            * DOMESTIC - MoneySend enabled Domestic only
            * NOT_ENABLED - NOT MoneySend enabled
          example: 'DOMESTIC_AND_CROSS_BORDER'
          
    DebitNetworkPinlessDetails:
      x-model-version: 1.0
      description: 'Debit network PINless details based on account/card info BIN data.'
      properties:
        debitNetworkId:
          type: string
          maxLength: 20
          description: |+
            
            Valid Values:
            * PAVD_FISERV - A5: PAVD FISERV
            * SHAZAM - 01: SHAZAM
            * NYCE - 02: NYCE
            * PULSE - 03: PULSE
            * STAR_WEST - 05: STAR-WEST
            * STAR_EAST - 07: STAR-EAST
            * JETS - 11: JETS
            * INFOLINKS - 12: INFOLINKS
            * CARLFS - 13: CARLFS
            * STAR_NE - 14: STAR NE
            * PAVD - 15: PAVD
            * CNB_ENID - 16: CNB-ENID
            * ATH_SCOTIA_BANK - 17: ATH-SCOTIA BANK
            * ATH_DIRECT - 18: ATH-DIRECT
            * INTERLINK - 19: INTERLINK
            * INTERAC_EVERLINK - 20: INTERAC EVERLINK
            * EVERLINK_INTERAC_ICU - 21: EVERLINK INTERAC ICU
            * UNIONPAY - 23: UNIONPAY
            * MAESTRO_DIRECT - 25: MAESTRO DIRECT
            * MCX - 26: MCX
            * EBT_SOLUTRAN - 28: EBT SOLUTRAN
            * EBT_ACS - 29: EBT ACS
            * MAESTRO_STAR_WEST - 30: MAESTRO STAR WEST
            * STAR_WEST_OPTION - 31: STAR WEST OPTION
            * JEANIE_STAR_WEST - 33: JEANIE STAR WEST
            * JEANIE_DIRECT - 34: JEANIE DIRECT
            * AFFN_DIRECT - 35: AFFN DIRECT
            * CU24_DIRECT - 36: CU24-DIRECT
            * EBT_TEAM_OF_TEXAS - 37: EBT TEAM OF TEXAS
            * EBT_JPCHASE - 39: EBT JPCHASE
            * SVS - 41: SVS
            * EXXON - 42: EXXON
            * BASE_24/INTERAC - 43: BASE 24/INTERAC
            * CU24_FIDELITY - 46: CU24-FIDELITY
            * EBT_EFUNDS - 47: EBT EFUNDS
            * AFFN_FIDELITY - 48: AFFN FIDELITY
            * EBT_NORTHRUP_GRUMMAN - 49: EBT NORTHRUP GRUMMAN
            * CU24_FISERV - 51: CU24-FISERV
            * AFFN_FISERV - 52: AFFN FISERV
            * STAR_EAST_FISERV - 56: STAR-EAST FISERV
            * PULSE_FISERV - 57: PULSE FISERV
            * NYCE_FISERV - 59: NYCE FISERV
            * STAR_WEST_FISERV - 62: STAR-WEST FISERV
            * STAR_NE_FISERV - 63: STAR NE FISERV
            * MAESTRO_FISERV - 64: MAESTRO FISERV
            * INTERLINK_FISERV - 65: INTERLINK FISERV
            * EBT_FISERV - 67: EBT-FISERV
            * ACCEL_FISERV - 68: ACCEL FISERV
            * OPTION_FISERV - 69: OPTION-FISERV
          example: 'STAR_WEST'
        pinlessPOS:
          type: string
          maxLength: 13
          description: |+
            PINless POS indicator.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        pinlessBillPay:
          type: string
          maxLength: 13
          description: |+
            PINless BillPay indicator.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        eCommerce:
          type: string
          maxLength: 13
          description: |+
            e-Commerce indicator.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        dualIndicator:
          type: string
          maxLength: 13
          description: |+
            Dual indicator.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
        pinnedPOS:
          type: string
          maxLength: 13
          description: |+
            Pinned POS indicator.
            
            Valid Values:
            * NOT_SUPPORTED - (Default) No / Not Supported
            * SUPPORTED - Yes / Supported
          example: 'SUPPORTED'
    
    LinkedTransactionDetails:
      x-model-version: 1.0
      description: 'Represents a gateway orchestrated child / linked transactions as part of the primary transaction process.'
      properties:
        referenceTransactionDetails:
          $ref: '#/components/schemas/ReferenceTransactionDetails'
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        transactionInteraction:
          $ref: '#/components/schemas/TransactionInteraction'
        source:
          $ref: '#/components/schemas/Source'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        paymentReceipt:
          $ref: '#/components/schemas/PaymentReceipt'
        transactionBatch:
          $ref: '#/components/schemas/TransactionBatch'
        networkDetails:
          $ref: '#/components/schemas/NetworkDetails'
        additionalDataCommon:
          $ref: '#/components/schemas/AdditionalDataCommon'
        paymentTokens:
          type: array
          items:
            $ref: '#/components/schemas/ResponsePaymentToken'

    ResponsePaymentToken:
      x-model-version: 1.0
      properties:
        tokenData: {type: string, maxLength: 2048, description: Token created from
            the payment source., example: '1234123412340019'}
        tokenSource: {type: string, maxLength: 256, description: Source for the Token
            Service Provider (TSP)., example: TRANSARMOR}
        tokenResponseCode: {type: string, maxLength: 256, description: Response code
            for token generation request., example: '000'}
        tokenResponseDescription: {type: string, maxLength: 256, description: Response
            description for token generation request., example: SUCCESS}
    AuthOptimizationDetails:
      x-model-version: 1.0
      description: Updated account details provided by Auth Optimizer for expired
        cards
      properties:
        accountStatus:
          type: string
          description: |+
            Indicates the current status of the account.

            Valid Values:
            * ACCOUNT_CHANGE
            * ACCOUNT_CLOSED
            * EXPIRATION_CHANGE
            * CONTACT_CARDHOLDER
          example: 'ACCOUNT_CHANGE'
        accountUpdaterErrorCode: {type: string, description: Error code provided the
            account updater system., example: VAU001}
        originalResponseCode: {type: string, description: Original Response Code for
            re-authorized (Optimized) transaction., example: '006'}
    CancelRequest:
      x-model-version: 1.0
      properties:
        amount: {$ref: '#/components/schemas/Amount'}
        amountComponents:
          $ref: '#/components/schemas/AmountComponents'
        source: {$ref: '#/components/schemas/Source'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        referenceTransactionDetails: {$ref: '#/components/schemas/ReferenceTransactionDetails'}
        dynamicDescriptors: {$ref: '#/components/schemas/DynamicDescriptors'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
    CancelResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        source: {$ref: '#/components/schemas/Source'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        paymentReceipt: {$ref: '#/components/schemas/PaymentReceipt'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
    RefundRequest:
      x-model-version: 1.0
      properties:
        source: {$ref: '#/components/schemas/Source'}
        amount: {$ref: '#/components/schemas/Amount'}
        amountComponents:
          $ref: '#/components/schemas/AmountComponents'
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        referenceTransactionDetails: {$ref: '#/components/schemas/ReferenceTransactionDetails'}
        dynamicDescriptors: {$ref: '#/components/schemas/DynamicDescriptors'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
    RefundResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        source: {$ref: '#/components/schemas/Source'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        paymentReceipt: {$ref: '#/components/schemas/PaymentReceipt'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
        authOptimizationDetails: {$ref: '#/components/schemas/AuthOptimizationDetails'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
    AccountVerificationRequest:
      x-model-version: 1.0
      properties:
        source: {$ref: '#/components/schemas/Source'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        billingAddress: {$ref: '#/components/schemas/BillingAddress'}
        transactionProcessingDetails: {$ref: '#/components/schemas/TransactionProcessingDetails'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
    AccountVerificationResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        responsePaymentToken: {$ref: '#/components/schemas/ResponsePaymentToken'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
    TokenizationRequest:
      x-model-version: 1.0
      properties:
        source:
          $ref: '#/components/schemas/Source'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        additionalDataCommon:
          $ref: '#/components/schemas/AdditionalDataCommon'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        transactionInteraction:
          $ref: '#/components/schemas/TransactionInteraction'
        additionalData3DS:
          $ref: '#/components/schemas/AdditionalData3DS'
        storedCredentials:
          $ref: '#/components/schemas/StoredCredentials' 

    TokenizationResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        source:
          $ref: '#/components/schemas/Source'
        cardDetails:
          type: array
          items:
            $ref: '#/components/schemas/CardDetails'
        paymentToken:
          $ref: '#/components/schemas/ResponsePaymentToken'
        paymentTokens:
          type: array
          items:
            $ref: '#/components/schemas/ResponsePaymentToken'
        processorResponseDetails:
          $ref: '#/components/schemas/ProcessorResponseDetails'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        additionalData3DS:
          $ref: '#/components/schemas/AdditionalData3DS'
        storedCredentials:
          $ref: '#/components/schemas/StoredCredentials'

    ThreeDSAuthenticationRequest: 
      x-model-version: 1.0
      properties:
        source:
          $ref: '#/components/schemas/Source'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        transactionInteraction:
          $ref: '#/components/schemas/TransactionInteraction'
        referenceTransactionDetails: 
          $ref: '#/components/schemas/ReferenceTransactionDetails'
        orderData:
          $ref: '#/components/schemas/OrderData'
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddress'
        customer:
          $ref: '#/components/schemas/Customer'
        amount: 
          $ref: '#/components/schemas/Amount'
        storedCredentials:
          $ref: '#/components/schemas/StoredCredentials'
        additionalData3DS:
          $ref: '#/components/schemas/AdditionalData3DS'

    ThreeDSAuthenticationResponse: 
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        source:
          $ref: '#/components/schemas/Source'
        processorResponseDetails:
          $ref: '#/components/schemas/ProcessorResponseDetails'
        additionalData3DS:
          $ref: '#/components/schemas/AdditionalData3DS'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        networkDetails:
          $ref: '#/components/schemas/NetworkDetails'

    ThreeDSDeviceDataInitializationRequest:
      x-model-version: 1.0
      properties:
        source:
          $ref: '#/components/schemas/Source'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        transactionDetails: 
          $ref: '#/components/schemas/TransactionDetails'
        additionalData3DS:
          $ref: '#/components/schemas/AdditionalData3DS'
        transactionProcessingDetails:
          $ref: '#/components/schemas/TransactionProcessingDetails'

    ThreeDSDeviceDataInitializationResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        source:
          $ref: '#/components/schemas/Source'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        processorResponseDetails:
          $ref: '#/components/schemas/ProcessorResponseDetails'
        additionalData3DS:
          $ref: '#/components/schemas/AdditionalData3DS'

    ThreeDSVerificationRequest: 
      x-model-version: 1.0
      properties: 
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        referenceTransactionDetails: 
          $ref: '#/components/schemas/ReferenceTransactionDetails'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'

    ThreeDSVerificationResponse: 
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        source:
          $ref: '#/components/schemas/Source'
        processorResponseDetails:
          $ref: '#/components/schemas/ProcessorResponseDetails'
        additionalData3DS:
          $ref: '#/components/schemas/AdditionalData3DS'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'

    AdditionalData3DS:
      x-model-version: 1.0
      description: '<a href="../docs?path=docs/Resources/Master-Data/Additional-Data-3DS.md">Additional data</a> passed during a 3-D Secure (3DS) authentication.'
      properties: 
        acsReferenceNumber:
          type: string
          maxLength: 60
          description: 'Unique reference number assigned by the Access Control Server (ACS) to identify a single transaction.'
          example: '8561c0ef-931a-474f-bfee-55eb98a331b1'
        acsTransactionId:
          type: string
          maxLength: 60
          description: 'Unique transaction identifier assigned by the Access Control Server (ACS) to identify a single transaction.'
          example: '8561c0ef-931a-474f-bfee-55eb98a331b1'
        acsUrl:
          type: string
          maxLength: 256
          description: 'The URL to redirect the Consumer to complete the Consumer Authentication transaction.'
          example: 'https://www.example.com/3ds/redirect'
        authenticationStatus:
          type: string
          maxLength: 2
          description: 'The result of authentication attempt returned by the 3D Secure authentication process (PaRes).'
          example: 'A'
        authenticationAttemptResult:
          type: string
          maxLength: 1024
          description: 'Result of authentication attempt from Payer Authentication Response (PaRes). 3DS 1.x'
          example: 'uyt45t89cnwu3rhc98a4hterjklth4o8ctsrjzth4'
        challengeIndicator:
          type: boolean
          description: 'Indicator that forces a customer to complete a transaction using 3-D Secure (3DS) if available.'
          example: true
        challengeStatus:
          type: string
          maxLength: 2
          description: 'The transaction status as returned by the 3D Secure authentication process. (CRes)'
          example: 'A'
        challengeToken:
          type: string
          maxLength: 1024
          description: 'Java web token for 3-D Secure.'
          example: 'uyt45t89cnwu3rhc98a4hterjklth4o8ctsrjzth4'
        channel:
          type: string
          maxLength: 32
          description: 'Determines the <a href="../docs?path=docs/Resources/Master-Data/Additional-Data-3DS.md">channel</a> that the transaction came through.'
          example: 'BROWSER'
        dsTransactionId:
          type: string
          maxLength: 60
          description: 'Unique transaction identifier assigned by the Directory Server (DS) to identify a single transaction'
          example: '8561c0ef-931a-474f-bfee-55eb98a331b1'
        serverTransactionId:
          type: string
          maxLength: 60
          description: 'Unique transaction identifier assigned by the 3DS Server to identify a single transaction'
          example: '8561c0ef-931a-474f-bfee-55eb98a331b1'
        serviceProvider:
          type: string
          description: 'The 3DS service provider responsible for managing the 3DS transaction'
          maxLength: 32
          example: 'CARDINAL'
        serviceProviderReferenceId:
          type: string
          maxLength: 60
          description: 'Unique reference identifier assigned by the 3DS Server during an initialization.'
          example: '764a086f-ad30-4313-b90d-d6dc1929c0d6'
        serviceProviderTransactionId:
          type: string
          maxLength: 60
          description: 'Unique transaction identifier assigned by the 3DS Server to identify a single transaction.'
          example: '764a086f-ad30-4313-b90d-d6dc1929c0d6'
        statusReason:
          type: string
          maxLength: 16
          description: 'Details about a given transaction status.'
          example: 'Approved'
        stepUpUrl:
          type: string
          maxLength: 256
          description: 'The URL that the client uses to post the cardholder in order to complete the Consumer Authentication transaction.'
          example: 'https://www.example.com/3ds/stepUp'
        methodData:
          $ref: '#/components/schemas/MethodData3DS'
        mpiData:
          $ref: '#/components/schemas/MpiData3DS'
        versionData:
          $ref: '#/components/schemas/VersionData3DS'

    MethodData3DS:
      x-model-version: 1.0
      description: 'Additional device data collection details passed during 3-D Secure (3DS) flows.'
      properties:
        dataCollectionUrl:
          type: string
          maxLength: 256
          description: 'The URL that will be used by the 3DS Method to collect card holder browser information'
          example: 'https://www.example.com/3ds/device/collect'
        encodedToken:
          type: string
          maxLength: 4000
          description: 'Base64 encoded transactional JWT token for external data collection with service provider.'
          example: "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiaWF0IjoxNTE2MjM5MDIyfQ.SflKxwRJSMeKKF2QT4fwpMeJf36POk6yJV_adQssw5c"
        encodedData:
          type: string
          maxLength: 4000
          description: 'Base64 encoded data for external data collection with service provider.'
          example: "eyJ0aHJlZURTU2VydmVyVHJhbnNJRCI6IjNhYzdjYWE3LWFhNDItMjY2My03OTFiLTJhYzA1YTU0MmM0YSJ9"
        notificationUrl:
          type: string
          maxLength: 256
          description: 'The notification URL to which the 3-D Secure (3DS) provider will send the result of the device data collection'
          example: "https://www.example.com/webhooks/v1/callback"

    MpiData3DS:
      x-model-version: 1.0
      description: 'Merchant plug-in data from 3-D Secure (3DS) authentication.'
      properties:
        cavv:
          type: string
          maxLength: 256
          description: 'The Cardholder Authentication Verification Value (CAVV) is a cryptographic value derived by the issuer during payment authentication that can provide evidence of the results of payment authentication during an online purchase.'
          example: 'AAABCZIhcQAAAABZlyFxAAAAAAA'
        xid:
          type: string
          maxLength: 512
          description: '3-D Secure value returned by service provider e.g. Cardinal Commerce.'
          example: '&x_MD5_Hash=abfaf1d1df004e3c27d5d2e05929b529&x_state=BC&x_reference_3=&x_auth_code=ET141870&x_fp_timestamp=1231877695'
        eci:
          type: string
          maxLength: 256
          description: 'Payment system-specific value provided by the Access Control Server (ACS) or Directory Server (DS) to indicate the results of the attempt to authenticate the cardholder.'
          example: '05'
        tavv:
          type: string
          maxLength: 512
          description: 'Cryptographic value that is generated during the Visa transaction authentication process for a payment token transaction.'
          example: 'AAABCZIhcQAAAABZlyFxAAAAAAA'

    VersionData3DS:
      x-model-version: 1.0
      description: 'Additional version data passed during 3-D Secure (3DS) flows.'
      properties:
        recommendedVersion:
          type: string
          maxLength: 6
          description: 'Recommended 3DS version as specified by the card issuer'
          example: '2.2.0'

    EnhancedDataServiceRequest:
      x-model-version: 1.0
      properties:
        amount: {$ref: '#/components/schemas/Amount'}
        source: {$ref: '#/components/schemas/Source'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        dynamicDescriptors: {$ref: '#/components/schemas/DynamicDescriptors'}
        billingAddress: {$ref: '#/components/schemas/BillingAddress'}
        shippingAddress: {$ref: '#/components/schemas/ShippingAddress'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        customer: {$ref: '#/components/schemas/Customer'}
        fraudAttributes: {$ref: '#/components/schemas/FraudAttributes'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        additionalDataCommon: {$ref: '#/components/schemas/AdditionalDataCommon'}
        orderData: {$ref: '#/components/schemas/OrderData'}
        splitTender: {$ref: '#/components/schemas/SplitTender'}
    FraudAttributes:
      x-model-version: 1.0
      description: Fraud related Parameters
      properties:
        riskScore: {type: integer, maximum: 100, description: 'Merchant’s defined
            fraud risk score for this transaction 0-100, 100 being highest risk.',
          example: 100}
        suspicious: {type: boolean, description: 'If the merchant detected suspicious
            activity on card, account or device used for this transaction in prior
            60 days.', example: 'true'}
    SplitTender:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Guides/Split-Tender.md">Split
        tender</a> information passed during a transaction request.
      properties:
        splitTenderId: {type: string, maxLength: 1024, description: A partially-authorized
            transaction will generate a split tender ID. Subsequent transactions to
            complete the authorization should include the split tender ID so that
            all the transactions comprising that authorization can be linked., example: '12423434'}
        splitTenderMethod:
          type: array
          items: {$ref: '#/components/schemas/SplitTenderMethod'}
    SplitTenderMethod:
      x-model-version: 1.0
      properties:
        type:
          type: string
          maxLength: 32
          description: |+
            Identifies the additional forms of payment used as part of this order.
            
            Valid Values:         
            * CREDIT_CARD
            * COUPON
            * GIFT_CARD
            * STORE_CREDIT
            * DEBIT_CARD
            * EBT_SNAP
          example: 'CREDIT_CARD'
        count: {type: integer, maximum: 99, description: Number of accounts presented
            of this type., example: 2}
        amount: {$ref: '#/components/schemas/Amount'}
    SplitSettlement:
      x-model-version: 1.0
      description: 'Split settlement information that is used to split payouts of a transaction into multiple accounts.'
      properties:
        merchantId:         
          type: string
          maxLength: 1024
          description: 'The merchant ID for each merchant account involved in split settlement.'
          example: 123456789011
        subTotal:
          type: number
          maximum: 999999999999999999.999
          description: 'The subtotal for each merchant account involved in split settlement.'
          example: 13.50
        accountDetails:
          type: array
          items:
            $ref: '#/components/schemas/AccountDetails'
    AccountDetails:
      x-model-version: 1.0
      description: 'Account information.'
      properties:
        name:
          type: string
          maxLength: 1024
          description: 'An account name for split settlement.'
          example: 'ABC Inc'
        type:
          type: string
          description: 'Type of split settlement account.'
          example: 'FEE_ACCOUNT'
        amount:
          $ref: '#/components/schemas/Amount'

    EnhancedDataServiceResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
    ReturnOptimizerRequest:
      x-model-version: 1.0
      properties:
        source: {$ref: '#/components/schemas/Source'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}

    GiftCardRequest:
      x-model-version: 1.0
      properties:
        referenceTransactionDetails:
          $ref: '#/components/schemas/ReferenceTransactionDetails'
        amount:
          $ref: '#/components/schemas/Amount'
        amountComponents:
          $ref: '#/components/schemas/AmountComponents'
        source:
          $ref: '#/components/schemas/Source'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        orderData:
          $ref: '#/components/schemas/OrderData'
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        customer:
          $ref: '#/components/schemas/Customer'
        storedCredentials:
          $ref: '#/components/schemas/StoredCredentials'
        transactionInteraction:
          $ref: '#/components/schemas/TransactionInteraction'
        networkDetails:
          $ref: '#/components/schemas/NetworkDetails'
        additionalDataCommon:
          $ref: '#/components/schemas/AdditionalDataCommon'
        target:
          $ref: '#/components/schemas/Source'
    GiftCardResponse: 
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        source:
          $ref: '#/components/schemas/Source'
        paymentReceipt:
          $ref: '#/components/schemas/PaymentReceipt'
        billingAddress:
          $ref: '#/components/schemas/BillingAddress'
        shippingAddress:
          $ref: '#/components/schemas/ShippingAddress'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        transactionInteraction:
          $ref: '#/components/schemas/TransactionInteraction'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        dynamicDescriptors:
          $ref: '#/components/schemas/DynamicDescriptors'
        additionalDataCommon:
          $ref: '#/components/schemas/AdditionalDataCommon'
        networkDetails:
          $ref: '#/components/schemas/NetworkDetails'
        cardDetails:
          $ref: '#/components/schemas/CardDetails'
        paymentTokens:
          type: array
          items: 
            $ref: '#/components/schemas/ResponsePaymentToken'
        storedCredentials:
          $ref: '#/components/schemas/StoredCredentials'
        authOptimizationDetails:
          $ref: '#/components/schemas/AuthOptimizationDetails'
        linkedTransactions:
          type: array
          items:
            $ref: '#/components/schemas/LinkedTransactionDetails'
        target: 
          $ref: '#/components/schemas/Source'
    BalanceInquiryRequest:
      x-model-version: 1.0
      properties:
        source:
          $ref: '#/components/schemas/Source'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        transactionInteraction:
          $ref: '#/components/schemas/TransactionInteraction'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        additionalDataCommon:
          $ref: '#/components/schemas/AdditionalDataCommon'
    BalanceInquiryResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        source:
          $ref: '#/components/schemas/Source'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        transactionInteraction:
          $ref: '#/components/schemas/TransactionInteraction'
        additionalDataCommon:
          $ref: '#/components/schemas/AdditionalDataCommon'
        networkDetails:
          $ref: '#/components/schemas/NetworkDetails'
        paymentReceipt:
          $ref: '#/components/schemas/PaymentReceipt'

    ReturnOptimizerResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        transactionScoreResponse: {$ref: '#/components/schemas/TransactionScoreResponse'}
    TransactionScoreResponse:
      x-model-version: 1.0
      description: Response containing return score details
      properties:
        invocationId: {type: string, description: Unique Identifier associated with
            the invocation response, example: ad0760bf-2db5-4ba9-b294-0d2241ff58f8}
        consumerType:
          type: string
          description: |+
            Indicator for new or returning customer. myReturnScoreDetails and peerReturnScoreDetails will not be present for New Customers

            Valid Values:
            * New
            * Existing
          example: Existing
        modelId: {type: string, description: Model Identifier, example: 1.0.0}
        myReturnScoreDetails: {$ref: '#/components/schemas/MyReturnScoreDetails'}
        peerReturnScoreDetails: {$ref: '#/components/schemas/ReturnScoreDetails'}
    MyReturnScoreDetails:
      x-model-version: 1.0
      description: My Return Score Details
      allOf:
      - {$ref: '#/components/schemas/ReturnScoreDetails'}
      - type: object
        properties:
          score: {maximum: 100, minimum: 0, type: integer, description: Normalized
              score of a return probability. 0 indicating a low returner and 100 indicating
              a high returner., example: 100}
          returnProbabilityProfile:
            type: string
            description: |+
              Bucketed return probability profile

              Valid Values:
              * High
              * Low
            example: High
    ReturnScoreDetails:
      x-model-version: 1.0
      description: Return Score Details
      properties:
        averageReturnValue: {type: number, description: Average amount value returned
            (ARV), example: 45.53}
        averageOrderValue: {type: number, description: Average amount value spent
            (AOV), example: 275.25}
        percentSalesReturned: {maximum: 1, minimum: 0, type: number, description: '%
            of sales returned (by Amount)', example: 0.3}
    SecurityCredentialsRequest:
      x-model-version: 1.0
      properties:
        domains:
          type: array
          description: 'A whitelist of domains that are applicable for this credentials request.'
          items:
            $ref: '#/components/schemas/Domain'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
    SecurityCredentialsResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        keyId:
          type: string
          description: 'Unique identifier of the public encryption key.'
          maxLength: 64
          example: '16116eb9-365c-4465-9017-e5bd7f153b9c'
        publicKey:
          type: string
          description: 'Base64 encoded public encryption key.'
          maxLength: 4000
          example: 'TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROE......'
        keyLength:
          type: integer
          description: 'Length of the Base64 encoded public encryption key.'
          maxLength: 10
          example: 392
        accessToken:
          type: string
          description: 'Access token credential to be used in subsequent API calls.'
          maxLength: 2048
          example: 'saAOM9qjmKfdazqgoZrKbJuukCP9'
        sessionId:
          type: string
          description: 'Unique identifier for this session'
          maxLength: 64
          example: '1a47b28f-b15d-45d2-9394-07f79ee5e954'
        domains:
          type: array
          description: 'A whitelist of domains that are applicable for this credentials request.'
          items:
            $ref: '#/components/schemas/Domain'
        accessTokenIssuedTime:
          type: string
          format: date-time
          description: 'Token issue time in YYYY-MM-DDThh:mm:ssZ format.'
          example: '2016-04-16T16:06:05Z'
        accessTokenTimeToLive:
          type: integer
          description: 'Time to live (expiration time) in seconds. 1800s, max 30 minutes.'
          example: 1800
        asymmetricEncryptionAlgorithm:
          type: string
          description: 'Asymmetric encryption algorithm associated with the public key'
          maxLength: 32
          example: 'RSA'
        accessTokenType: 
          type: string
          maxLength: 50
          description: |+
            Access token type.'
            Valid Values: 
            * BEARER
            * JWT (JSON Web Token)
    Domain:
      x-model-version: 1.0
      description: 'An object that represents a HTTP domain'
      properties:
        url:
          type: string
          maxLength: 2048
          description: 'URL associated with the HTTP domain'
          example: 'https://store.example.com'
  
    EncryptionKeyRequest:
      x-model-version: 1.0
      properties:
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
    EncryptionKeyResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        asymmetricKeyDetails:
          $ref: '#/components/schemas/KeyPairDetails'
        symmetricKeyDetails:
          $ref: '#/components/schemas/KeyDetails'

    KeyDetails:
      x-model-version: 1.0
      properties:
        keyId:
          type: string
          maxLength: 64
          description: 'Key ID is provided to get the corresponding RSA public key.'
          example: '924ee01b95ff1bfb45514cbe28f913725d82f8fe0ffc450c3582b00bc4b8414d'
        encryptionType:
          type: string
          maxLength: 32
          description: 'Encryption type to be passed. Possible values: RSA, Verifone, TDES/DUKPT,On-Guard FPE, AES/Dukpt. Defaults to RSA'
          example: 'RSA'
        modulus:
          type: integer
          description: 'Modulus size of the key pair'
          example: '2048'
        encodedPublicKey:
          type: string
          description: 'Encoded public key.'
          example: 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAu3Kb+9MaQc1GWSol0ZWJJhvBvk2p6BVj1vDaGrPBa2xGsoMMgef1YiA3wXv7Yd5JSKrg4ZH1GkhoGEFqX1nBKyBBzcutZYx0XU7RaWvZBAEPjQeBwOUSe2oXLxCnZ4IuR+s73ZuFGw1K5jQt3NkRJuzA0WWLJQryBIbTJ84Cx5u5qYW2LLchOKVPJMqawIcdXkHjDemJ8pHvwbrZmLDgc9FDTbyQeX1ckveIG1tqVM4AiqXrrscgb7QocOxJ4Ag8jBprOnnqm/TBaTrW8/Duo8g/RWIf5QnQc5oekaQa9Yt8kXk9Px0KWcdzJasyy1aHgvuW9eJVYcM/uu/bHAWqVwIDAQAB'
    KeyPairDetails:
      x-model-version: 1.0
      properties:
        keyId:
          type: string
          maxLength: 64
          description: 'Unique identifier of the key pair.'
          example: '924ee01b95ff1bfb45514cbe28f913725d82f8fe0ffc450c3582b00bc4b8414d'
        encryptionType:
          type: string
          maxLength: 32
          description: 'Encryption type of the key pair. Defaults to RSA'
          example: 'RSA'
        modulus:
          type: integer
          description: 'Modulus size of the key pair'
          example: '2048'
        encodedPublicKey:
          type: string
          description: 'Encoded public key. Possible encodings: Base64, Hex'
          example: '30820122300D06092A864886F70D01010105000382010F003082010A0282010100BB729BFBD31A41CD46592A25D19589261BC1BE4DA9E81563D6F0DA1AB3C16B6C46B2830C81E7F5622037C17BFB61DE4948AAE0E191F51A486818416A5F59C12B2041CDCBAD658C745D4ED1696BD904010F8D0781C0E5127B6A172F10A767822E47EB3BDD9B851B0D4AE6342DDCD91126ECC0D1658B250AF20486D327CE02C79BB9A985B62CB72138A54F24CA9AC0871D5E41E30DE989F291EFC1BAD998B0E073D1434DBC90797D5C92F7881B5B6A54CE008AA5EBAEC7206FB42870EC49E0083C8C1A6B3A79EA9BF4C1693AD6F3F0EEA3C83F45621FE509D0739A1E91A41AF58B7C91793D3F1D0A59C77325AB32CB568782FB96F5E25561C33FBAEFDB1C05AA570203010001'
        encodedPrivateKey:
          type: string
          description: 'Encoded private key. Possible encodings: Base64, Hex'
          example: 'C7F6C53FDCD9B49F664EDB759548A373766B042F603D99A61BD74C99D9886E46D22A7CB0C9A5A965D7F85E2C54F26C75C02BEE9EE8AB66534453CEF60874EA5ADC0966125AADDC326D3858766A822AC9EB7C63F6E0F19C352178A806838E315BC1B4BA9CE98D31AF6845EAA2B27F54772501910C9C1619148F7219075D494115C722842F54968F6E3AB14BBD6F361BE6C9CA4A86C0B03F32BA08CCA9EDFDEEC20328F4228CBEFDD6A0F91CA9B2222B633198DB0447FB2EF137718B70EFEAE11D88C9B1D556685A758B7D3CD3547483A5F4BA7AFA8E0BDF68C82AA9F19A43763861B05F73BECBE676D6801D1AF1597936BC1B970535C8C9E77DB137A2D117BCEB97C2FA865C94195CAADE1960C367F947EA3541B8D57E36E0CF50A01FF5069514830D3B2C5FBBA05F27A43353566F4FDC5928572CFD0A56D4B37900913DF960B0D80D0395154998C476445AB68FA407F09FEB81966D1289ED1284B00C25D7FBEABBCB48BEA02A7547DDA69D057148B909294583798E218ACA3D0098F9CB1C4703528BDE7D375CC710E7E2F33BB3F00BBB3A60D717A64208F3A6F1BF9512F01E7CA099E11ECC5C594D8497E3EE433D55387A65F4CE4F1D2D17EA77310C063AAF485DD9BBCD8581989CB36154DC3F38B03A980CA4E54943439942A7A438D2CA75AC7F0916C798FBEB891AEACDFA4F8742AC0DC74D8766830802F3BF61F4BE4A15B5B7BEB43654CB2E8E5BAA45AEAE4BA8DD10A112D3C732C50C04BEA676A7B16A4F86E4BEAEEE7FE574B3495CF8DE0EA9D0B21D48A40EE35DFAA65EFC128753A3955ABA62ABEB006EF911E647895DC9E362DD7FFA89465545EDFD6997CAFAB81946D83DBC28CF3450EB5FDF04052EAFC8DB51F7245B7D798F71F25AB80EFA2E3285289A8DAF217D3598B055B9CC1D25CC0DE3F797B662534BEC00F831FFF9A62DE142EFAE8B3F99531CA0C9B91063569A88144CC9B9BCD5A7548692EADEFA335F1F599C8D80619E3A54FB14419384168618D5DCEDF9ABEEC795C58CB5ECDCA7031634AA4B6822B7D8F1D1BE7E21B7CDCCEF45D19E7B19B9CE630799213165ED979591E2C26D0F81AF9017F9CF8DDC6E5456ED10755638A03D6893341F85D11B60458DB6C53CB8CCAF64840C7499A95B0FB7267469FFECB69907056469AFC26246DB074A7C96AE02ADA2CC1D9383E8B6BD16CD1A6D4281E37BEE47D2A3621C1521B9ED30F7CF7AFE21EB054E6276BFEFAF58D2CBD99E57BDC7A747DD9B80A6CB8AE469A5E2FBE3EA78E4F54DF7A9E809FFD5AC584901114151D8EEAD5BEB7F14F2C52C9C10D998685A41E9649C90D0316037B886F61856349385C730B7968701288C4C69174F54C48F2DDD44DCD082F37D0066A8E6AACD4F7FAEAADB85624EC847EDE28D2FA90BDCE22CB68693F44AB960A83F32C59F9E7EE6303F25E9D49824031CD8E02707C04E16797C930F310C9B5233064FE611B54B7884EAF2A4B9E85B94005F4BADB24B5DC625AC6B6DDAF2F6CF0660A343B6F7133FA4295B305E53C526937FC2797C6F3951D28C8FF577EE267707EB108B97CE2AE084335211DD752339E84EF1A0C6BD01D517EF6FAE3424DA82F8D25809C1D87B8F622A4093165C3E69CB421FF4DD4946D185110958A2A1B000373A2957DBF92227576B4DB7150EF1392CA7C32BDA4B413044AD45D20C7D82DF9A4817142A49F790F45FC6D03FFBE658F2AC5FEE0F5EAF1C5D05FEA65649BCF2B8'
        validFrom:
          type: string
          format: date-time
          description: 'Date and time the key pair is valid from in YYYY-MM-DDThh:mm:ssZ format.'
          example: '2021-04-30T04:00:00.000Z'
        validTo:
          type: string
          format: date-time
          description: 'Date and time the key pair is valid to in YYYY-MM-DDThh:mm:ssZ format.'
          example: '2021-07-30T04:00:00.000Z'
        status:
          type: string
          maxLength: 10
          description: 'Status of the key pair. Valid values are ACTIVE, INACTIVE, REVOKED or LEGACY'
          example: 'ACTIVE'

    HealthCheckStatusResponse:
      x-model-version: 1.0
      properties:
        environment:
          type: string
          maxLength: 16
          description: 'Tells about the environment in which the status is requested.'
          example: 'prod'
        apiKey:
          type: string
          description: 'Health check status on behalf of this Api-Key.'
          example: 'Pv3bTlh4Gdz6**********Kbccz6sqTAFXMea4'
        from:
          type: string
          format: date-time
          description: 'Errors are counted from this timestamp (GMT).'
          example: '2023-10-23T15:52:00.000000000Z'
        to:
          type: string
          format: date-time
          description: 'Errors are counted till this timestamp (GMT).'
          example: '2023-10-23T16:06:00.000000000Z'
        metrics:
          type: array
          items:
            $ref: '#/components/schemas/Metric'

    HttpError:
      x-model-version: 1.0
      description: 'An object that represents a HTTP Error'
      properties:
        code:
          type: string
          maxLength: 8
          description: 'HTTP error code'
          example: '400'
        count:
          type: string
          maxLength: 8
          description: 'Number of occurrence per HTTP error code.'
          example: '2'
        lastOccurred:
          type: string
          format: date-time
          description: 'The timestamp (GMT) of the last occurrence of the error.'
          example: '2023-10-23T15:58:00.000000000Z'

    Metric:
      x-model-version: 1.0
      description: 'An object that represents a Health Check Status Metrics'
      properties:
        apiProduct:
          type: string
          maxLength: 50
          description: 'The API product for which errors are counted.Products are payments, paymentsVAS, general.'
          example: 'paymentsVAS'
        httpErrors:
          type: array
          items:
            $ref: '#/components/schemas/HttpError'

    PartnerTokenizationRequest:
      x-model-version: 1.0
      properties:
        source:
          $ref: '#/components/schemas/Source'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'
        additionalDataCommon:
          $ref: '#/components/schemas/AdditionalDataCommon'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'
        transactionInteraction:
          $ref: '#/components/schemas/TransactionInteraction'
    
    PartnerTokenizationResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        source:
          $ref: '#/components/schemas/Source'
        paymentTokens:
          type: array
          items:
            $ref: '#/components/schemas/ResponsePaymentToken'
        cardDetails:
          $ref: '#/components/schemas/CardDetails'
        processorResponseDetails:
          $ref: '#/components/schemas/ProcessorResponseDetails'
        additionalDataCommon:
          $ref: '#/components/schemas/AdditionalDataCommon'
        transactionInteraction:
          $ref: '#/components/schemas/TransactionInteraction'
        transactionDetails:
          $ref: '#/components/schemas/TransactionDetails'

    DccRequest:
      x-model-version: 1.0
      properties:
        source:
          $ref: '#/components/schemas/Source'
        sourceCurrency:
          $ref: '#/components/schemas/Amount'
        targetCurrency:
          $ref: '#/components/schemas/Amount'
        merchantDetails:
          $ref: '#/components/schemas/MerchantDetails'

    DccResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse:
          $ref: '#/components/schemas/GatewayResponse'
        processorResponseDetails:
          $ref: '#/components/schemas/ProcessorResponseDetails'
        source:
          $ref: '#/components/schemas/Source'
        rate:
          $ref: '#/components/schemas/Rate'
        cardDetails:
          $ref: '#/components/schemas/CardDetails'  

    Rate:
      x-model-version: 1.0
      description: 'Rate object for <a href="../docs?path=docs/Resources/Guides/Global-Currency/Global-Currency-Solutions.md">Global Currency Solutions</a>.'
      properties:
        eligibility:
          type: string
          maxLength: 25
          description: 'Indicates the DCC eligibility.'
        exchangeRate:
          type: number
          maximum: 999999999999999999.999
          description: 'Derived exchange rate for the source and target currencies'
          example: 19.45
        margin:
          type: number
          maximum: 999999999999999999.999
          description: 'International margin when making the DCC offer to the cardholder'
          example: 3.45
        provider:
          type: string
          maxLength: 30
          description: 'Indicates the name for the rate provider.'
          example: 'VISA'
        referenceId:
          type: string
          maxLength: 64
          description: 'A unique identifier for a currencies transaction that can map to the API TraceId. This can be passed for primary and secondary transactions'
          example: '838916029301'
        timestamp:
          type: string
          format: date-time
          description: 'Date and time the currency rate transaction occurred in YYYY-MM-DDThh:mm:ssZ format.'
          example: '2016-04-16T16:06:05Z'
        validFrom:
          type: string
          format: date-time
          description: 'Start date and time the currency rate transaction in YYYY-MM-DDThh:mm:ssZ format.'
          example: '2016-04-16T16:06:05Z'
        validTo:
          type: string
          format: date-time
          description: 'End date and time the currency rate transaction in YYYY-MM-DDThh:mm:ssZ format.'
          example: '2016-04-16T16:06:05Z'
        sourceAmount:
          $ref: '#/components/schemas/Amount'
        targetAmount:
          $ref: '#/components/schemas/Amount'

  examples:
    ApplePayRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source:
          sourceType: ApplePay
          data: hbreWcQg980mUoUCfuCoripnHO210lvtizOFLV6PTw1DjooSwik778bH/qgK2pKelDTiiC8eXeiSwSIfrTPp6tq9x8Xo2H0KYAHCjLaJtoDdnjXm8QtC3m8MlcKAyYKp4hOW6tcPmy5rKVCKr1RFCDwjWd9zfVmp/au8hzZQtTYvnlje9t36xNy057eKmA1Bl1r9MFPxicTudVesSYMoAPS4IS+IlYiZzCPHzSLYLvFNiLFzP77qq7B6HSZ3dAZm244v8ep9EQdZVb1xzYdr6U+F5n1W+prS/fnL4+PVdiJK1Gn2qhiveyQX1XopLEQSbMDaW0wYhfDP9XM/+EDMLaXIKRiCtFry9nkbQZDjr2ti91KOAvzQf7XFbV+O8i60BSlI4/QRmLdKHmk/m0rDgQAoYLgUZ5xjKzXpJR9iW6RWuNYyaf9XdD8s2eB9aBQ=
          header: {applicationDataHash: 94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2,
            ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEvR+anQg6pElOsCnC3HIeNoEs2XMHQwxuy9plV1MfRRtIiHnQ6MyOS+1FQ7WZR2bVAnHFhPFaM9RYe7/bynvVvg==,
            publicKeyHash: KRsyW0NauLpN8OwKr+yeu4jl6APbgW05/TYo5eGW0bQ=, transactionId: '31323334353637',
            signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFSMIIBTgIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTkwNjA3MTg0MTIxWjAvBgkqhkiG9w0BCQQxIgQg0PLaZU4YWZqtP9t/ygv9XIS/5ngU6FlGjpvyK6VFXVMwCgYIKoZIzj0EAwIERjBEAiBTNmQEPyc3aMm4Mwa0riD3dNdSc9aAhslj65Us8b3aKwIgNSc/y+CWpsr8qDln0fZK6ZD/LWPMxofQedlPy7Q6gY8AAAAAAAA=,
            version: EC_v1, applicationData: VEVTVA==, merchantId: merchant.com.fapi.tcoe.applepay,
            merchantPrivateKey: MHcCAQEE234234234opsmasdsalsamdsad/asdsad/asdasd/asdAwEHoUQDQgAaslkdsad8asjdnlkm23leu9jclaskdas/masr4+/as34+4fh/sf64g/nX35fs5w==}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction:
          origin: 'ECOM'
          eciIndicator: 'SECURE_ECOM'
          posConditionCode: 'CARD_NOT_PRESENT_ECOM'
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    ApplePayTokenRequest:
      value:
        source:
          sourceType: ApplePay
          data: hbreWcQg980mUoUCfuCoripnHO210lvtizOFLV6PTw1DjooSwik778bH/qgK2pKelDTiiC8eXeiSwSIfrTPp6tq9x8Xo2H0KYAHCjLaJtoDdnjXm8QtC3m8MlcKAyYKp4hOW6tcPmy5rKVCKr1RFCDwjWd9zfVmp/au8hzZQtTYvnlje9t36xNy057eKmA1Bl1r9MFPxicTudVesSYMoAPS4IS+IlYiZzCPHzSLYLvFNiLFzP77qq7B6HSZ3dAZm244v8ep9EQdZVb1xzYdr6U+F5n1W+prS/fnL4+PVdiJK1Gn2qhiveyQX1XopLEQSbMDaW0wYhfDP9XM/+EDMLaXIKRiCtFry9nkbQZDjr2ti91KOAvzQf7XFbV+O8i60BSlI4/QRmLdKHmk/m0rDgQAoYLgUZ5xjKzXpJR9iW6RWuNYyaf9XdD8s2eB9aBQ=
          header: {applicationDataHash: 94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2,
            ephemeralPublicKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEvR+anQg6pElOsCnC3HIeNoEs2XMHQwxuy9plV1MfRRtIiHnQ6MyOS+1FQ7WZR2bVAnHFhPFaM9RYe7/bynvVvg==,
            publicKeyHash: KRsyW0NauLpN8OwKr+yeu4jl6APbgW05/TYo5eGW0bQ=, transactionId: '31323334353637',
            signature: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFSMIIBTgIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTkwNjA3MTg0MTIxWjAvBgkqhkiG9w0BCQQxIgQg0PLaZU4YWZqtP9t/ygv9XIS/5ngU6FlGjpvyK6VFXVMwCgYIKoZIzj0EAwIERjBEAiBTNmQEPyc3aMm4Mwa0riD3dNdSc9aAhslj65Us8b3aKwIgNSc/y+CWpsr8qDln0fZK6ZD/LWPMxofQedlPy7Q6gY8AAAAAAAA=,
            version: EC_v1, applicationData: VEVTVA==, merchantId: merchant.com.fapi.tcoe.applepay,
            merchantPrivateKey: MHcCAQEE234234234opsmasdsalsamdsad/asdsad/asdasd/asdAwEHoUQDQgAaslkdsad8asjdnlkm23leu9jclaskdas/masr4+/as34+4fh/sf64g/nX35fs5w==}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    ApplePayChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: DecryptedWallet
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
          cavv: 01ade6ae340005c681c3a1890418b53000020000
          wallet: APPLE_PAY
        paymentReceipt:
          approvedAmount: {total: 12.04, currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    ApplePayTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: DecryptedWallet
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
          cavv: 01ade6ae340005c681c3a1890418b53000020000
          wallet: APPLE_PAY
        paymentTokens:
          - tokenData: '8519371934460009'
            tokenSource: TRANSARMOR
            tokenResponseCode: '000'
            tokenResponseDescription: SUCCESS
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: FISERV
          host: NASHVILLE
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
    GooglePayRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source: {sourceType: GooglePay, data: {"encryptedMessage":"NZF5Vs2YaI/t25L/1+dp6tuUOvra9pszs2antqcbHJbkjMMXZSR7innTFJxNR5DNnf4GheWIso8n8MA1q1zqWCU8MaK9bnNcHxvROpvfsU3SCCjkfG2k2M4/RYMjs+lxYW/nEtIIKVVOkdjAj4pI/Wth8xQXphn7hDNiyp9tIydmlPZVnzkXI6mVbpHbbkaCCD4TNPhFBDtx0VafqRjbb2Wt3EDazTx3dHdd+qVX5Xj8/BPb1cmwHWvrDw/dQRk/E0TsP+erLjhLaZ8l2EycxeUEZYqSX5w77S8vd3sw8WXuOCMsU8sx0Bs5IY7hohq67qNDxckP1fcBD4OYdGP6bumJR0J6pJxD5iRh5lFSjN6zNLRI77ylxWL6DwHoe/pPdCc0n6cV0Nt0RJMLjerr12BLuhv4bPQ3QB6jxnbt8JK/EndgIG8xpFyNkKlRUyxAKM22/ZSy45d6qtZIKLXRqDTr9JMk8uJ53QRZtQx8k9KkRZGC+GM2sD+Z75fxc0Yye7l6H0D8p5z1iEzWnYHxd0pmY/cOYEJxnOOdD573QmE6ikFcyaAw3XnCyul/EA\u003d\u003d","ephemeralPublicKey":"BAhnPIWrCXWv/45GFK0mNAvN9w+NFBs3tQji0wTUS2+hiFKsZujG5wRd4JXGmxhG+k3bglYk544ILBNdDpsAh+o\u003d","tag":"liBzKfGcO+FclHg7XuqRJxR/8EJShRp9/APab0Sho08\u003d"},
          signature: MEUCIFWTRWUZAOM5nfJC79FtJm56olnbwG4H5uWWxAUWAquiAiEA24j/BcOroeISsdJzYsyoVi8wzu4tnmKw+jdsGfuvPko=,
          version: ECv2, merchantId: 676174657761793A666972737464617461, merchantPrivateKey: DCEDF9AF72707BFD9C5231ECB9EAD040F3B4BA2AB608579736E37FDBA8884175566BDA410997B2575EA7E76AC54BBDB99DD0F74DD0A648BC0F6A2F06909E79A0F15D779F1A80CFC1EC9612476204C43A,
          signingVerificationKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIsFro6K+IUxRr4yFTOTO+kFCCEvHo7B9IOMLxah6c977oFzX/beObH4a9OfosMHmft3JJZ6B3xpjIb8kduK4/A==}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction:
          origin: 'ECOM'
          eciIndicator: 'SECURE_ECOM'
          posConditionCode: 'CARD_NOT_PRESENT_ECOM'
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    GooglePayTokenRequest:
      value:
        source: {sourceType: GooglePay, data: {"encryptedMessage":"NZF5Vs2YaI/t25L/1+dp6tuUOvra9pszs2antqcbHJbkjMMXZSR7innTFJxNR5DNnf4GheWIso8n8MA1q1zqWCU8MaK9bnNcHxvROpvfsU3SCCjkfG2k2M4/RYMjs+lxYW/nEtIIKVVOkdjAj4pI/Wth8xQXphn7hDNiyp9tIydmlPZVnzkXI6mVbpHbbkaCCD4TNPhFBDtx0VafqRjbb2Wt3EDazTx3dHdd+qVX5Xj8/BPb1cmwHWvrDw/dQRk/E0TsP+erLjhLaZ8l2EycxeUEZYqSX5w77S8vd3sw8WXuOCMsU8sx0Bs5IY7hohq67qNDxckP1fcBD4OYdGP6bumJR0J6pJxD5iRh5lFSjN6zNLRI77ylxWL6DwHoe/pPdCc0n6cV0Nt0RJMLjerr12BLuhv4bPQ3QB6jxnbt8JK/EndgIG8xpFyNkKlRUyxAKM22/ZSy45d6qtZIKLXRqDTr9JMk8uJ53QRZtQx8k9KkRZGC+GM2sD+Z75fxc0Yye7l6H0D8p5z1iEzWnYHxd0pmY/cOYEJxnOOdD573QmE6ikFcyaAw3XnCyul/EA\u003d\u003d","ephemeralPublicKey":"BAhnPIWrCXWv/45GFK0mNAvN9w+NFBs3tQji0wTUS2+hiFKsZujG5wRd4JXGmxhG+k3bglYk544ILBNdDpsAh+o\u003d","tag":"liBzKfGcO+FclHg7XuqRJxR/8EJShRp9/APab0Sho08\u003d"},
          signature: MEUCIFWTRWUZAOM5nfJC79FtJm56olnbwG4H5uWWxAUWAquiAiEA24j/BcOroeISsdJzYsyoVi8wzu4tnmKw+jdsGfuvPko=,
          version: ECv2, merchantId: 676174657761793A666972737464617461, merchantPrivateKey: DCEDF9AF72707BFD9C5231ECB9EAD040F3B4BA2AB608579736E37FDBA8884175566BDA410997B2575EA7E76AC54BBDB99DD0F74DD0A648BC0F6A2F06909E79A0F15D779F1A80CFC1EC9612476204C43A,
          signingVerificationKey: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIsFro6K+IUxRr4yFTOTO+kFCCEvHo7B9IOMLxah6c977oFzX/beObH4a9OfosMHmft3JJZ6B3xpjIb8kduK4/A==}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    GooglePayChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: DecryptedWallet
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
          cavv: 01ade6ae340005c681c3a1890418b53000020000
          wallet: GOOGLE_PAY
        paymentReceipt:
          approvedAmount: {total: 12.04, currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    GooglePayTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: DecryptedWallet
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '30'}
          cavv: 01ade6ae340005c681c3a1890418b53000020000
          wallet: GOOGLE_PAY
        paymentTokens:
          - tokenData: '8519371934460009'
            tokenSource: TRANSARMOR
            tokenResponseCode: '000'
            tokenResponseDescription: SUCCESS
          - tokenData: '8519371934460010'
            tokenSource: CHASE
            tokenResponseCode: '000'
            tokenResponseDescription: SUCCESS
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: FISERV
          host: NASHVILLE
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
    PaymentCardRequest:
      value:
        amount:
          total: 12.04
          currency: 'USD'
        source:
          sourceType: 'PaymentCard'
          card:
            cardData: '4005550000000019'
            expirationMonth: '02'
            expirationYear: '2035'
        transactionDetails:
          captureFlag: true
          merchantInvoiceNumber: '123456789012'
        transactionInteraction:
          origin: 'ECOM'
          eciIndicator: 'CHANNEL_ENCRYPTED'
          posConditionCode: 'CARD_NOT_PRESENT_ECOM'
        merchantDetails:
          terminalId: '123456'
          merchantId: '123456789012345'
    PaymentCardEncryptedRequest:
      value:
        amount:
          total: 12.04
          currency: USD
        source:
          sourceType: PaymentCard
          encryptionData:
            encryptionType: RSA
            encryptionTarget: MANUAL
            encryptionBlock: '=s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ....'
            encryptionBlockFields: card.cardData:16,card.nameOnCard:10,card.expirationMonth:2,card.expirationYear:4,card.securityCode:3
            keyId: '88000000022'
        transactionInteraction:
          origin: 'ECOM'
          eciIndicator: 'CHANNEL_ENCRYPTED'
          posConditionCode: 'CARD_NOT_PRESENT_ECOM'
        merchantDetails:
          merchantId: '123456789789567'
          terminalId: '123456'
    PaymentCardCaptureRequest:
      value:
        source:
          sourceType: PaymentCard
          encryptionData:
            encryptionType: RSA
            encryptionTarget: MANUAL
            encryptionBlock: '=s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ....'
            encryptionBlockFields: card.cardData:16,card.nameOnCard:10,card.expirationMonth:2,card.expirationYear:4,card.securityCode:3
            keyId: '88000000022'
        merchantDetails:
          merchantId: '123456789012345'
          terminalId: '123456'
    PaymentCardCaptureResponse:
      value:
        gatewayResponse:
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'

    PaymentCardForcedRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019', expirationMonth: '02', expirationYear: '2035'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012',
          approvalCode: OK5882}
        transactionInteraction: {origin: ECOM, eciIndicator: CHANNEL_ENCRYPTED}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentCardTokenRequest:
      value:
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019', expirationMonth: '02', expirationYear: '2035'}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentCardInfoRequest:
      value:
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019'}
    PaymentCardVerifyRequest:
      value:
        source:
          sourceType: PaymentCard
          card: {cardData: '4005550000000019', expirationMonth: '02', expirationYear: '2035',
            securityCode: '123', securityCodeIndicator: PROVIDED}
        billingAddress:
          firstName: Jane
          lastName: Smith
          address: {street: Main Street, houseNumberOrName: '123', city: Sandy Springs,
            stateOrProvince: GA, postalCode: '30303', country: US}

    PaymentCardEncryptedTokenRequest:
      value:
        source:
          sourceType: 'PaymentCard'
          encryptionData:
            encryptionType: 'RSA'
            encryptionTarget: 'MANUAL'
            encryptionBlock: '=s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ....'
            encryptionBlockFields: 'card.cardData:16,card.nameOnCard:10,card.expirationMonth:2,card.expirationYear:4,card.securityCode:3'
            keyId: '88000000022'
        merchantDetails:
          merchantId: '123456789789567'
          terminalId: '123456'

    PaymentCardEncryptedVerifyRequest:
      value:
        source:
          sourceType: 'PaymentCard'
          encryptionData:
            encryptionType: 'RSA'
            encryptionTarget: 'MANUAL'
            encryptionBlock: '=s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ....'
            encryptionBlockFields: 'card.cardData:16,card.nameOnCard:10,card.expirationMonth:2,card.expirationYear:4,card.securityCode:3'
            keyId: '88000000022'
        billingAddress:
          firstName: 'Jane'
          lastName: 'Smith'
          address:
            street: 'Main Street'
            houseNumberOrName: '123'
            city: 'Sandy Springs'
            stateOrProvince: 'GA'
            postalCode: '30303'
            country: 'US'

    PaymentCardEDSRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source:
          sourceType: PaymentCard
          card: {bin: '400555', last4: '0019'}
        transactionDetails:
          merchantOrderId: '123456789012'
          deviceFingerPrint:
          - dataStatic: {deviceId: '00:1B:44:11:3A:B7'}
            dataDynamic: {latitude: 13.0827 N, longitude: 80.2707 E, ipAddress: 172.27.37.221}
        customer:
          email: customer@somedomain.com
          phone:
          - {countryCode: '1', phoneNumber: 123-123-1234, type: MOBILE}
        splitTender:
          splitTenderMethod:
          - type: CREDIT_CARD
            count: 1
            amount: {total: 7.04}
          - type: GIFT_CARD
            count: 1
            amount: {total: 5.00}
        shippingAddress:
          firstName: Jane
          lastName: Doe
          address: {street: Main Street, houseNumberOrName: '123', recipientNameOrAddress: Accounting
              Department, city: Sandy Springs, stateOrProvince: GA, postalCode: '30303',
            country: US}
        merchantDetails: {merchantId: '1234567890123456', alternateMerchantId: '1234567890123456'}
    PaymentCardChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: 12.04, currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentCardCreditResponse:
      value:
        gatewayResponse:
          transactionType: CREDIT
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: 12.04, currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentCardTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: RKOrdID-525133851837
            apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db
            clientRequestId: '4345791'
            transactionId: '84356531338'
        source:
          sourceType: PaymentCard
          card:
            bin: '40055500'
            last4: '0019'
            scheme: VISA
            expirationMonth: '10'
            expirationYear: '2030'
        paymentTokens:
          - tokenData: '8519371934460009'
            tokenSource: TRANSARMOR
            tokenResponseCode: '000'
            tokenResponseDescription: SUCCESS
          - tokenData: '8519371934460010'
            tokenSource: CHASE
            tokenResponseCode: '000'
            tokenResponseDescription: SUCCESS
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: FISERV
          host: NASHVILLE
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
    PaymentCardInfoResponse:
      value:
        gatewayResponse:
          transactionType: 'INFORMATION'
          transactionState: 'SUCCESS'
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: 'RKOrdID-525133851837'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        cardDetails:
          - detailedCardProduct: 'VISA'
            productId: 'N1'
            visaProductSubType: 'HC'
            detailedCardIndicator: 'DEBIT'
            pinSignatureCapability: 'PIN_OR_SIGNATURE'
            cardClass: 'CORPORATE'
            countryCode: 'USA'
            issuerBankName: 'Example Bank'
            recordType: 'DETAIL'
            lowBin: '400337'
            highBin: '400338'
            binLength: '6'
            binDetailPan: '16'
            issuerUpdateYear: '20'
            issuerUpdateMonth: '09'
            issuerUpdateDay: '22'
            regulatorIndicator: 'NON_REGULATED'
            fsaIndicator: 'SUPPORTED'
            nonMoneyTransferOCTsDomestic: 'SUPPORTED'
            nonMoneyTransferOCTsCrossBorder: 'SUPPORTED'
            onlineGamblingOCTsDomestic: 'SUPPORTED'
            onlineGamblingOCTsCrossBorder: 'SUPPORTED'
            moneyTransferOCTsDomestic: 'SUPPORTED'
            moneyTransferOCTsCrossBorder: 'SUPPORTED'
            fastFundsDomesticMoneyTransfer: 'SUPPORTED'
            fastFundsCrossBorderMoneyTransfer: 'SUPPORTED'
            fastFundsDomesticNonMoneyTransfer: 'SUPPORTED'
            fastFundsCrossBorderNonMoneyTransfer: 'SUPPORTED'
            fastFundsDomesticGambling: 'SUPPORTED'
            fastFundsCrossBorderGambling: 'SUPPORTED'
            prepaidIndicator: 'PREPAID'
            visaLargeTicketIndicator: 'SUPPORTED'
            accountFundSource: 'DEBIT'
            panLengthMin: '16'
            panLengthMax: '16'
            tokenIndicator: 'SUPPORTED'
            cardholderBillingCurrency: 'USD'
            b2bProgramId: 'B2B_PROGRAM_1'
    PaymentCardVerifyResponse:
      value:
        gatewayResponse:
          transactionType: VERIFICATION
          transactionState: VERIFIED
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: FISERV
          host: NASHVILLE
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
            avsSecurityCodeResponse:
              streetMatch: EXACT_MATCH
              postalCodeMatch: EXACT_MATCH
              securityCodeMatch: MATCHED
              association: {avsCode: Y, securityCodeResponse: M}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    PaymentCardEDSResponse:
      value:
        gatewayResponse:
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db, clientRequestId: '4345791',
            transactionId: '84356531338'}
        processorResponseDetails: {referenceNumber: 845366457890-TODO}
    PaymentTokenRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source:
          sourceType: PaymentToken
          tokenData: '1234560000000019'
          tokenSource: TRANSARMOR
          declineDuplicates: false
          card: {expirationMonth: '10', expirationYear: '2030'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction:
          origin: 'ECOM'
          eciIndicator: 'CHANNEL_ENCRYPTED'
          posConditionCode: 'CARD_NOT_PRESENT_ECOM'
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentTokenForcedRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source:
          sourceType: PaymentToken
          tokenData: '1234560000000019'
          tokenSource: TRANSARMOR
          declineDuplicates: false
          card: {expirationMonth: '10', expirationYear: '2030'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012',
          approvalCode: OK5882}
        transactionInteraction: {origin: ECOM, eciIndicator: CHANNEL_ENCRYPTED}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentTokenInfoRequest:
      value:
        source:
          sourceType: PaymentToken
          tokenData: '1234560000000019'
          tokenSource: TRANSARMOR
          card: {expirationMonth: '10', expirationYear: '2030'}
    PaymentTokenVerifyRequest:
      value:
        source:
          sourceType: PaymentToken
          tokenData: '1234560000000019'
          tokenSource: TRANSARMOR
          card: {expirationMonth: '10', expirationYear: '2030', securityCode: '123',
            securityCodeIndicator: PROVIDED}
        billingAddress:
          firstName: Jane
          lastName: Smith
          address: {street: Main Street, houseNumberOrName: '123', city: Sandy Springs,
            stateOrProvince: GA, postalCode: '30303', country: US}
    PaymentTokenEDSRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source: {sourceType: PaymentToken, tokenData: '1234560000000019'}
        transactionDetails:
          merchantOrderId: '123456789012'
          deviceFingerPrint:
          - dataStatic: {deviceId: '00:1B:44:11:3A:B7'}
            dataDynamic: {latitude: 13.0827 N, longitude: 80.2707 E, ipAddress: 172.27.37.221}
        customer:
          email: customer@somedomain.com
          phone:
          - {countryCode: '1', phoneNumber: 123-123-1234, type: MOBILE}
        splitTender:
          splitTenderMethod:
          - type: CREDIT_CARD
            count: 1
            amount: {total: 7.04}
          - type: GIFT_CARD
            count: 1
            amount: {total: 5.00}
        shippingAddress:
          firstName: Jane
          lastName: Doe
          address: {street: Main Street, houseNumberOrName: '123', recipientNameOrAddress: Accounting
              Department, city: Sandy Springs, stateOrProvince: GA, postalCode: '30303',
            country: US}
        merchantDetails: {merchantId: '1234567890123456', alternateMerchantId: '1234567890123456'}
    PaymentTokenROSRequest:
      value:
        source: {sourceType: PaymentToken, tokenData: '1234560000019'}
        merchantDetails: {merchantId: '1234567890123456', tokenType: 'AB01'}
    PaymentTokenChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentToken
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: 12.04, currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentTokenCreditResponse:
      value:
        gatewayResponse:
          transactionType: CREDIT
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentToken
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: 12.04, currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentTokenInfoResponse:
      value:
        gatewayResponse:
          transactionType: 'INFORMATION'
          transactionState: 'SUCCESS'
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: 'RKOrdID-525133851837'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        cardDetails:
          - detailedCardProduct: 'VISA'
            productId: 'N1'
            visaProductSubType: 'HC'
            detailedCardIndicator: 'DEBIT'
            pinSignatureCapability: 'PIN_OR_SIGNATURE'
            cardClass: 'CORPORATE'
            countryCode: 'USA'
            issuerBankName: 'Example Bank'
            recordType: 'DETAIL'
            lowBin: '400337'
            highBin: '400338'
            binLength: '6'
            binDetailPan: '16'
            issuerUpdateYear: '20'
            issuerUpdateMonth: '09'
            issuerUpdateDay: '22'
            regulatorIndicator: 'NON_REGULATED'
            fsaIndicator: 'SUPPORTED'
            nonMoneyTransferOCTsDomestic: 'SUPPORTED'
            nonMoneyTransferOCTsCrossBorder: 'SUPPORTED'
            onlineGamblingOCTsDomestic: 'SUPPORTED'
            onlineGamblingOCTsCrossBorder: 'SUPPORTED'
            moneyTransferOCTsDomestic: 'SUPPORTED'
            moneyTransferOCTsCrossBorder: 'SUPPORTED'
            fastFundsDomesticMoneyTransfer: 'SUPPORTED'
            fastFundsCrossBorderMoneyTransfer: 'SUPPORTED'
            fastFundsDomesticNonMoneyTransfer: 'SUPPORTED'
            fastFundsCrossBorderNonMoneyTransfer: 'SUPPORTED'
            fastFundsDomesticGambling: 'SUPPORTED'
            fastFundsCrossBorderGambling: 'SUPPORTED'
            prepaidIndicator: 'PREPAID'
            visaLargeTicketIndicator: 'SUPPORTED'
            accountFundSource: 'DEBIT'
            panLengthMin: '16'
            panLengthMax: '16'
            tokenIndicator: 'SUPPORTED'
            cardholderBillingCurrency: 'USD'
            b2bProgramId: 'B2B_PROGRAM_1'
    PaymentTokenVerifyResponse:
      value:
        gatewayResponse:
          transactionType: VERIFICATION
          transactionState: VERIFIED
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentToken
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: FISERV
          host: NASHVILLE
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
            avsSecurityCodeResponse:
              streetMatch: EXACT_MATCH
              postalCodeMatch: EXACT_MATCH
              securityCodeMatch: MATCHED
              association: {avsCode: Y}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    PaymentTokenEDSResponse:
      value:
        gatewayResponse:
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db, clientRequestId: '4345791',
            transactionId: '84356531338'}
        processorResponseDetails: {referenceNumber: 845366457890-TODO}
    PaymentTokenROSResponse:
      value:
        gatewayResponse:
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db, clientRequestId: '4345791',
            transactionId: '84356531338'}
        transactionScoreResponse: {invocationId: 'ad0760bf-2db5-4ba9-b294-0d2241ff58f8', consumerType: 'EXISTING', modelId: '1.0.0', myReturnScoreDetails : {score: '93', returnProbablilityRate: 'HIGH'}, peerReturnScoreDetails: {averageReturnValue: '45.53', averageOrderValue: '275.25', percentSalesReturned: '30'} }

    Payment3DSRequest:
      value:
        amount:
          total: 9.00
          currency: 'USD'
        source:
          sourceType: 'PaymentCard'
          encryptionData:
            encryptionType: 'RSA'
            encryptionTarget: 'MANUAL'
            encryptionBlock: '=s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ....'
            encryptionBlockFields: 'card.cardData:16,card.nameOnCard:10,card.expirationMonth:2,card.expirationYear:4,card.securityCode:3'
            keyId: '88000000022'
            securityCodeIndicator: 'PROVIDED'
        additionalData3DS:
          serviceProviderTransactionId: 'W1dkIvUNzLYgRGLBVNp1'
          acsTransactionId: '46d071e5-2447-4980-a9ba-c8c55a99107a'
          challengeIndicator: false
          dsTransactionId: '3150f884-0a17-4669-8c50-5d9b8bdae022'
          serverTransactionId: 'c58e7f2e-56dd-496a-acda-b39c37bdf14b'
          authenticationStatus: 'Y'
          mpiData:
            cavv: 'MTIzNDU2Nzg5MDEyMzQ1Njc4OTA='
            eci: '05'
          versionData:
            recommendedVersion: '2.1.0'
        transactionDetails:
          captureFlag: true
          deviceFingerprint:
            - dataDynamic:
                ipAddress: '192.168.0.12'
        merchantDetails:
          terminalId: '10000001'
          merchantId: '100004000100116'

    ThreeDSAuthenticationRequestPaymentCard:
      value:
        amount:
          total: 256
          currency: USD
        source:
          sourceType: 'PaymentCard'
          encryptionData:
            encryptionType: 'RSA'
            encryptionTarget: 'MANUAL'
            encryptionBlock: '=s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ....'
            encryptionBlockFields: 'card.cardData:16,card.nameOnCard:10,card.expirationMonth:2,card.expirationYear:4,card.securityCode:3'
            keyId: '88000000022'
            securityCodeIndicator: 'PROVIDED'
        billingAddress:
          firstName: Raghavendiran
          lastName: Kannan
          address:
            street: 100 Ashford Gables Dr
            houseNumberOrName: '4201'
            city: Atlanta
            stateOrProvince: Georgia
            postalCode: '30338'
            country: USA
        transactionDetails:
          captureFlag: true
          createToken: false
          merchantOrderId: '12345'
          deviceFingerprint:
            - dataStatic:
                colorDepth: 32
                screenHeight: 980
                screenWidth: 1080
                timezoneOffset: 200
                javaEnabled: true
                locale: English
                accepts: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8
                userAgent: Mozilla/5.0 (Windows NT 6.1; WOW64; rv:30.0) Gecko/20100101 Firefox/30.0
            - dataDynamic:
                ipAddress: 67.17.19.20
        merchantDetails:
          terminalId: '10000001'
          merchantId: '100004000100116'
        additionalData3DS:
          serviceProviderReferenceId: "123lkd8alcd99aa9"
          channel: BROWSER
        customer:
          email: cardinal.test@fiserv.com
          phone:
            - type: MOBILE
              phoneNumber: '5551112222'

    ThreeDSAuthenticationResponsePaymentCard:
      value:
        gatewayResponse:
          transactionType: AUTHENTICATION
          transactionState: AUTHENTICATED
          transactionProcessingDetails:
            orderId: CHG0147e5818e97c94045413fa6dc97a53345
            transactionTimestamp: '2023-08-18T18:01:14.02672425Z'
            apiTraceId: 2901d03ffb7c4793b9658d1d3e931a62
            clientRequestId: '3731003'
            transactionId: 2901d03ffb7c4793b9658d1d3e931a62
        processorResponseDetails:
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '000'
          hostResponseMessage: APPROVAL
        additionalData3DS:
          serviceProvider: CARDINAL
          serviceProviderTransactionId: fofKQkzAOYgyfGsA2Zt0
          acsTransactionId: 74eee599-7dbe-4e8b-811c-0e0a48ed76f2
          dsTransactionId: 33f9f27f-a6fa-4546-a87f-5e718bc2f864
          acsReferenceNumber: Cardinal ACS
          challengeIndicator: false
          authenticationStatus: Y
          serverTransactionId: 3e937ffb-3ba2-45ed-a115-655ee6c96d68
          acsUrl: ''
          mpiData:
            cavv: Y2FyZGluYWxjb21tZXJjZWF1dGg=
            eci: '05'
          versionData:
            recommendedVersion: 2.2.0

    ThreeDSAuthenticationResponsePaymentCardChallenge:
      value:
        gatewayResponse:
          transactionType: AUTHENTICATION
          transactionState: WAITING
          transactionProcessingDetails:
            orderId: CHG01d33251f746137232e89c8d52fc127170
            transactionTimestamp: '2023-08-18T18:28:47.885930228Z'
            apiTraceId: 87be41a54c374c3080f932babc4da68d
            clientRequestId: '2841837'
            transactionId: 87be41a54c374c3080f932babc4da68d
        processorResponseDetails:
          responseCode: '364'
          responseMessage: '3-D Secure: challenged'
          hostResponseCode: '01'
          hostResponseMessage: challenged
        additionalData3DS:
          serviceProvider: CARDINAL
          serviceProviderTransactionId: 9aTrzFCvlzTdk1bG1ez0
          acsTransactionId: bc437f7b-d97f-492c-81d5-0af9cd27e672
          dsTransactionId: b4ce785d-446e-47fa-98ad-eb7bd4bcf114
          acsReferenceNumber: Cardinal ACS
          challengeIndicator: false
          authenticationStatus: C
          serverTransactionId: 8b42bb37-c99f-4fff-835b-3dfea366206a
          acsUrl: https://0merchantacsstag.cardinalcommerce.com/MerchantACSWeb/creq.jsp
          stepUpUrl: https://centinelapistag.cardinalcommerce.com/V2/Cruise/StepUp
          challengeToken: eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJPcmdVbml0SWQiOiI2MjNhNjIxODgzZjVmNjc2NTNkZGEzYmEiLCJSZWZlcmVuY2VJZCI6IjNiODIzM2RlLWI4ZDctNDkyZC04MzdkLThhODdjOGExNDRmMiIsIlBheWxvYWQiOnsiUGF5bG9hZCI6ImV5SnRaWE56WVdkbFZIbHdaU0k2SWtOU1pYRWlMQ0p0WlhOellXZGxWbVZ5YzJsdmJpSTZJakl1TVM0d0lpd2lkR2h5WldWRVUxTmxjblpsY2xSeVlXNXpTVVFpT2lJNFlqUXlZbUl6Tnkxak9UbG1MVFJtWm1ZdE9ETTFZaTB6WkdabFlUTTJOakl3Tm1FaUxDSmhZM05VY21GdWMwbEVJam9pWW1NME16ZG1OMkl0WkRrM1ppMDBPVEpqTFRneFpEVXRNR0ZtT1dOa01qZGxOamN5SWl3aVkyaGhiR3hsYm1kbFYybHVaRzkzVTJsNlpTSTZJakF5SW4wIiwiQUNTVXJsIjoiaHR0cHM6Ly8wbWVyY2hhbnRhY3NzdGFnLmNhcmRpbmFsY29tbWVyY2UuY29tL01lcmNoYW50QUNTV2ViL2NyZXEuanNwIiwiVHJhbnNhY3Rpb25JZCI6IjlhVHJ6RkN2bHpUZGsxYkcxZXowIn0sIlJldHVyblVybCI6Imh0dHBzOi8vdGVzdC5pcGctb25saW5lLmNvbS93ZWJzaG9wL3NpbXVsYXRvci9zZWN1cmUzZC9yZXR1cm4iLCJpc3MiOiI2MjJkMDc4ZDM1OTU5OTY3YjU3OTkyNzEiLCJqdGkiOiJhNzMwNWEzZS1lMWI3LTQ4NzQtYWVjZi05ZTIzNzY4YTYzOTUiLCJpYXQiOjE2OTIzODMzMjh9.gfuE0idyLzJo_lgbUuZf7JCuL4LkVakCgdr78_35_f4
          mpiData:
            cavv: ''
            eci: '07'
          versionData:
            recommendedVersion: 2.1.0

    ThreeDSVerificationRequestMerchantTransactionId:
      value:
        merchantDetails:
          terminalId: '10000001'
          merchantId: '100004000100116'
        referenceTransactionDetails:
          referenceMerchantTransactionId: 'ac81864d7c9d1ff8b5aa6e98db'

    ThreeDSVerificationResponse:
      value:
        gatewayResponse:
          transactionType: AUTHENTICATION
          transactionState: AUTHENTICATED
          transactionProcessingDetails:
            orderId: CHG015bc177f518260ecc00c011bd42aa984e
            transactionTimestamp: '2023-08-18T18:47:01.69797079Z'
            apiTraceId: 9c05beae6c004625a21d2654549d2aa5
            clientRequestId: '1152490'
            transactionId: 9c05beae6c004625a21d2654549d2aa5
        processorResponseDetails:
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '000'
          hostResponseMessage: APPROVAL
        additionalData3DS:
          serviceProviderTransactionId: 6NzlYuTcbhastAG1mNf0
          acsTransactionId: e77bbd63-3974-4772-b809-599b1a372d95
          dsTransactionId: b4375445-93e9-4ea4-8167-3b12efa583d7
          challengeIndicator: false
          authenticationStatus: Y
          serverTransactionId: ec50af4d-f08a-4dd7-ac66-daf8f2810a03
          mpiData:
            cavv: MTIzNDU2Nzg5MDEyMzQ1Njc4OTA=
            eci: '05'
          versionData:
            recommendedVersion: 2.1.0

    ThreeDSVerificationRequestTransactionId:
      value: 
        merchantDetails:
          terminalId: '10000001'
          merchantId: '100004000100116'
        referenceTransactionDetails:
          referenceTransactionId: c229a53d92d348fb9c9ecea6f6a4aa4f

    ThreeDSVerificationResponseTransactionId:
      value:
        gatewayResponse:
          transactionType: AUTHENTICATION
          transactionState: AUTHENTICATED
          transactionProcessingDetails:
            orderId: CHG015bc177f518260ecc00c011bd42aa984e
            transactionTimestamp: '2023-08-18T18:47:01.69797079Z'
            apiTraceId: 9c05beae6c004625a21d2654549d2aa5
            clientRequestId: '1152490'
            transactionId: 9c05beae6c004625a21d2654549d2aa5
        processorResponseDetails:
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '000'
          hostResponseMessage: APPROVAL
        additionalData3DS:
          serviceProviderTransactionId: 6NzlYuTcbhastAG1mNf0
          acsTransactionId: e77bbd63-3974-4772-b809-599b1a372d95
          dsTransactionId: b4375445-93e9-4ea4-8167-3b12efa583d7
          challengeIndicator: false
          authenticationStatus: Y
          serverTransactionId: ec50af4d-f08a-4dd7-ac66-daf8f2810a03
          mpiData:
            cavv: MTIzNDU2Nzg5MDEyMzQ1Njc4OTA=
            eci: '05'
          versionData:
            recommendedVersion: 2.1.0

    PaymentCard3DSTokenizationRequest:
      value:
        source:
          sourceType: 'PaymentCard'
          encryptionData:
            encryptionType: 'RSA'
            encryptionTarget: 'MANUAL'
            encryptionBlock: '=s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ....'
            encryptionBlockFields: 'card.cardData:16,card.nameOnCard:10,card.expirationMonth:2,card.expirationYear:4,card.securityCode:3'
            keyId: '88000000022'
            securityCodeIndicator: 'PROVIDED'
        additionalData3DS:
          serviceProviderTransactionId: 'W1dkIvUNzLYgRGLBVNp1'
          acsTransactionId: '46d071e5-2447-4980-a9ba-c8c55a99107a'
          dsTransactionId: '3150f884-0a17-4669-8c50-5d9b8bdae022'
          acsReferenceNumber: '8561c0ef-931a-474f-bfee-55eb98a3jds7'
          authenticationStatus: 'Y'
          statusReason: 'Approved'
          serverTransactionId: 'c58e7f2e-56dd-496a-acda-b39c37bdf14b'
          serviceProvider: 'CARDINAL'
          challengeStatus: 'Y'
          messageCategory: '1'
          mpiData:
            cavv: '020360C31C002540AFAB9DFFA1F69D3000020000'
            xid: 'G2Q6OcsXq1k0pA0mMNHVH1P02Tw='
            eci: 'SECURE_ECOM'
          versionData:
            recommendedVersion: '2.1.0'
        transactionDetails:
          merchantOrderId: '87849105'
        merchantDetails:
          terminalId: '10000001'
          merchantId: '100004000100116'

    Payment3DSChargesResponse:
      value:
        gatewayResponse:
          transactionType: 'CHARGE'
          transactionState: 'CAPTURED'
          transactionOrigin: 'ECOM'
          transactionProcessingDetails:
            orderId: 'CHG01b33018867132945ccfec11492a66a1a9'
            transactionTimestamp: '2023-08-18T18:58:00.698883142Z'
            apiTraceId: 'b5ebb33767bc42909cedab92541a60be'
            clientRequestId: '5200768'
            transactionId: 'b5ebb33767bc42909cedab92541a60be'
        source:
          sourceType: 'PaymentCard'
          card:
            expirationMonth: '07'
            expirationYear: '2025'
            bin: '401200'
            last4: '0026'
            scheme: 'VISA'
        paymentReceipt:
          approvedAmount:
            total: 9.00
            currency: 'USD'
          processorResponseDetails:
            approvalStatus: 'APPROVED'
            approvalCode: 'OK172C'
            referenceNumber: 'ab92541a60be'
            networkRouted: 'VISA'
            networkInternationalId: '0001'
            responseCode: '000'
            responseMessage: 'Approved'
            hostResponseCode: '00'
            hostResponseMessage: 'APPROVAL'
        transactionDetails:
          captureFlag: true
          processingCode: '000000'
          transactionCutTimeStamp: '2023-08-19T01:45:00Z'
          deviceFingerprint:
            - dataDynamic:
                ipAddress: 192.168.0.12
          createToken: true
          retrievalReferenceNumber: 'ab92541a60be'
        transactionInteraction:
          posEntryMode: 'MANUAL'
          posConditionCode: 'CARD_NOT_PRESENT_ECOM'
          additionalPosInformation:
            stan: '020100'
            posFeatures:
              pinAuthenticationCapability: 'UNSPECIFIED'
              terminalEntryCapability: 'UNSPECIFIED'
          authorizationCharacteristicsIndicator: 'U'
          hostPosEntryMode: '010'
          hostPosConditionCode: '59'
        networkDetails:
          network:
            network: 'Visa'
          networkResponseCode: '00'
          cardLevelResultCode: 'C'
          validationCode: 'G216'
          transactionIdentifier: '013230529278074'
    PaymentCard3DSTokenizationResponse:
      value:
        gatewayResponse:
          transactionType: 'TOKENIZE'
          transactionState: 'AUTHORIZED'
          transactionProcessingDetails:
            orderId: 'CHG01133d6e8746b0449902fdd8f9f89ef840'
            transactionTimestamp: '2023-08-18T19:01:02.509947165Z'
            apiTraceId: '13316200f664440fa9cc8ecc8c1b7457'
            clientRequestId: '1410076'
            transactionId: '13316200f664440fa9cc8ecc8c1b7457'
        source:
          sourceType: 'PaymentCard'
          card:
            expirationMonth: '12'
            expirationYear: '2025'
            bin: '401200'
            last4: '0026'
            scheme: 'VISA'
        paymentTokens:
          - tokenData: '8408727895800026'
            tokenSource: 'TRANSARMOR'
            tokenResponseCode: '000'
            tokenResponseDescription: 'SUCCESS'
        processorResponseDetails:
          approvalStatus: 'APPROVED'
          approvalCode: 'OK409C'
          referenceNumber: '8ecc8c1b7457'
          networkInternationalId: '0001'
          responseCode: '000'
          responseMessage: 'Approved'
          hostResponseCode: '00'
          hostResponseMessage: 'APPROVAL'
          bankAssociationDetails:
            associationResponseCode: 'V000'
            avsSecurityCodeResponse:
              streetMatch: 'NONE'
              postalCodeMatch: 'NONE'
              securityCodeMatch: 'NOT_CHECKED'
              association:
                securityCodeResponse: 'X'
          additionalInfo:
            - name: 'COUNTRY_CODE'
              value: 'USA'
            - name: 'CARD_PRODUCT_ID'
              value: 'H'
            - name: 'DETAILED_PRODUCT_ID'
              value: 'C'
            - name: 'HOST_RAW_PROCESSOR_RESPONSE'
              value: 'ARAyIAGADoAAAgAAAAAAAAAAAAgYGQECABUoAAFROGVjYzhjMWI3NDU3T0s0MDlDMDAwMTY1MDk3MQIEAEgxNE4wMTMyMzA1MDc4NzEyMjhJViAgICAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAAGDIyQVBQUk9WQUwgICAgICAgIAADNDlYAAM2NTEABlZJQ1JDIAAxU1AwNzAxNjg0MDg3Mjc4OTU4MDAwMjYxMDAwMzAwMgAxU0RUQzAxNTYwMTEwMDAwMDAwMDAwMEFSMDA0VjAwMABIQVJCTjAwOFVTQSBCYW5rQ0kwMDNVU0FDUDAwMUhEUDAwMUNSQzAwMjAwQ0IwMDFW'
    PaymentEMVRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source:
          sourceType: PaymentEMV
          emvData: 9F03060000000000009F5301529F2608453917CB42536AED820278009F360206019F34034200009F02060000000060009F2701808407A00000009808409F100706011203A000029F3303E098C89F1A0201249F1E084B553030303030339A032104059F350125950500800080005F2A0201245F24032212315F3401019F4104000000059F3901059C01009F37040DC7201A4F07A00000009808409F0607A0000000980840
          encryptionData:
            encryptionType: ON_GUARD
            encryptionTarget: TRACK_2
            encryptionBlock: 4614507291879694=078443325742854
            keyId: FFFF109700000E4000340114
            deviceType: INGENICO
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction:
          origin: POS
          posEntryMode: ICR_RELIABLE
          posConditionCode: CARD_PRESENT
          terminalTimestamp: '2022-03-10T01:37:13Z'
          additionalPosInformation:
            dataEntrySource: MOBILE_TERMINAL
            posFeatures:
              pinAuthenticationCapability: CAN_ACCEPT_PIN
              terminalEntryCapability: MAG_STRIPE_MANUAL_CHIP
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentEMVForcedRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source:
          sourceType: PaymentEMV
          emvData: 0249F3704833A12329F1002AB34
          encryptionData: {encryptionType: RSA, encryptionTarget: TRACK_2, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012',
          approvalCode: OK5882}
        transactionInteraction: {origin: POS, posEntryMode: ICR_RELIABLE, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentEMVTokenRequest:
      value:
        source:
          sourceType: PaymentEMV
          emvData: 9F03060000000000009F5301529F26082ED06DD1FFB3EB27820218009F360200029F34033F00019F02060000000006009F2701808407A00000015230109F10080105A000030000009F3303E098C89F1A0201249F1E084B553030303030339A032104129F350125950580008080005F2A0201245F24032312315F3401019F4104000000199F3901059C01009F370444A376B54F07A00000015230109F0607A0000001523010
          encryptionData:
            encryptionType: ON_GUARD
            encryptionTarget: TRACK_2
            encryptionBlock: 6866928729586224=03272981102005210986
            keyId: FFFF10970000000003FD0114
            deviceType: INGENICO
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentEMVInfoRequest:
      value:
        source:
          sourceType: PaymentEMV
          emvData: 9F03060000000000009F5301529F26082ED06DD1FFB3EB27820218009F360200029F34033F00019F02060000000006009F2701808407A00000015230109F10080105A000030000009F3303E098C89F1A0201249F1E084B553030303030339A032104129F350125950580008080005F2A0201245F24032312315F3401019F4104000000199F3901059C01009F370444A376B54F07A00000015230109F0607A0000001523010
          encryptionData:
            encryptionType: ON_GUARD
            encryptionTarget: TRACK_2
            encryptionBlock: 6866928729586224=03272981102005210986
            keyId: FFFF10970000000003FD0114
            deviceType: INGENICO
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
        
    PaymentEMVVerifyRequest:
      value:
        source:
          sourceType: 'PaymentEMV'
          emvData: '0249F3704833A12329F1002AB34'
          encryptionData:
            encryptionType: 'RSA'
            encryptionTarget: 'TRACK_2'
            encryptionBlock: '=s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA=='
            deviceType: 'INGENICO'
            keyId: '88000000022'
        billingAddress:
          firstName: 'Jane'
          lastName: 'Smith'
          address:
            street: 'Main Street'
            houseNumberOrName: '123'
            city: 'Sandy Springs'
            stateOrProvince: 'GA'
            postalCode: '30303'
            country: 'US'

    PaymentEMVChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: POS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentEMV
          card: {bin: '40055500', last4: '0019', scheme: VIsa, expirationMonth: '10',
            expirationYear: '2030'}
          emvData: 8a0230309f36020073910a1be55403be070aa53030
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction:
          posEntryMode: ICR_RELIABLE
          posConditionCode: CARD_PRESENT
          terminalTimestamp: '2022-03-10T01:37:13Z'
          additionalPosInformation:
            stan: '001709'
            dataEntrySource: MOBILE_TERMINAL
            posFeatures:
              pinAuthenticationCapability: CAN_ACCEPT_PIN
              terminalEntryCapability: MAG_STRIPE_MANUAL_CHIP
    PaymentEMVCreditResponse:
      value:
        gatewayResponse:
          transactionType: CREDIT
          transactionState: AUTHORIZED
          transactionOrigin: POS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentEMV
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentEMVTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: RETAIL
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: RKOrdID-525133851837
            apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db
            clientRequestId: '4345791'
            transactionId: '84356531338'
        source:
          sourceType: PaymentEMV
          card:
            bin: '40055500'
            last4: '0019'
            scheme: Visa
            expirationMonth: '10'
            expirationYear: '2030'
        paymentTokens:
          - tokenData: '8519371934460009'
            tokenSource: TRANSARMOR
            tokenResponseCode: '000'
            tokenResponseDescription: SUCCESS
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: FISERV
          host: NASHVILLE
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
    PaymentEMVInfoResponse:
      value:
        gatewayResponse:
          transactionType: 'INFORMATION'
          transactionState: 'SUCCESS'
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: 'RKOrdID-525133851837'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        cardDetails:
          - detailedCardProduct: 'VISA'
            productId: 'N1'
            visaProductSubType: 'HC'
            detailedCardIndicator: 'DEBIT'
            pinSignatureCapability: 'PIN_OR_SIGNATURE'
            cardClass: 'CORPORATE'
            countryCode: 'USA'
            issuerBankName: 'Example Bank'
            recordType: 'DETAIL'
            lowBin: '400337'
            highBin: '400338'
            binLength: '6'
            binDetailPan: '16'
            issuerUpdateYear: '20'
            issuerUpdateMonth: '09'
            issuerUpdateDay: '22'
            regulatorIndicator: 'NON_REGULATED'
            fsaIndicator: 'SUPPORTED'
            nonMoneyTransferOCTsDomestic: 'SUPPORTED'
            nonMoneyTransferOCTsCrossBorder: 'SUPPORTED'
            onlineGamblingOCTsDomestic: 'SUPPORTED'
            onlineGamblingOCTsCrossBorder: 'SUPPORTED'
            moneyTransferOCTsDomestic: 'SUPPORTED'
            moneyTransferOCTsCrossBorder: 'SUPPORTED'
            fastFundsDomesticMoneyTransfer: 'SUPPORTED'
            fastFundsCrossBorderMoneyTransfer: 'SUPPORTED'
            fastFundsDomesticNonMoneyTransfer: 'SUPPORTED'
            fastFundsCrossBorderNonMoneyTransfer: 'SUPPORTED'
            fastFundsDomesticGambling: 'SUPPORTED'
            fastFundsCrossBorderGambling: 'SUPPORTED'
            prepaidIndicator: 'PREPAID'
            visaLargeTicketIndicator: 'SUPPORTED'
            accountFundSource: 'DEBIT'
            panLengthMin: '16'
            panLengthMax: '16'
            tokenIndicator: 'SUPPORTED'
            cardholderBillingCurrency: 'USD'
            b2bProgramId: 'B2B_PROGRAM_1'
    PaymentEMVVerifyResponse:
      value:
        gatewayResponse:
          transactionType: VERIFICATION
          transactionState: VERIFIED
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: Visa, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: FISERV
          host: NASHVILLE
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
            avsSecurityCodeResponse:
              streetMatch: EXACT_MATCH
              postalCodeMatch: EXACT_MATCH
              securityCodeMatch: MATCHED
              association: {avsCode: Y, securityCodeResponse: M}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    PaymentTrackRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source:
          sourceType: PaymentTrack
          encryptionData:
            encryptionType: ON_GUARD
            encryptionTarget: TRACK_2
            encryptionBlock: 4614507291879694=078443325742854
            keyId: FFFF109700000E4000340114
            deviceType: INGENICO
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction:
          origin: POS
          posEntryMode: EMV_FALLBACK_MAG
          posConditionCode: CARD_PRESENT
          terminalTimestamp: '2022-03-10T04:26:56Z'
          additionalPosInformation:
            dataEntrySource: MOBILE_TERMINAL
            posFeatures:
              pinAuthenticationCapability: CAN_ACCEPT_PIN
              terminalEntryCapability: MAG_STRIPE_MANUAL_CHIP
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentTrackForcedRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source:
          sourceType: PaymentTrack
          encryptionData: {encryptionType: RSA, encryptionTarget: TRACK_2, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012',
          approvalCode: OK5882}
        transactionInteraction: {origin: POS, posEntryMode: EMV_FALLBACK_MAG, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentTrackTokenRequest:
      value:
        source:
          sourceType: PaymentTrack
          encryptionData:
            encryptionType: ON_GUARD
            encryptionTarget: TRACK_2
            encryptionBlock: 4614507291879694=078443325742854
            keyId: FFFF109700000E4000340114
            deviceType: INGENICO
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    PaymentTrackInfoRequest:
      value:
        source:
          sourceType: PaymentTrack
          encryptionData:
            encryptionType: ON_GUARD
            encryptionTarget: TRACK_2
            encryptionBlock: 4614507291879694=078443325742854
            keyId: FFFF109700000E4000340114
            deviceType: INGENICO
    PaymentTrackVerifyRequest:
      value:
        source:
          sourceType: PaymentTrack
          encryptionData:
            encryptionType: ON_GUARD
            encryptionTarget: TRACK_2
            encryptionBlock: 4614507291879694=078443325742854
            keyId: FFFF109700000E4000340114
            deviceType: INGENICO
        billingAddress:
          firstName: Jane
          lastName: Smith
          address: {street: Main Street, houseNumberOrName: '123', city: Sandy Springs,
            stateOrProvince: GA, postalCode: '30303', country: US}
    PaymentTrackChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: RETAIL
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentTrack
          card: {bin: '40055500', last4: '0019', scheme: Visa, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: 12.04, currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction:
          posEntryMode: EMV_FALLBACK_MAG
          posConditionCode: CARD_PRESENT
          terminalTimestamp: '2022-02-17T16:17:48Z'
          additionalPosInformation:
            stan: '001220'
            dataEntrySource: MOBILE_TERMINAL
            posFeatures:
              pinAuthenticationCapability: UNSPECIFIED
              terminalEntryCapability: MAG_STRIPE_ONLY
          authorizationCharacteristicsIndicator: E
          hostPosConditionCode: '00'
    PaymentTrackCreditResponse:
      value:
        gatewayResponse:
          transactionType: CREDIT
          transactionState: AUTHORIZED
          transactionOrigin: RETAIL
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentTrack
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    PaymentTrackTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: RETAIL
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: RKOrdID-525133851837
            apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db
            clientRequestId: '4345791'
            transactionId: '84356531338'
        source:
          sourceType: PaymentTrack
          card:
            bin: '40055500'
            last4: '0019'
            scheme: VISA
            expirationMonth: '10'
            expirationYear: '2030'
        paymentTokens:
          - tokenData: '8519371934460009'
            tokenSource: TRANSARMOR
            tokenResponseCode: '000'
            tokenResponseDescription: SUCCESS
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: FISERV
          host: NASHVILLE
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
    PaymentTrackInfoResponse:
      value:
        gatewayResponse:
          transactionType: 'INFORMATION'
          transactionState: 'SUCCESS'
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: 'RKOrdID-525133851837'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        cardDetails:
          - detailedCardProduct: 'VISA'
            productId: 'N1'
            visaProductSubType: 'HC'
            detailedCardIndicator: 'DEBIT'
            pinSignatureCapability: 'PIN_OR_SIGNATURE'
            cardClass: 'CORPORATE'
            countryCode: 'USA'
            issuerBankName: 'Example Bank'
            recordType: 'DETAIL'
            lowBin: '400337'
            highBin: '400338'
            binLength: '6'
            binDetailPan: '16'
            issuerUpdateYear: '20'
            issuerUpdateMonth: '09'
            issuerUpdateDay: '22'
            regulatorIndicator: 'NON_REGULATED'
            fsaIndicator: 'SUPPORTED'
            nonMoneyTransferOCTsDomestic: 'SUPPORTED'
            nonMoneyTransferOCTsCrossBorder: 'SUPPORTED'
            onlineGamblingOCTsDomestic: 'SUPPORTED'
            onlineGamblingOCTsCrossBorder: 'SUPPORTED'
            moneyTransferOCTsDomestic: 'SUPPORTED'
            moneyTransferOCTsCrossBorder: 'SUPPORTED'
            fastFundsDomesticMoneyTransfer: 'SUPPORTED'
            fastFundsCrossBorderMoneyTransfer: 'SUPPORTED'
            fastFundsDomesticNonMoneyTransfer: 'SUPPORTED'
            fastFundsCrossBorderNonMoneyTransfer: 'SUPPORTED'
            fastFundsDomesticGambling: 'SUPPORTED'
            fastFundsCrossBorderGambling: 'SUPPORTED'
            prepaidIndicator: 'PREPAID'
            visaLargeTicketIndicator: 'SUPPORTED'
            accountFundSource: 'DEBIT'
            panLengthMin: '16'
            panLengthMax: '16'
            tokenIndicator: 'SUPPORTED'
            cardholderBillingCurrency: 'USD'
            b2bProgramId: 'B2B_PROGRAM_1'
    PaymentTrackVerifyResponse:
      value:
        gatewayResponse:
          transactionType: VERIFICATION
          transactionState: VERIFIED
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentTrack
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: FISERV
          host: NASHVILLE
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
            avsSecurityCodeResponse:
              streetMatch: EXACT_MATCH
              postalCodeMatch: EXACT_MATCH
              securityCodeMatch: MATCHED
              association: {avsCode: Y, securityCodeResponse: M}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    ManualEntryRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source:
          sourceType: PaymentCard
          encryptionData: {encryptionType: RSA, encryptionTarget: MANUAL, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
        transactionInteraction: {origin: POS, posEntryMode: EMV_FALLBACK, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    ManualEntryForcedRequest:
      value:
        amount: {total: 12.04, currency: USD}
        source:
          sourceType: PaymentCard
          encryptionData: {encryptionType: RSA, encryptionTarget: MANUAL, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012',
          approvalCode: OK5882}
        transactionInteraction: {origin: POS, posEntryMode: EMV_FALLBACK, posConditionCode: CARD_PRESENT,
          terminalTimestamp: '2021-06-20T23:42:48Z'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    ManualEntryTokenRequest:
      value:
        source:
          sourceType: PaymentCard
          encryptionData: {encryptionType: RSA, encryptionTarget: MANUAL, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    ManualEntryInfoRequest:
      value:
        source:
          sourceType: PaymentCard
          encryptionData: {encryptionType: RSA, encryptionTarget: MANUAL, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
    ManualEntryVerifyRequest:
      value:
        source:
          sourceType: PaymentCard
          encryptionData: {encryptionType: RSA, encryptionTarget: MANUAL, encryptionBlock: =s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ7TY/0VGHEYpkbG3ORO+dGL6TzOSWuC1pCaJE3cZJ8sWONXp5pDuni1OP9v+eRyDSD25Bjzdfa3KJfmXLFXWa++wJ5CY+NdQKrjHWWKP+iAzIUEd5PmnrzVxMgXOz1wJ5YR245a2350oBbz74EZfaojPtX/DCgfEL6cCEyepttx94hIWDDiOLPuplp1KJhh7nJvUGIAhDhZwyKST68xsFswN53z/aduD128TXD4vkduK9QYgavE0y82lxwQILUGScwYnRYmb+Zu2el3ayNE8zdXCe4eWiN1vXxsKUI49WQA==,
            deviceType: INGENICO, keyId: '88000000022'}
        billingAddress:
          firstName: Jane
          lastName: Smith
          address: {street: Main Street, houseNumberOrName: '123', city: Sandy Springs,
            stateOrProvince: GA, postalCode: '30303', country: US}
    ManualEntryChargesResponse:
      value:
        gatewayResponse:
          transactionType: CHARGE
          transactionState: AUTHORIZED
          transactionOrigin: POS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: 12.04, currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    ManualEntryCreditResponse:
      value:
        gatewayResponse:
          transactionType: CREDIT
          transactionState: AUTHORIZED
          transactionOrigin: POS
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: 12.04, currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {captureFlag: true, merchantInvoiceNumber: '123456789012'}
    ManualEntryTokenResponse:
      value:
        gatewayResponse:
          transactionType: TOKENIZE
          transactionState: AUTHORIZED
          transactionOrigin: RETAIL
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          tokenSource: TRANSARMOR
          tokenData: '8519371934460009'
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: FISERV
          host: NASHVILLE
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
    ManualEntryInfoResponse:
      value:
        gatewayResponse:
          transactionType: 'INFORMATION'
          transactionState: 'SUCCESS'
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: 'RKOrdID-525133851837'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        cardDetails:
          - detailedCardProduct: 'VISA'
            productId: 'N1'
            visaProductSubType: 'HC'
            detailedCardIndicator: 'DEBIT'
            pinSignatureCapability: 'PIN_OR_SIGNATURE'
            cardClass: 'CORPORATE'
            countryCode: 'USA'
            issuerBankName: 'Example Bank'
            recordType: 'DETAIL'
            lowBin: '400337'
            highBin: '400338'
            binLength: '6'
            binDetailPan: '16'
            issuerUpdateYear: '20'
            issuerUpdateMonth: '09'
            issuerUpdateDay: '22'
            regulatorIndicator: 'NON_REGULATED'
            fsaIndicator: 'SUPPORTED'
            nonMoneyTransferOCTsDomestic: 'SUPPORTED'
            nonMoneyTransferOCTsCrossBorder: 'SUPPORTED'
            onlineGamblingOCTsDomestic: 'SUPPORTED'
            onlineGamblingOCTsCrossBorder: 'SUPPORTED'
            moneyTransferOCTsDomestic: 'SUPPORTED'
            moneyTransferOCTsCrossBorder: 'SUPPORTED'
            fastFundsDomesticMoneyTransfer: 'SUPPORTED'
            fastFundsCrossBorderMoneyTransfer: 'SUPPORTED'
            fastFundsDomesticNonMoneyTransfer: 'SUPPORTED'
            fastFundsCrossBorderNonMoneyTransfer: 'SUPPORTED'
            fastFundsDomesticGambling: 'SUPPORTED'
            fastFundsCrossBorderGambling: 'SUPPORTED'
            prepaidIndicator: 'PREPAID'
            visaLargeTicketIndicator: 'SUPPORTED'
            accountFundSource: 'DEBIT'
            panLengthMin: '16'
            panLengthMax: '16'
            tokenIndicator: 'SUPPORTED'
            cardholderBillingCurrency: 'USD'
            b2bProgramId: 'B2B_PROGRAM_1'
    ManualEntryVerifyResponse:
      value:
        gatewayResponse:
          transactionType: VERIFICATION
          transactionState: VERIFIED
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        processorResponseDetails:
          approvalStatus: APPROVED
          approvalCode: OK5882
          schemeTransactionId: 0225MCC625628
          processor: FISERV
          host: NASHVILLE
          responseCode: '000'
          responseMessage: APPROVAL
          hostResponseCode: '00'
          hostResponseMessage: APPROVAL
          localTimestamp: '2021-06-20T23:42:48Z'
          bankAssociationDetails:
            associationResponseCode: '000'
            transactionTimestamp: '2021-06-20T23:42:48Z'
            avsSecurityCodeResponse:
              streetMatch: EXACT_MATCH
              postalCodeMatch: EXACT_MATCH
              securityCodeMatch: MATCHED
              association: {avsCode: Y, securityCodeResponse: M}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    SecondaryRequest:
      value:
        amount: {total: 12.04, currency: USD}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
        merchantDetails: {terminalId: '123456', merchantId: '123456789012345'}
    SecondaryRequestWithReferenceMerchantTransactionId:
      value:
        referenceTransactionDetails:
          referenceMerchantTransactionId: 'ac81864d7c9d1ff8b5aa6e98db'
          referenceTransactionType: 'CHARGES'
        amount:
          total: 12.04
          currency: 'USD'
        transactionDetails:
          merchantInvoiceNumber: '123456789012'
        merchantDetails:
          terminalId: '123456'
          merchantId: '123456789012345'

    SecondaryRequestWithReferenceTransactionId:
      value:
        referenceTransactionDetails:
          referenceTransactionId: '362866ac81864d7c9d1ff8b5aa6e98db'
          referenceTransactionType: 'CHARGES'
        amount:
          total: 12.04
          currency: 'USD'
        transactionDetails:
          merchantInvoiceNumber: '123456789012'
        merchantDetails:
          terminalId: '123456'
          merchantId: '123456789012345'
    CancelResponse:
      value:
        gatewayResponse:
          transactionType: CANCEL
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: '12.04', currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    RefundResponse:
      value:
        gatewayResponse:
          transactionType: REFUND
          transactionState: AUTHORIZED
          transactionOrigin: ECOM
          transactionProcessingDetails: {transactionTimestamp: '2021-06-20T23:42:48Z',
            orderId: RKOrdID-525133851837, apiTraceId: 362866ac81864d7c9d1ff8b5aa6e98db,
            clientRequestId: '4345791', transactionId: '84356531338'}
        source:
          sourceType: PaymentCard
          card: {bin: '40055500', last4: '0019', scheme: VISA, expirationMonth: '10',
            expirationYear: '2030'}
        paymentReceipt:
          approvedAmount: {total: 12.04, currency: USD}
          merchantName: Merchant Name
          merchantAddress: 123 Peach Ave
          merchantCity: Atlanta
          merchantStateOrProvince: GA
          merchantPostalCode: '12345'
          merchantCountry: US
          merchantURL: https://www.somedomain.com
          processorResponseDetails:
            approvalStatus: APPROVED
            approvalCode: OK5882
            schemeTransactionId: 0225MCC625628
            processor: FISERV
            host: NASHVILLE
            responseCode: '000'
            responseMessage: APPROVAL
            hostResponseCode: '00'
            hostResponseMessage: APPROVAL
            localTimestamp: '2021-06-20T23:42:48Z'
            bankAssociationDetails: {associationResponseCode: '000', transactionTimestamp: '2021-06-20T23:42:48Z'}
        transactionDetails: {merchantInvoiceNumber: '123456789012'}
    TransactionInquiryRequest:
      value:
        referenceTransactionDetails:
          referenceTransactionId: '95f6b8c8ec024e1183a8e998406656ce'
        merchantDetails:
          merchantId: '222222222222'
    TransactionInquiryByMerchantOrderIdRequest:
      value:
        referenceTransactionDetails:
          referenceMerchantOrderId: 'RKOrdID-822715036'
        merchantDetails:
          merchantId: '222222222222'
    TransactionInquiryResponse:
      value:
      -
        gatewayResponse:
          transactionOrigin: 'ECOM'
          transactionProcessingDetails:
            apiTraceId: 'aa829dcb83cd49f485141168e051b8d1'
            clientRequestId: '9806383'
            orderId: 'CHG01586b6416dddd4425ae764daee6c3ac8a'
            transactionId: '95f6b8c8ec024e1183a8e998406656ce'
            transactionTimestamp: '2022-01-13T19:09:27.939151Z'
          transactionState: 'CAPTURED'
          transactionType: 'CHARGE'
        paymentReceipt:
          approvedAmount:
            currency: 'USD'
            total: '690'
          processorResponseDetails:
            approvalCode: 'OK6982'
            approvalStatus: 'APPROVED'
            hostResponseCode: '00'
            hostResponseMessage: 'APPROVAL'
            localTimestamp: '2022-01-13T19:09:29Z'
            processor: 'FISERV'
            host: 'NASHVILLE'
            responseCode: '000'
            responseMessage: 'APPROVAL'
            schemeTransactionId: '0113MCC815463'
        source:
          card:
            bin: '542418'
            expirationMonth: '12'
            expirationYear: '2025'
            last4: '1732'
            scheme: 'MASTERCARD'
          sourceType: 'PaymentCard'
        transactionDetails:
          captureFlag: 'true'
          merchantInvoiceNumber: 'CHG01586b641'
    TransactionInquiryByMerchantOrderIdResponse:
      value:
      -
          gatewayResponse:
            transactionProcessingDetails:
              apiTraceId: 'c16a33b487af4eb9b6b6e97a912bda6f'
              clientRequestId: '8893258'
              orderId: 'CHG01c23b5480234e4a26b172e1f33296a51e'
              transactionId: 'c16a33b487af4eb9b6b6e97a912bda6f'
              transactionTimestamp: '2022-01-13T18:15:43.777576Z'
            transactionState: 'CAPTURED'
            transactionType: 'CHARGE'
          paymentReceipt:
            approvedAmount:
              currency: 'USD'
              total: '16.93'
            processorResponseDetails:
              approvalCode: 'OK7742'
              approvalStatus: 'APPROVED'
              bankAssociationDetails:
                avsSecurityCodeResponse:
                  association:
                    avsCode: 'Y'
                    securityCodeResponse: 'X'
                  postalCodeMatch: 'NOT_MATCHED'
                  securityCodeMatch: 'NOT_CHECKED'
                  streetMatch: 'MATCHED'
                transactionTimestamp: '2022-01-13T18:15:45.177Z'
              hostResponseCode: '00'
              hostResponseMessage: 'APPROVAL'
              localTimestamp: '2022-01-13T18:15:45Z'
              processor: 'fiserv'
              responseCode: '000000'
              responseMessage: 'APPROVAL'
              schemeTransactionId: '164209774594909'
          source:
            card:
              bin: '653949'
              expirationMonth: '06'
              expirationYear: '2026'
              last4: '1727'
              scheme: 'DINERSCLUB'
            sourceType: 'DecryptedWallet'
          additionalDataCommon:
            billingAddress:
              address:
                city: 'Atlanta'
                country: 'USA'
                houseNumberOrName: '4201'
                postalCode: '30338'
                stateOrProvince: 'Georgia'
                street: '123 Main Dr'
              firstName: 'Jane'
              lastName: 'Doe'
          transactionDetails:
            captureFlag: 'true'
            merchantInvoiceNumber: '520608612'
            merchantOrderId: 'RKOrdID-822715036'
            merchantTransactionId: 'RKTransID-834788206'
          transactionInteraction:
            eciIndicator: 'SECURE_ECOM'
    SecurityCredentialsRequest:
      value:
        domains:
          - url: "https://checkout.mystore.com"
          - url: "https://store.mystore.com"
          - url: "https://*.mystore.com"
        merchantDetails:
          merchantId: "123456789012345"
    SecurityCredentialsResponse:
      value:
        keyId: 'dc86c901145e47fb8e339bf11af1e0b1'
        publicKey: 'TUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUFtbnBnQUpTellsWVNzNjZwUWc2S3hBdkN3NXk3dXNWRmlLODdRU2FSZzNOYzdodzlVVE5DWXh3L3UxME5MblA1RW1OblVWS2FKcWE4SHdnS1RibmxWNTRsZnhBMkV5OEt6dEtsYVBYMlh2QWw3bXVNVFNsMjZZdzd2ZU1pUUVPSExIL2RQaGQxUlo3UUwwcE1KeVIrbTYzMHhwVDRoakliZkJJV0VTNXRRa3lnSk5LQ2RXT0tQY2VkU2hLeUV5YzYraW1DNTk5VjdETUVrYXVqL2haWVhYOTlyQXJIV3NkYkRmZVpaWlNRcjVVK0lnWmEvdFJiTlA2MUFrKy9KVnFDby8wZ3BzNVJUOU9XV1hYUzYwYlVEby9nSCtweVcrRkpKdjBxYWFPT0IrWjFNN1dCQlBNeEdXZGpJT2VscjR6eGRUdXhHWlpxWG1ad1hTelQyaVZ1b3dJREFRQUI='
        keyLength: 792
        accessToken: 'vsmsrKcNFWzq79Yd8aaxHetHBdxm'
        sessionId: 'b28ba2ca-6368-4d72-b5f0-c185b4d0de4c'
        domains:
          - url: "https://checkout.mystore.com"
          - url: "https://store.mystore.com"
          - url: "https://*.mystore.com"
        symmetricEncryptionAlgorithm: 'AES-GCM'
        asymmetricEncryptionAlgorithm: 'RSA'
        accessTokenIssuedTime: '2016-04-16T16:06:05Z'
        accessTokenTimeToLive: 1799
        accessTokenType: 'BEARER'
    PaymentSessionRequest:
      value:
        amount:
          total: 12.04
          currency: USD
        source:
          sourceType: 'PaymentSession'
          sessionId: 'df8c33d2-af27-4a3a-b7a0-61d4edf09cad'
        transactionDetails:
          captureFlag: true
          accountVerification: false
          merchantInvoiceNumber: '123456789012'
        transactionInteraction:
          origin: 'ECOM'
          eciIndicator: 'CHANNEL_ENCRYPTED'
          posConditionCode: 'CARD_NOT_PRESENT_ECOM'
        merchantDetails:
          merchantId: '123456789012345'
          terminalId: '123456'
    PaymentSessionTokenRequest:
      value:
        source:
          sourceType: 'PaymentSession'
          sessionId: 'df8c33d2-af27-4a3a-b7a0-61d4edf09cad'
        transactionDetails:
          merchantInvoiceNumber: '123456789012'
        merchantDetails:
          merchantId: '123456789012345'
          terminalId: '123456'
          
    PaymentSessionVerifyRequest:
      value:
        source:
          sourceType: 'PaymentSession'
          sessionId: 'df8c33d2-af27-4a3a-b7a0-61d4edf09cad'
        billingAddress:
          firstName: 'Jane'
          lastName: 'Smith'
          address:
            street: 'Main Street'
            houseNumberOrName: '123'
            city: 'Sandy Springs'
            stateOrProvince: 'GA'
            postalCode: '30303'
            country: 'US'

    EncryptionKeyRequest:
      value:
        merchantDetails:
          merchantId: "123456789012345"

    EncryptionKeyGenerateResponse:
      value:
        gatewayResponse:
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        asymmetricKeyDetails:
          keyId: 'accb12d8-684e-4261-9786-1b54f98d48ee'
          encryptionType: 'RSA'
          modulus: 2048
          encodedPublicKey: 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuDjOPaWaW4VHWvn2dtzEmgJ32usf6F8AbzsyutP4j3EJEfq4qKg95wSHB3FRETcwksDkRRiRBiwnkWROxNwzuPf3MZNjqDYXlpHgPhQdzSl3M5YdkytrHM+nmIrIkEO7jUf9d3PTBPmR+F0bxMofApg7DSAG0uXglbh/XdKC74tGIfHvM5XrP2f1N9FBQmOk926Sfo5w+q9C3MtxME+9NyK81UjE9wik9F3MBKbsI1TxDsmexXbrHkWM6JGoxL3g09/Vr3VYEdSvPfryP6+weruW30WRtMjebEpBtWAAodt1c4JDO8Uur1U1+oxXGZDhFe3nCKyxJGTmQRAYvHmMUQIDAQAB'
          validFrom: '2023-03-29T13:55:20.102105Z'
          validTo: '2023-04-18T13:55:20.102105Z'
          status: 'ACTIVE'
        symmetricKeyDetails:
          encryptionType: 'AES-GCM'
          modulus: 256

    EncryptionKeyRevokedResponse:
      value:
        gatewayResponse:
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        asymmetricKeyDetails:
          keyId: 'accb12d8-684e-4261-9786-1b54f98d48ee'
          encryptionType: 'RSA'
          modulus: 2048
          encodedPublicKey: 'MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAuDjOPaWaW4VHWvn2dtzEmgJ32usf6F8AbzsyutP4j3EJEfq4qKg95wSHB3FRETcwksDkRRiRBiwnkWROxNwzuPf3MZNjqDYXlpHgPhQdzSl3M5YdkytrHM+nmIrIkEO7jUf9d3PTBPmR+F0bxMofApg7DSAG0uXglbh/XdKC74tGIfHvM5XrP2f1N9FBQmOk926Sfo5w+q9C3MtxME+9NyK81UjE9wik9F3MBKbsI1TxDsmexXbrHkWM6JGoxL3g09/Vr3VYEdSvPfryP6+weruW30WRtMjebEpBtWAAodt1c4JDO8Uur1U1+oxXGZDhFe3nCKyxJGTmQRAYvHmMUQIDAQAB'
          validFrom: '2023-03-29T13:55:20.102105Z'
          validTo: '2023-04-18T13:55:20.102105Z'
          status: 'REVOKED'
        symmetricKeyDetails:
          encryptionType: 'AES-GCM'
          modulus: 256
   
    CreateDigitalGiftCardRequest: 
      value:
        amount:
          total: '12.04'
          currency: 'USD'
        transactionDetails:
          merchantTransactionId: '123456789012'
          merchantOrderId: '845366457890'
          operationType: 'ACTIVATION'
        merchantDetails: 
          terminalId: '123456'
          merchantId: '123456789012345'
          promotionCode: '12A34B7'
        additionalDataCommon:
          additionalData:
            fundingProvider: 'CUSTOMER'
    
    CreateDigitalGiftCardResponse: 
      value:
        gatewayResponse:
          transactionType: 'GIFT_CARDS'
          transactionState: 'ACTIVATED'
          transactionOrigin: 'ECOM'
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: 'RKOrdID-525133851837'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        target: 
          sourceType: 'PaymentCard'
          card:
            bin: '40055500'
            last4: '0019'
            category: 'GIFT'
            subCategory: 'GIFT_SOLUTIONS'
            expirationMonth: '10'
            expirationYear: '2030'
        paymentReceipt:
          processorResponseDetails:
            approvalStatus: 'APPROVED'
            approvalCode: 'OK5882'
            processor: 'fiserv'
            responseCode: '000000'
            responseMessage: 'APPROVAL'
            hostResponseCode: '00'
            hostResponseMessage: 'APPROVAL'
            localTimestamp: '2021-06-20T23:42:48Z'
          balances:
            - beginningBalance: '0.00'
              endingBalance: '12.04'
              currency: 'USD'

    PaymentCardActivateCardRequest: 
      value:
        amount:
          total: '12.04'
          currency: 'USD'
        target: 
          sourceType: 'PaymentCard'
          card:
            cardData: '4005550000000019'
            expirationMonth: '02'
            expirationYear: '2035'
            category: 'GIFT'
            subCategory: 'GIFT_SOLUTIONS'
        transactionDetails: 
          merchantTransactionId: '123456789012'
          merchantOrderId: '845366457890'
          operationType: 'ACTIVATION'
        merchantDetails: 
          terminalId: '123456'
          merchantId: '123456789012345'
          promotionCode: '12A34B7'
        additionalDataCommon:
          additionalData:
            fundingProvider: 'CUSTOMER'
    
    PaymentCardActivateCardResponse: 
      value:
        gatewayResponse:
          transactionType: 'GIFT_CARDS'
          transactionState: 'ACTIVATED'
          transactionOrigin: 'ECOM'
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: 'RKOrdID-525133851837'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        target: 
          sourceType: 'PaymentCard'
          card:
            bin: '40055500'
            last4: '0019'
            category: 'GIFT'
            subCategory: 'GIFT_SOLUTIONS'
            expirationMonth: '10'
            expirationYear: '2030'
        paymentReceipt:
          processorResponseDetails:
            approvalStatus: 'APPROVED'
            approvalCode: 'OK5882'
            processor: 'fiserv'
            responseCode: '000000'
            responseMessage: 'APPROVAL'
            hostResponseCode: '00'
            hostResponseMessage: 'APPROVAL'
            localTimestamp: '2021-06-20T23:42:48Z'
          balances:
            - beginningBalance: '0.00'
              endingBalance: '12.04'
              currency: 'USD'
              
    PaymentCardReloadRequest: 
      value:
        amount:
          total: '10.00'
          currency: 'USD'
        target: 
          sourceType: 'PaymentCard'
          card:
            cardData: '4005550000000019'
            expirationMonth: '02'
            expirationYear: '2035'
            category: 'GIFT'
            subCategory: 'GIFT_SOLUTIONS'
        transactionDetails: 
          merchantTransactionId: '123456789012'
          merchantOrderId: '845366457890'
          operationType: 'RELOAD'
        merchantDetails: 
          terminalId: '123456'
          merchantId: '123456789012345'
        additionalDataCommon:
          additionalData:
            fundingProvider: 'CUSTOMER'
    
    PaymentCardReloadResponse: 
      value:
        gatewayResponse: 
          transactionType: 'GIFT_CARDS'
          transactionState: 'ACTIVATED'
          transactionOrigin: 'ECOM'
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: 'RKOrdID-525133851837'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        target: 
          sourceType: 'PaymentCard'
          card:
            bin: '40055500'
            last4: '0019'
            category: 'GIFT'
            subCategory: 'GIFT_SOLUTIONS'
            expirationMonth: '10'
            expirationYear: '2030'
        paymentReceipt:
          processorResponseDetails:
            approvalStatus: 'APPROVED'
            approvalCode: 'OK5882'
            processor: 'fiserv'
            responseCode: '000000'
            responseMessage: 'APPROVAL'
            hostResponseCode: '00'
            hostResponseMessage: 'APPROVAL'
            localTimestamp: '2021-06-20T23:42:48Z'
          balances:
            - beginningBalance: '12.04'
              endingBalance: '22.04'
              currency: 'USD'
              
    PaymentCardCashoutRequest: 
      value: 
        target: 
          sourceType: 'PaymentCard'
          card:
            cardData: '4005550000000019'
            expirationMonth: '02'
            expirationYear: '2035'
            category: 'GIFT'
            subCategory: 'GIFT_SOLUTIONS'
        transactionDetails: 
          merchantTransactionId: '123456789012'
          merchantOrderId: '845366457890'
          operationType: 'CASH_OUT'
        merchantDetails: 
          terminalId: '123456'
          merchantId: '123456789012345'
    
    PaymentCardCashoutResponse: 
      value:
        gatewayResponse: 
          transactionType: 'GIFT_CARDS'
          transactionState: 'ACTIVATED'
          transactionOrigin: 'ECOM'
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: 'RKOrdID-525133851837'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        target: 
          sourceType: 'PaymentCard'
          card:
            bin: '40055500'
            last4: '0019'
            category: 'GIFT'
            subCategory: 'GIFT_SOLUTIONS'
            expirationMonth: '10'
            expirationYear: '2030'
        paymentReceipt:
          processorResponseDetails:
            approvalStatus: 'APPROVED'
            approvalCode: 'OK5882'
            processor: 'fiserv'
            responseCode: '000000'
            responseMessage: 'APPROVAL'
            hostResponseCode: '00'
            hostResponseMessage: 'APPROVAL'
            localTimestamp: '2021-06-20T23:42:48Z'
          balances:
            - beginningBalance: '0'
              endingBalance: '0'
              currency: 'USD'

    PaymentCardBalanceInquiryRequest: 
      value: 
        source:
          sourceType: 'PaymentCard'
          card:
            cardData: '4005550000000019'
            expirationMonth: '02'
            expirationYear: '2035'
            category: 'GIFT'
            subCategory: 'GIFT_SERVICES'
        transactionDetails:
          merchantTransactionId: '1343678765'
          merchantOrderId: '845366457890'
        transactionInteraction: 
          terminalTimestamp: '2016-04-16T16:06:05Z'
        merchantDetails: 
          terminalId: '123456'
          merchantId: '123456789012345'

    PaymentCardBalanceInquiryResponse: 
      value:
        gatewayResponse: 
          transactionType: 'BALANCE_INQUIRY'
          transactionState: 'CHECKED'
          transactionOrigin: 'ECOM'
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: 'RKOrdID-525133851837'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        source:
          sourceType: 'PaymentCard'
          card:
            bin: '40055500'
            last4: '0019'
            category: 'GIFT'
            subCategory: 'GIFT_SERVICES'
            expirationMonth: '10'
            expirationYear: '2030'
        paymentReceipt:
          processorResponseDetails:
              approvalStatus: 'APPROVED'
              approvalCode: 'OK5882'
              schemeTransactionId: '0225MCC625628'
              processor: 'fiserv'
              responseCode: '000'
              responseMessage: 'APPROVAL'
              hostResponseCode: '00'
              hostResponseMessage: 'APPROVAL'
              localTimestamp: '2021-06-20T23:42:48Z'
          balances:
              - beginningBalance: 12.04
                endingBalance: 12.04
                currency: 'USD'

    HealthCheckStatusResponse:
      value:
        environment: prod
        apiKey: Pv3bTlh4Gdz6**********Kbccz6sqTAFXMea4
        from: '2023-10-23T15:52:00.000000000Z'
        to: '2023-10-23T16:06:00.000000000Z'
        metrics:
          - apiProduct: general
            httpErrors:
              - code: '401'
                count: '2'
          - apiProduct: payments
            httpErrors:
              - code: '400'
                count: '2'
              - code: '500'
                count: '1'
                lastOccurred: '2023-10-23T15:57:19.000000000Z'
              - code: '501'
                count: '1'
                lastOccurred: '2023-10-23T15:57:22.000000000Z'
              - code: '502'
                count: '2'
                lastOccurred: '2023-10-23T15:57:28.000000000Z'
              - code: '503'
                count: '4'
                lastOccurred: '2023-10-23T15:57:37.000000000Z'
              - code: '504'
                count: '4'
                lastOccurred: '2023-10-23T15:57:45.000000000Z'
          - apiProduct: paymentsVAS
            httpErrors:
              - code: '400'
                count: '2'
              - code: '500'
                count: '1'
                lastOccurred: '2023-10-23T15:58:15.000000000Z'
              - code: '501'
                count: '1'
                lastOccurred: '2023-10-23T15:58:12.000000000Z'
              - code: '502'
                count: '1'
                lastOccurred: '2023-10-23T15:58:09.000000000Z'
              - code: '503'
                count: '1'
                lastOccurred: '2023-10-23T15:58:05.000000000Z'
              - code: '504'
                count: '1'
                lastOccurred: '2023-10-23T15:58:00.000000000Z'

    PaymentCardDccRequest:
      value:
        amount:
          total: '199.23'
          currency: 'USD'
        source:
          sourceType: 'PaymentCard'
          encryptionData:
            encryptionType: 'RSA'
            encryptionTarget: 'MANUAL'
            encryptionBlock: '=s3ZmiL1SSZC8QyBpj/Wn+VwpLDgp41IwstEHQS8u4EQJ....'
            encryptionBlockFields: 'card.cardData:16,card.nameOnCard:10,card.expirationMonth:2,card.expirationYear:4,card.securityCode:3'
            keyId: '88000000022'
        merchantDetails:
          terminalId: '123456'
          merchantId: '123456789012345'

    CurrencyCodeDccRequest:
      value:
        sourceCurrency:
          total: '199.23'
          currency: 'USD'
        targetCurrency:
          currency: 'JPY'
        merchantDetails:
          terminalId: '123456'
          merchantId: '123456789012345'

    DccResponse:
      value:
        gatewayResponse:
          transactionType: 'CURRENCY_DCC'
          transactionState: 'RATE_SUPPLIED'
          transactionProcessingDetails:
            transactionTimestamp: '2021-06-20T23:42:48Z'
            orderId: 'RKOrdID-525133851837'
            apiTraceId: '362866ac81864d7c9d1ff8b5aa6e98db'
            clientRequestId: '4345791'
            transactionId: '84356531338'
        source:
          sourceType: 'PaymentCard'
          card:
            bin: '40055500'
            last4: '0019'
            scheme: 'VISA'
            expirationMonth: '10'
            expirationYear: '2030'
        rate:
          referenceId: '362866ac81864d7c9d1ff8b5aa6e98db'
          provider: 'VISA'
          eligibility: 'DCC_ELIGIBLE'
          exchangeRate: 19.45
          margin: 3.45
          timestamp: '2021-06-20T23:42:48Z'
          validFrom: '2021-06-20T23:42:48Z'
          validTo: '2021-07-20T23:42:48Z'
          sourceAmount:
            total:'199.23'
            currency:'USD'
          targetAmount:
            total:'3875.07'
            currency:'TRY'
        processorResponseDetails:
          approvalStatus: 'APPROVED'
          processor: 'fiserv'
          responseCode: '000'
          responseMessage: 'APPROVAL'
          hostResponseMessage: 'RATE_SUPPLIED'
          localTimestamp: '2021-06-20T23:42:48Z'

    PartnerPaymentTokenRequest:
      value:
        source:
          sourceType: 'PaymentToken'
          tokenData: '1234560000000019'
          tokenSource: 'TRANSARMOR'
        merchantDetails:
          terminalId: '123456'
          merchantId: '123456789012345'
        additionalDataCommon:
          directedRouting:
            processors:
              processorName: 'CHASE'
              processorPlatform: 'TAMPA'
    
    PartnerPaymentTokenResponse:
      value:
        gatewayResponse:
          transactionType: 'TOKENIZE'
          transactionState: 'AUTHORIZED'
          transactionOrigin: 'POS'
        source:
          sourceType: 'PaymentToken'
          tokenSource: 'TRANSARMOR'
          tokenData: '1234560000000019'
        paymentTokens:
          - tokenData: '23459371934460009'
            tokenSource: 'CHASE'
            tokenResponseCode: '000'
            tokenResponseDescription: 'SUCCESS'
        processorResponseDetails:
          approvalStatus: 'APPROVED'
          schemeTransactionId: '0225MCC625628'
          processor: 'CHASE'
          responseCode: '000'
          responseMessage: 'APPROVAL'
          hostResponseCode: '00'
          hostResponseMessage: 'APPROVAL'
          localTimestamp: '2021-06-20T23:42:48Z'
        additionalDataCommon:
          directedRouting:
            processors:
              processorName: 'CHASE'
              processorPlatform: 'TAMPA'
