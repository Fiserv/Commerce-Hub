openapi: 3.0.2
info: {title: API Explorer, description: This API Specification is designed to provide
    technical guidance required to consume and integrate with our APIs for payment
    processing in Card Not Present environments., version: 1.0.0}
servers:
- {url: 'https://api.fiservapps.com/ch/{resource}', description: Production}
- {url: 'https:// cert.api.fiservapps.com/ch/{resource}', description: Cert Sandbox}
- {url: 'https:// qa.api.fiservapps.com/ch/{resource}', description: QA Sandbox}
paths:
  /payments/v1/charges/{transactionId}/cancel:
    x-model-version: 1.0
    post:
      tags: [Cancel]
      x-group-name: Payments
      x-proxy-name: Cancel
      summary: Submit a cancel transaction.
      description: Use this payload to perform cancel a transaction (aka void).
      requestBody:
        required: true
        content:
          application/json:
            schema: {$ref: '#/components/schemas/CancelRequest'}
      parameters:
      - {$ref: '#/components/parameters/TransactionIdParam'}
      - {$ref: '#/components/parameters/ContentTypeHeader'}
      - {$ref: '#/components/parameters/ClientRequestIdHeader'}
      - {$ref: '#/components/parameters/ApiKeyHeader'}
      - {$ref: '#/components/parameters/TimestampHeader'}
      - {$ref: '#/components/parameters/AcceptLanguageHeader'}
      - {$ref: '#/components/parameters/AuthorizationTokenTypeHeader'}
      - {$ref: '#/components/parameters/AuthorizationHeader'}
      - {$ref: '#/components/parameters/MessageDigestHeader'}
      responses:
        200:
          description: Success
          content:
            application/json:
              schema: {$ref: '#/components/schemas/CancelResponse'}
        400: {$ref: '#/components/responses/BadRequest'}
        401: {$ref: '#/components/responses/Unauthorized'}
        404: {$ref: '#/components/responses/NotFound'}
        408: {$ref: '#/components/responses/RequestTimeout'}
        415: {$ref: '#/components/responses/UnsupportedMediaType'}
        425: {$ref: '#/components/responses/TooEarly'}
        429: {$ref: '#/components/responses/TooManyRequest'}
        500: {$ref: '#/components/responses/ServerError'}
        503: {$ref: '#/components/responses/ServiceUnavailable'}
        504: {$ref: '#/components/responses/GatewayTimeout'}
components:
  parameters:
    OrderIdParam:
      x-model-version: 1.0
      name: orderId
      schema: {type: string}
      in: path
      required: true
      description: Use this to perform secondary transaction, received from primary
        auth or sale.
    TransactionIdParam:
      x-model-version: 1.0
      name: transactionId
      schema: {type: string}
      in: path
      required: true
      description: Use this to perform secondary transaction, received from primary
        auth or sale.
    WalletTypeParam:
      x-model-version: 1.0
      name: walletType
      schema: {type: string}
      in: path
      required: true
      description: |
        Wallet type for which the keypair is to be generated.

        Valid Values:
        * ApplePay
        * SamsungPay
    AuthorizationTokenTypeHeader:
      x-model-version: 1.0
      name: Auth-Token-Type
      schema: {type: string}
      in: header
      required: true
      description: Indicates authorization type HMAC, JWT, or AccessToken.
    AuthorizationHeader:
      x-model-version: 1.0
      name: Authorization
      schema: {type: string}
      in: header
      required: true
      description: Authorization header used to ensure the request has not been tampered
        with during transmission. Valid encryption; HMAC, JWT, or AccessToken. For
        more information, refer to the supporting documentation on the Developer Portal.
    MessageDigestHeader:
      x-model-version: 1.0
      name: Message-Digest
      schema: {type: string}
      in: header
      required: false
      description: Needed only from customer browser or app to the API in Hosted Payment
        Page requests.
    AcceptLanguageHeader:
      x-model-version: 1.0
      name: Accept-Language
      schema: {type: string}
      in: header
      required: false
      description: The Accept Language header contains information about the language
        preference of a user. This HTTP header is useful to multilingual sites for
        deciding the best language to serve to the client. For example en-US or fr-CA.
    ContentTypeHeader:
      x-model-version: 1.0
      name: Content-Type
      schema:
        type: string
        enum: [application/json]
        default: application/json
      in: header
      required: true
      description: The content type. Valid value (application/json).
    ClientRequestIdHeader:
      x-model-version: 1.0
      name: Client-Request-Id
      schema: {type: string}
      in: header
      required: true
      description: A client-generated ID for request tracking and signature creation,
        unique per request. This is also used for idempotency control. Recommended
        128-bit UUID format.
    TimestampHeader:
      x-model-version: 1.0
      name: Timestamp
      schema: {type: integer, format: int64}
      in: header
      required: true
      description: Epoch timestamp in milliseconds in the request from a client system.
        Used for authorization header generation and time limit (5 minutes).
    ApiKeyHeader:
      x-model-version: 1.0
      name: Api-Key
      schema: {type: string}
      in: header
      required: true
      description: API key provided to the merchant associating the requests with
        the appropriate app in the Developer Portal.
  responses:
    BadRequest:
      x-model-version: 1.0
      description: The request cannot be validated.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: GATEWAY, code: '105', field: amount.currency, message: Invalid
                amount or currency}
    Unauthorized:
      x-model-version: 1.0
      description: The request was unauthorized.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: ApiKey and/or Authentication supplied are invalid.}
    NotFound:
      x-model-version: 1.0
      description: The requested resource does not exist.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Resource not found.}
    RequestTimeout:
      x-model-version: 1.0
      description: The request was timed out due to not receiving the request in time.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Broken client connectivity.}
    UnsupportedMediaType:
      x-model-version: 1.0
      description: The media type is not supported.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Media type is not supported.}
    TooEarly:
      x-model-version: 1.0
      description: The request was sent too early.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: GATEWAY, message: The request was sent too early.}
    TooManyRequest:
      x-model-version: 1.0
      description: Too many request were sent.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Request volume is too high.}
    ServerError:
      x-model-version: 1.0
      description: An unexpected internal server error occurred.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: GATEWAY, message: Error sending request to Transarmor.}
    ServiceUnavailable:
      x-model-version: 1.0
      description: The service was unavailable.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: APIM, message: Service unavailable.}
    GatewayTimeout:
      x-model-version: 1.0
      description: The request timed out while waiting for a response.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: GATEWAY, message: The request timed out while waiting for the
                  response.}
  schemas:
    ErrorResponse:
      x-model-version: 1.0
      description: Response containing an error object.
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        error:
          type: array
          items: {$ref: '#/components/schemas/Error'}
    Error:
      x-model-version: 1.0
      description: Error information.
      properties:
        type: {description: 'The type of response either from the HOST, GATEWAY, NETWORK,
            or APIM.', type: string, example: HOST}
        code: {description: 'Error response code from the host, gateway or network.',
          type: string}
        field: {description: The property or attribute associated with the error.,
          type: string, example: source.sourceType}
        message: {description: Information specific to a property or attribute., type: string,
          example: Missing type ID property.}
    GatewayResponse:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Gateway-Response.md">gateway
        response</a> details.
      properties:
        transactionType: {type: string, maxLength: 256, description: CHARGE}
        transactionState: {type: string, maxLength: 256, description: AUTHORIZED}
        transactionOrigin: {type: string, maxLength: 4, description: ECOM}
        transactionProcessingDetails: {$ref: '#/components/schemas/TransactionProcessingDetails'}
    TransactionProcessingDetails:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Gateway-Response.md#transaction-processing-details">transaction
        response</a> details.
      properties:
        orderId: {type: string, maxLength: 40, description: Order identifier returned
            in the parameter orderId from a Charge transaction., example: R-3b83fca8-2f9c-4364-86ae-12c91f1fcf16}
        transactionTimestamp: {type: string, format: date-time, description: 'Date
            and time the transaction occurred in YYYY-MM-DDThh:mm:ssZ format.', example: '2016-04-16T16:06:05Z'}
        apiTraceId: {type: string, maxLength: 32, description: Request identifier
            in API that can be used to request logs from the support team., example: rrt-0bd552c12342d3448-b-ea-1142-12938318-7'}
        clientRequestId: {type: string, maxLength: 64, description: Echoes back the
            value in the request header for tracking., example: 30dd879c-ee2f-11db-8314-0800200c9a66}
        transactionId: {type: string, maxLength: 40, description: Unique identifier
            for each transaction on the gateway. This value will be populated for
            the secondary transaction from the path., example: '838916029301'}
    CancelRequest:
      x-model-version: 1.0
      properties:
        amount: {$ref: '#/components/schemas/Amount'}
        source: {$ref: '#/components/schemas/Source'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
    Amount:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Amount-Components.md">Amount</a>
        object to support the request for payment.
      properties:
        total: {type: number, maximum: 1.0E18, description: Sub-component values must
            add up to total amount., example: '1.00'}
        currency: {type: string, maxLength: 3, description: ISO 3 Currency Format.,
          example: USD}
    Source:
      x-model-version: 1.0
      description: Payment <a href="../docs?path=docs/Resources/Guides/Payment-Sources/Source-Type.md">source</a>
        details.
      required: [sourceType]
      discriminator: {propertyName: sourceType}
      properties:
        sourceType:
          type: string
          maxLength: 256
          description: |
            Payment source type for a transaction request.

            Valid Values:
            * <a href="../docs?path=docs/Online-Mobile-Digital/Wallets-AltPayments/Apple-Pay/Apple-Pay.md">ApplePay</a>
            * <a href="../docs?path=docs/Resources/Guides/Payment-Sources/Payment-Card.md">PaymentCard</a>
            * <a href="../docs?path=docs/Resources/API-Documents/Payments_VAS/Payment-Token.md">PaymentToken</a>
          example: PaymentCard
    PaymentCard:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          encrypted: {type: boolean, description: Identifies if the card data is encrypted.,
            example: true}
          card: {$ref: '#/components/schemas/Card'}
          encryptedKey: {type: string, maxLength: 2000, description: Identifier required
              for decryption., example: NdCmVw5...}
          encryptedPin: {type: string, maxLength: 2000, description: 'Contains the
              encrypted PIN block for Debit, EBT, or Credit transactions.', example: F5f36kA...}
          beginningBalance: {type: number, maximum: 1.0E18, description: Beginning
              card balance., example: '1.00'}
          endingBalance: {type: number, maximum: 1.0E18, description: Ending card
              balance., example: '0.10'}
    Card:
      x-model-version: 1.0
      description: Common <a href="../docs?path=docs/Resources/Master-Data/Card.md">card</a>
        data for a transaction request and response.
      properties:
        cardData: {type: string, maxLength: 256, description: Card number or encrypted
            data., example: '4005550000000019'}
        nameOnCard: {type: string, maxLength: 256, description: Cardholder name.,
          example: Jane Smith}
        expirationMonth: {type: string, maxLength: 2, description: 2-digit expiration
            month., example: '05'}
        expirationYear: {type: string, maxLength: 4, description: 4-digit expiration
            year., example: '2035'}
        securityCode: {type: string, maxLength: 4, description: 'Card Security Code
            (CSC), Card Verification Data (CVD), Card Verification Number (CVN), Card
            Verification Value (CVV), Card Verification Code (CVC), Verification Code
            (V-code or V code), or Signature Panel Code (SPC).', example: '111'}
        securityCodeIndicator:
          type: string
          maxLength: 15
          description: |
            Indicates how the security code is passed.

            Valid Values:
            * NOT_SUPPORTED (Default)
            * PROVIDED
            * VALUE_ILLEGIBLE
            * NOT_AVAILABLE
          example: PROVIDED
        bin: {type: string, maxLength: 8, description: 'Bank Identification Number
            (BIN), the initial set of four to six numbers of the Primary Account Number
            (PAN). The BIN identifies the issuer and Level 2/3 qualifications.', example: '400555'}
        last4: {type: string, maxLength: 4, description: Contains the last four digits
            of the Primary Account Number (PAN)., example: '0019'}
        scheme: {type: string, maxLength: 256, description: Card brand., example: VISA}
    PaymentEMV:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          emvData: {type: string, description: EMV/Chip data is a series of "Tag/Length/Value"
              combination for chip card processing.}
          emvAuthData: {type: string, description: EMV/Chip response data is a series
              of "Tag/Length/Value" combination for chip card processing.}
          encryptedPin: {type: string}
          pinEncryptionWorkingKey: {type: string, description: ''}
          panSequenceNumber: {type: string, description: Contactless PAN sequence
              number to be sent as a mandatory parameter.}
          transactionSequenceCounter: {type: integer, description: Required for Canadian
              debit EMV transactions.}
          applicationIdentifier: {type: string, description: EMV/Contactless application
              ID used for Canadian debit routing.}
          cardAuthenticationResultsCode: {type: string}
    PrepaidCard:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          beginningBalance: {type: number, maximum: 1.0E18, description: Beginning
              card balance., example: '1.00'}
          endingBalance: {type: number, maximum: 1.0E18, description: Ending card
              balance., example: '0.10'}
    PaymentTrack:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          trackData: {type: string, description: Track data which is encrypted or
              plain.}
          encrypted: {type: boolean, description: If track data is encrypted.}
          encryptionType: {type: string, description: 'Encryption yype to be passed.
              Possible values: RSA, Verifone, TDES/DUKPT,On-Guard FPE, AES/Dukpt.
              Defaults to RSA.', example: RSA}
          keyId: {type: string, description: Needs to be passed if track data is encrypted.}
          deviceType: {type: string, description: 'Device type need to be sent for
              TDES and AES encrypted track data. Possible values: INGENICO, RPXXX,
              CLOVER, NCR, NCRTLV. Defaults to INGENICO.', example: INGENICO}
          target: {type: string, description: 'Target could be Track1, Track2, Both
              or Manual', example: Track2}
          track1Data: {type: string, description: ''}
          track2Data: {type: string, description: ''}
          card: {$ref: '#/components/schemas/Card'}
          region: {type: string, description: 'Region of debit origin. Canadian, German,
              etc'}
          encryptedKeyIndex: {type: string, description: ''}
          messageAuthenticationWorkingKey: {type: string, description: ''}
          messageEncryptionWorkingKey: {type: string, description: ''}
          encryptedPin: {type: string, description: ''}
          pinEncryptionWorkingKey: {type: string, description: ''}
          debitMACValue: {type: string, description: To confirm that the key data
              elements of the transaction have not been tampered with.}
          debitPinPadSerialNumber: {type: string, description: ''}
          debitTransactionCode: {type: string, description: ''}
          accountType: {type: string, description: ' '}
          applicationIdentifier: {type: string}
    PaymentToken:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          tokenData: {type: string, maxLength: 2048, description: Token created from
              the payment source., example: '1234123412340019'}
          PARId: {type: string, maxLength: 256, description: Payment Account Reference
              ID (PARID) for tokens. Ties transactions with multiple payment sources
              or tokens to a customer.}
          declineDuplicates: {type: boolean, description: Identifies if a duplicate
              create token should be rejected when one has already been created for
              the payment source., example: false}
          tokenSource: {type: string, maxLength: 256, description: Source for the
              Token Service Provider (TSP)., example: TRANSARMOR}
          card: {$ref: '#/components/schemas/Card'}
    PaymentSession:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          sessionId: {type: string, maxLength: 64, description: Session ID for the
              card captured., example: 123e4567-e89b-12d3-a456-556642440000}
    ApplePay:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        description: Apple Pay source.
        properties:
          data: {type: string, maxLength: 4000, description: 'Encrypted data. Payment
              data dictionary, base64 encoded as a string.', example: hbreWcQg980mUoUCfuCoripnHO210lvtizOFLV6PTw1DjooSwik778bH/qgK2pKelDTiiC8eXeiSwSIfrTPp6tq9x8Xo2H0KYAHCjLaJtoDdnjXm8QtC3m8MlcKAyYKp4hOW6tcPmy5rKVCKr1RFCDwjWd9zfVmp/au8hzZQtTYvnlje9t36xNy057eKmA1Bl1r9MFPxicTudVesSYMoAPS4IS+IlYiZzCPHzSLYLvFNiLFzP77qq7B6HSZ3dAZm244v8ep9EQdZVb1xzYdr6U+F5n1W+prS/fnL4+PVdiJK1Gn2qhiveyQX1XopLEQSbMDaW0wYhfDP9XM/+EDMLaXIKRiCtFry9nkbQZDjr2ti91KOAvzQf7XFbV+O8i60BSlI4/QRmLdKHmk/m0rDgQAoYLgUZ5xjKzXpJR9iW6RWuNYyaf9XdD8s2eB9aBQ=}
          header: {$ref: '#/components/schemas/AppleHeader'}
          signature: {type: string, maxLength: 4000, description: 'Signature of the
              payment and header data. The signature includes the signing certificate,
              its intermediate CA certificate, and information about the signing algorithm.
              Detached PKCS #7 signature, base64 encoded as string.', example: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFSMIIBTgIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTkwNjA3MTg0MTIxWjAvBgkqhkiG9w0BCQQxIgQg0PLaZU4YWZqtP9t/ygv9XIS/5ngU6FlGjpvyK6VFXVMwCgYIKoZIzj0EAwIERjBEAiBTNmQEPyc3aMm4Mwa0riD3dNdSc9aAhslj65Us8b3aKwIgNSc/y+CWpsr8qDln0fZK6ZD/LWPMxofQedlPy7Q6gY8AAAAAAAA=}
          version: {type: string, maxLength: 64, description: 'Specific protocol version
              supported by Apple. Version information about the payment token. The
              token uses EC_v1 for ECC-encrypted data, and RSA_v1 for RSA-encrypted
              data.', example: EC_v1}
          applicationData: {type: string, maxLength: 4000, description: 'Hash of the
              applicationData property of the original PKPaymentRequest object. If
              the value of that property is null, this key is omitted. SHA–256 hash
              hex encoded as a string.', example: VEVTVA==}
          applePayMerchantId: {type: string, maxLength: 256, description: Unique AppID
              registered in the Apple portal., example: merchant.com.fapi.tcoe.applepay}
          merchantPrivateKey: {type: string, maxLength: 256, description: Merchant
              private key in hex encoded format., example: MHcCAQEE234234234opsmasdsalsamdsad/asdsad/asdasd/asdAwEHoUQDQgAaslkdsad8asjdnlkm23leu9jclaskdas/masr4+/as34+4fh/sf64g/nX35fs5w==}
    AppleHeader:
      x-model-version: 1.0
      description: Additional version-dependent information used to decrypt and verify
        the payment.
      properties:
        applicationDataHash: {type: string, maxLength: 256, description: Encrypted
            app data., example: 94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2}
        ephemeralPublicKey: {type: string, maxLength: 256, description: 'Used to derive
            the actual public key. Ephemeral public key bytes. EC_v1 only. X.509 encoded
            key bytes, base64 encoded as a string.', example: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEvR+anQg6pElOsCnC3HIeNoEs2XMHQwxuy9plV1MfRRtIiHnQ6MyOS+1FQ7WZR2bVAnHFhPFaM9RYe7/bynvVvg==}
        publicKeyHash: {type: string, maxLength: 256, description: 'Hash of the X.509
            encoded public key bytes of the merchant’s certificate. SHA–256 hash,
            base64 encoded as a string.', example: KRsyW0NauLpN8OwKr+yeu4jl6APbgW05/TYo5eGW0bQ=}
        transactionId: {type: string, maxLength: 256, description: Transaction ID
            generated by the Apple device. A hexadecimal identifier as a string.,
          example: '31323334353637'}
    GooglePay:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        description: Google Pay source.
        properties:
          data: {type: string, maxLength: 4000, description: 'Encrypted data. Payment
              data dictionary, base64 encoded as a string.', example: '{"encryptedMessage":"NZF5Vs2YaI/t25L/1+dp6tuUOvra9pszs2antqcbHJbkjMMXZSR7innTFJxNR5DNnf4GheWIso8n8MA1q1zqWCU8MaK9bnNcHxvROpvfsU3SCCjkfG2k2M4/RYMjs+lxYW/nEtIIKVVOkdjAj4pI/Wth8xQXphn7hDNiyp9tIydmlPZVnzkXI6mVbpHbbkaCCD4TNPhFBDtx0VafqRjbb2Wt3EDazTx3dHdd+qVX5Xj8/BPb1cmwHWvrDw/dQRk/E0TsP+erLjhLaZ8l2EycxeUEZYqSX5w77S8vd3sw8WXuOCMsU8sx0Bs5IY7hohq67qNDxckP1fcBD4OYdGP6bumJR0J6pJxD5iRh5lFSjN6zNLRI77ylxWL6DwHoe/pPdCc0n6cV0Nt0RJMLjerr12BLuhv4bPQ3QB6jxnbt8JK/EndgIG8xpFyNkKlRUyxAKM22/ZSy45d6qtZIKLXRqDTr9JMk8uJ53QRZtQx8k9KkRZGC+GM2sD+Z75fxc0Yye7l6H0D8p5z1iEzWnYHxd0pmY/cOYEJxnOOdD573QmE6ikFcyaAw3XnCyul/EA\u003d\u003d","ephemeralPublicKey":"BAhnPIWrCXWv/45GFK0mNAvN9w+NFBs3tQji0wTUS2+hiFKsZujG5wRd4JXGmxhG+k3bglYk544ILBNdDpsAh+o\u003d","tag":"liBzKfGcO+FclHg7XuqRJxR/8EJShRp9/APab0Sho08\u003d"}'}
          signature: {type: string, maxLength: 2000, description: 'Verifies that the
              message came from Google, base64 encoded, and created with ECDSA by
              the intermediate signing key.', example: MEUCIFWTRWUZAOM5nfJC79FtJm56olnbwG4H5uWWxAUWAquiAiEA24j/BcOroeISsdJzYsyoVi8wzu4tnmKw+jdsGfuvPko=}
          version: {type: string, maxLength: 32, description: 'Specific protocol version
              supported by Google. Identifies the encryption or signing scheme under
              which the message is created. It allows the protocol to evolve over
              time, if needed.', example: ECv2}
          merchantId: {type: string, maxLength: 256, description: Single merchant
              identifier common for all Google Pay merchants., example: 676174657761793A666972737464617461}
          keyInfo:
            type: array
            items: {$ref: '#/components/schemas/KeyInfo'}
    KeyInfo:
      x-model-version: 1.0
      properties:
        merchantPrivateKey: {type: string, maxLength: 1024, description: 'Merchant
            private key, hex encoded.', example: DCEDF9AF72707BFD9C5231ECB9EAD040F3B4BA2AB608579736E37FDBA8884175566BDA410997B2575EA7E76AC54BBDB99DD0F74DD0A648BC0F6A2F06909E79A0F15D779F1A80CFC1EC9612476204C43A}
        signingVerificationKey: {type: string, maxLength: 1024, description: 'Signing
            verification key, base64 encoded.', example: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIsFro6K+IUxRr4yFTOTO+kFCCEvHo7B9IOMLxah6c977oFzX/beObH4a9OfosMHmft3JJZ6B3xpjIb8kduK4/A==}
    SamsungPay:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          data: {type: string, description: ''}
          version: {type: string, description: '100'}
    Payment3DS:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        description: 3DSecure source.
        properties:
          card: {$ref: '#/components/schemas/Card'}
          merchantIdentifier: {type: string, maxLength: 256, description: A unique
              ID used to identify the merchant. The merchant must use the value assigned
              by the acquirer., example: '1234567890123456'}
          version: {type: string, maxLength: 64, description: Specific protocol version
              supported by 3DS., example: 3DS2}
          cavv: {type: string, maxLength: 256, description: The Cardholder Authentication
              Verification Value (CAVV) is a cryptographic value derived by the issuer
              during payment authentication that can provide evidence of the results
              of payment authentication during an online purchase., example: AAABCZIhcQAAAABZlyFxAAAAAAA}
          xid: {type: string, maxLength: 256, description: 3DSecure/Verified by Visa
              value returned by Cardinal Commerce., example: '&x_MD5_Hash=abfaf1d1df004e3c27d5d2e05929b529&x_state=BC&x_reference_3=&x_auth_code=ET141870&x_fp_timestamp=1231877695'}
          verificationResponse: {type: string, maxLength: 256, description: Verification
              response message., example: PASSED_VALIDATION}
          authenticationAttemptResult: {type: string, maxLength: 256, description: Result
              of authentication attempt from Payer Authentication Response (PaRes).,
            example: uyt45t89cnwu3rhc98a4hterjklth4o8ctsrjzth4}
          channel:
            type: string
            maxLength: 32
            description: "\nValid Values: \n* MOBILE_APP\n* MOBILE_WEB\n* BROWSER_PC\n\
              * KIOSK\n* CONSOLE\n* 3DS_REQUESTOR_INITIATED\n"
    DecryptedWallet:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          cavv: {type: string, maxLength: 256, description: Cryptogram., example: 01ade6ae340005c681c3a1890418b53000020000}
          walletType: {type: string, maxLength: 256, description: 'Identifies the
              wallet as APPLE_PAY, GOOGLE_PAY, or SAMSUNG_PAY.', example: APPLE_PAY}
    TransactionBatch:
      x-model-version: 1.0
      properties:
        julianDay: {type: string, description: 'The day of the year the current batch
            was opened, 001-366 format.', example: '001'}
        batchNumber: {type: string, description: The batch number within the Julian
            day for this transaction. values range from 000001 through 000999., example: '000001'}
        transactionClass: {type: string, description: 'Code that indicates the transaction
            that was logged under, ranges from 1 through 4--Captured- approved, Captured-
            Authorised Only, Declinced, Batch Control.', example: '1'}
        sequenceNumber: {type: string, description: 'Sequence number of this transaction
            within the current batch, ranges from 000001 through 000999.', example: '000001'}
    TransactionDetails:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Transaction-Details.md">Transaction
        details</a> specific to each request based on business requirements.
      properties:
        approvalCode: {type: string, description: Reference number received as the
            result of a successful external authorization (e.g. by phone). The gateway
            needs this number for uniquely mapping a ForcedTicket transaction to a
            previously performed external authorization.}
        primaryTransactionId: {type: string, maxLength: 40, description: The unique
            identifier from the original transaction passed for a reauthorization
            and incremental authorization., example: '838916029301'}
        captureFlag: {type: boolean, description: Designates if the transaction should
            be captured. Auth (False) or Sale (True)., example: true}
        transactionCaptureType: {type: string, maxLength: 64, example: TCS}
        accountVerification: {type: boolean, description: Determines if verification
            should be performed on the payment type., example: 'false'}
        partialApproval: {type: string, description: Indicates if a partial approval
            is allowed., example: false}
        processingCode:
          type: string
          maxLength: 6
          description: |
            A required code is used in conjunction with the message type to define the type of transaction that is by the terminal to the host. See documentation for codes.

            Code Format:
            * Position 1-2 Transaction Type
            * Position 3–4 From Account
            * Position 5–6 To Account
          example: '000000'
        merchantTransactionId: {type: string, maxLength: 32, description: Merchant
            transaction ID (aka transaction reference ID)., example: '1343678765'}
        merchantOrderId: {type: string, maxLength: 32, description: Merchant order
            ID (aka customer reference number or purchase order number)., example: 845366457890-TODO}
        merchantInvoiceNumber: {type: string, maxLength: 12, description: Merchant
            invoice number (aka reference number)., example: '123890'}
        receiptEmail: {type: string, maxLength: 256, description: Email address to
            send a digital receipt., example: abc@gmail.com}
        paymentDescription: {type: string, maxLength: 1024, description: Payment description.}
        cardVerificationAmount: {type: number, maximum: 1.0E18, description: Amount
            used to verify the transaction. Some issuers do not allow $0.00 authorizations.,
          example: '0.02'}
        partiallyApprovedTransactionAmount: {type: number, maximum: 1.0E18, description: The
            partially approved transaction amount from the original request., example: '10.55'}
        splitTenderId: {type: string, maxLength: 1024, description: A partially-authorized
            transaction will generate a split tender ID. Subsequent transactions to
            complete the authorization should include the split tender ID so that
            all the transactions comprising that authorization can be linked., example: '12423434'}
        authorizationTypeIndicator:
          type: string
          maxLength: 11
          description: |
            Type of authorization requested.

            Valid Values:
            * INITIAL
            * REAUTH
            * DEFERRED
            * INCREMENTAL
          example: REAUTH
        duplicateTransactionCheckingIndicator: {type: boolean, description: Determines
            if duplicate transactions should be checked., example: false}
        primaryTransactionType:
          type: string
          maxLength: 14
          description: |
            Identifies the primary transaction type.

            Valid Values:
            * AUTH_ONLY
            * CHARGE_PREAUTH
            * CHARGE_SALE
            * CANCEL
            * REFUND
          example: CHARGE_SALE
        vaultFundingSource: {type: boolean, description: Identifies if the customer
            information was from the vault., example: false}
        deviceFingerprint:
          type: array
          items: {$ref: '#/components/schemas/DeviceFingerPrint'}
        splitShipment: {$ref: '#/components/schemas/SplitShipment'}
        reversalReasonCode:
          type: string
          maxLength: 22
          description: "Reason the merchant/customer requests for cancel (void).\n\
            \              \nValid Values:\n* VOID\n* TIMEOUT\n* EDIT_ERROR\n* MAC_VERIFICATION_ERROR\n\
            * MAC_SYNCH_ERROR\n* ENCRYPTION_ERROR\n* SYSTEM_ERROR\n* SUSPECTED_FRAUD\n"
          example: VOID
        physicalGoodsIndicator: {type: boolean, description: Identifies if physical
            goods were sold., example: false}
        authorizationSequence:
          type: string
          maxLength: 27
          description: |
            Type of authorization sequence requested.

            Valid Values:
            * AUTHORIZATION_ONLY - (default)
            * AUTHORIZATION_BEFORE_CANCEL
            * CANCEL_BEFORE_AUTHORIZATION
          example: CANCEL_BEFORE_AUTHORIZATION
        createToken: {type: boolean, description: Used to create a token on a charge
            transaction., example: true}
    SplitShipment:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Guides/Split-Shipment.md">Split
        shipment</a> information.
      properties:
        totalCount: {type: integer, maximum: 99, description: Identifies the number
            of shipments if the transaction will contain multiple shipments. Can be
            set during pre-auth or the first post-auth., example: 5}
        finalShipment: {type: boolean, description: Identifies the final shipment.,
          example: false}
    DeviceFingerPrint:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Transaction-Details.md">Device
        fingerprint</a> details for mobile transactions.
      properties:
        provider: {type: string, maxLength: 256, description: Device authentication
            utilized., example: InAuth}
        dataCapture: {$ref: '#/components/schemas/DataCapture'}
        dataStatic: {$ref: '#/components/schemas/DataStatic'}
        dataDynamic: {$ref: '#/components/schemas/DataDynamic'}
    DataCapture:
      x-model-version: 1.0
      description: Data capture details.
      properties:
        rawData: {type: string, maxLength: 256, description: Raw data from the data
            capture., example: aaaaaXREUVZGRlFY...aMV}
        dataEventId: {type: string, maxLength: 256, description: Unique ID for the
            data capture., example: BB8E4E92...Fz1E063113}
        captureTime: {type: string, format: date-time, maxLength: 20, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
    DataStatic:
      x-model-version: 1.0
      description: Static data details.
      properties:
        operatingSystem: {type: string, maxLength: 256, description: Device operating
            system (OS)., example: ANDROID}
        operatingSystemVersion: {type: string, maxLength: 256, description: Device
            operating system (OS) version., example: 5.1.1 Lollipop}
        model: {type: string, maxLength: 256, description: Device model., example: XYX-1}
        type: {type: string, maxLength: 256, description: Device type/name., example: Moto
            G}
        deviceId: {type: string, maxLength: 48, description: MAC of the device originating
            the transaction., example: '00:1B:44:11:3A:B7'}
        javaScriptEnabled: {type: boolean, maxLength: 8, description: Indicates if
            the device has JavaScript enabled., example: 'true'}
        javaEnabled: {type: boolean, maxLength: 8, description: Indicates if the device
            has Java enabled., example: 'true'}
        userAgent: {type: string, description: 'User agent data from the user device,
            truncated to 2048 bytes.', example: 'Mozilla/5.0 (Windows NT 6.1; Win64;
            x64; rv:47.0) Gecko/20100101 Firefox/47.0'}
        locale: {type: string, maxLength: 8, description: Language/Region code of
            user in IETF BCP47 format., example: en-US}
    DataDynamic:
      x-model-version: 1.0
      description: Dynamic data details.
      properties:
        latitude: {type: string, maxLength: 256, description: Cardholder current latitude
            GPS position., example: 13.0827 N}
        longitude: {type: string, maxLength: 256, description: Cardholder current
            longitude GPS position., example: 80.2707 E}
        ipAddress: {type: string, maxLength: 39, description: Device IP address.,
          example: 172.27.37.221}
        captureTime: {type: string, format: date-time, maxLength: 20, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        address: {$ref: '#/components/schemas/Address'}
    Address:
      x-model-version: 1.0
      description: Model for <a href="../docs?path=docs/Resources/Master-Data/Address.md">address</a>
        information.
      properties:
        street: {type: string, maxLength: 256, description: Street address., example: 123
            Main Street}
        houseNumberOrName: {type: string, maxLength: 256, description: 'Secondary
            address information, e.g. house number or name.', example: Apt 213}
        recipientNameOrAddress: {type: string, maxLength: 256, description: 'Tertiary
            address information e.g. recipient name, company name or address.', example: 'ATTN:
            Accounting Dept'}
        city: {type: string, maxLength: 256, description: City or locality., example: Sandy
            Springs}
        stateOrProvince: {type: string, maxLength: 256, description: State or province.,
          example: GA}
        postalCode: {type: string, maxLength: 10, description: ZIP code or postal
            code., example: 30303-0001}
        country: {type: string, maxLength: 256, description: 'ISO-3166-1 alpha-2,
            alpha-3, numeric or full country name.', example: US}
        addressHistory:
          type: string
          maxLength: 32
          description: |
            Update history of the address on file.

            Valid Values:
            * FIRST
            * LESS_THAN_30_DAYS
            * 30_60_DAYS
            * 60_90_DAYS
            * OVER_90_DAYS
          example: OVER_90_DAYS
    TransactionInteraction:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Transaction-Interaction.md">Transaction
        interaction</a> information based on where the transaction is acquired and
        the capabilities of the terminal or software.
      properties:
        origin:
          type: string
          maxLength: 4
          description: |
            The source of the transaction.

            Valid Values:
            * ECOM - Card not present (email, web, or mobile app)
            * MOTO - Mail order or telephone order
            * POS - Card present (retail face to face)
          example: ECOM
        posEntryMode:
          type: string
          maxLength: 22
          description: |
            An identifier used to indicate how the account number was entered on the transaction.

            Valid Values:
            * UNSPECIFIED - Default
            * MANUAL - Key entered
            * BARCODE - Barcode scan
            * OCR - Optical Character Reader
            * ICR_RELIABLE - Integrated Circuit Read (CVV data Reliable)
            * ICR_UNRELIABLE - Integrated Circuit Read (CVV data unreliable)
            * CONTACTLESS – Contactless Integrated Circuit Read (Reliable)
            * CONTACTLESS_MOBILE – Contactless Mobile Commerce or Discover InApp
            * CONTACTLESS_MAG_STRIPE – Contactless Magnetic Stripe Read
            * AMEX_WALLET - Amex Digital Wallet
            * MASTERCARD_REMOTE_CHIP – Mastercard remote chip entry
            * CREDENTIAL_ON_FILE – Credential on File
            * EMV_FALLBACK – EMV fallback to manual entry
            * EMV_FALLBACK_MAG - EMV fallback to Magnetic Strip entry
            * EMV_SWITCHED - EMV Transaction switched from Contactless to Contact entry
            * MAG_STRIPE – Magnetic Stripe - Track Read
          example: MANUAL
        posConditionCode:
          type: string
          maxLength: 26
          description: |
            An identifier used to indicate the transaction condition at the Point-of-Sale (POS).

            Valid Values:
            * CARD_PRESENT - Cardholder Present, Card Present
            * CARD_PRESENT_UNSPECIFIED – Cardholder Present, Unspecified
            * CARD_PRESENT_UNATTENDED – Cardholder Present, Unattended Device
            * CARD_PRESENT_FRAUD – Cardholder Present, Suspect Fraud
            * CARD_PRESENT_MAG_NOT_READ – Cardholder Present, Magnetic Stripe Could Not Be Read
            * CARD_PRESENT_IDENTIFIED - Cardholder Present, Identity Verified
            * CARD_NOT_PRESENT_RECURRING – Cardholder Not Present – Recurring
            * CARD_NOT_PRESENT_F2F - Cardholder Present, Card Not Present, Face 2 Face
            * CARD_NOT_PRESENT_MOTO – Cardholder Not Present, Mail Order/Telephone Order
            * CARD_NOT_PRESENT_ECOM – Cardholder Not Present, E-commerce
          example: CARD_NOT_PRESENT_ECOM
        responseCode: {type: string, description: Response data.}
        posData: {type: string, description: ' '}
        mobileInteraction:
          type: string
          maxLength: 12
          description: |
            Mobile method of interaction.

            Valid Values:
            * PHONE_NUMBER - Invoice received by phone number
            * QR_CODE - Invoice paid by scanning QR Code
          example: PHONE_NUMBER
        terminalEntryCapability: {type: string, description: ''}
        cardholderAuthenticationMethod: {type: string, description: ''}
        eciIndicator:
          type: string
          maxLength: 17
          description: "Electronic Commerce Indicator (ECI) is mandatory for all E-commerce\
            \ transactions.\n  \nValid Values:\n* SECURE_ECOM - Secure Electronic\
            \ Transaction\n* NON_AUTH_ECOM - Non-Authenticated Electronic Commerce\
            \ Transaction\n* CHANNEL_ENCRYPTED - Channel Encrypted Transaction\n*\
            \ NON_SECURE_ECOM - Non-Secure Electronic Commerce Transaction\n"
          example: SECURE_ECOM
        additionalPosInformation: {$ref: '#/components/schemas/AdditionalPosInformation'}
        attendedTerminalData: {type: string}
        terminalLocation: {type: string}
        cardholderActivatedTerminalInformation: {type: string}
        cardPresentAtPosIndicator: {type: string}
    AdditionalPosInformation:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Additional-POS-Info.md">Additional
        terminal</a> or software specific information.
      properties:
        posId: {type: string, description: 'Identifies the specific device or point
            of entry where the transaction originated. For example, pump number, lane
            number, terminal number, etc.', example: '1234'}
        cashierId: {type: string, description: Used to uniquely identify the merchant’s
            store cashier or employee accepting the transaction., example: '3456'}
        stan: {type: string, description: 'Contains the System Trace Audit Numbers
            (STAN) returned for a Discover incremental transaction. Note: This field
            has limited platform availability. For more information, please contact
            your account representative.', example: '123456'}
        posFormFactorIndicator: {type: string, description: 'This field is used to
            identify the form factor used at the POS for MasterCard PayPass transactions.
            Note: Some values from 00–19 may indicate not only the physical form factor
            but also other attributes such as device technology and payment app specifications.
            Values from 20–99 exclusively indicate the form factor only without also
            indicating the storage technology.', example: '02'}
        enhancedAuthorizationRequestIndicator: {type: string, description: ''}
        dataEntrySource:
          type: string
          maxLength: 32
          description: |
            Channel the consumer used to initiated transaction.

            Valid Values:
            * MOBILE_APP
            * MOBILE_WEB
            * BROWSER_PC
            * KIOSK
            * CONSOLE
            * 3DS_REQUESTOR_INITIATED
        transactionQualifier: {type: string, description: Used for Discover - Discover
            TransactionQualifier.}
        enhancedAuthorizationResponseIndicator: {type: string, description: Returns
            the authorization type (full or partial).}
        attendedTerminalData: {type: string, description: ''}
        cardPresentIndicator: {type: string, description: ''}
        terminalLocation: {type: string, description: ''}
        cardholderActivatedTerminalInformation: {type: string, description: ''}
        posHardwareAndSoftware: {$ref: '#/components/schemas/PosHardwareAndSoftware'}
        posFeatures: {$ref: '#/components/schemas/PosFeatures'}
    PosHardwareAndSoftware:
      x-model-version: 1.0
      description: Terminal hardware and software information.
      properties:
        hardwareVendorIdentifier: {type: string, description: 'Hardware vendor identifier
            assigned by Chase merchant services at time of certification, represented
            in ASCII HEX.'}
        softwareIdentifier: {type: string, description: 'Software Identifier assigned
            by Chase merchant services at time of certification, represented in ASCII
            HEX.'}
        hardwareSerialNumber: {type: string, description: 'Serial number of hardware
            device. The hardware serial # can be left-justified, space-filled.', example: V1234567}
        softwareApplicationName: {type: string, description: Name of software application.}
        softwareReleaseDate: {type: string, format: date, description: 'Date software
            was released, in YYYY-MM-DD format.', example: '2022-05-21'}
        softwareVersionNumber: {description: EPROM or version information related
            to the terminal software., type: string}
    PosFeatures:
      x-model-version: 1.0
      description: Terminal or software feature information.
      properties:
        hostProcessingPlatform: {type: string, description: Indicates which system
            is being used by the payment application and to what extent it is being
            used., example: TAS}
        messageFormatSupport: {type: string, description: Indicates which message
            format the application uses to communicate with the Chase merchant services
            PNS Host.}
        emvSupport: {type: string, description: Indicates the payment brands supported
            by the application for EMV processing. Required for any application that
            supports EMV processing.}
        peripheralInformation1: {type: string, description: Indicates the type of
            peripheral device attached to or being used by the payment application
            or point of sale device. Only the highest level of support should be indicated
            unless multiple devices are attached.}
        peripheralInformation2: {type: string, description: Reserved for future use.}
        communicationInformation1: {type: string, description: Indicates the methods
            of communication supported by the payment application. It is possible
            for an application to support more than one type of communication at a
            time., example: DIAL}
        communicationInformation2: {type: string, description: Reserved for future
            use.}
        industryInformation1: {type: string, description: Indicates the industries
            supported by the payment application. More than one industry can be indicated.}
        industryInformation2: {type: string, description: Reserved for future use.}
        classAndComplianceCertification: {type: string, description: 'Indicates the
            type of application or device sending the transaction, Class A or Class
            B.', example: A}
        otherCapabilities: {type: string, description: 'Indicates whether the transaction
            originated from a mobile device that uses Chase merchant services’ mobile
            payment gateway or originated from a device that does not use Chase merchant
            services’ Mobile Payment Gateway. Note: It is required for merchants to
            send the appropriate information in this element in the case where a mobile
            terminal is supported.'}
    MerchantDetails:
      x-model-version: 1.0
      description: Used to pass <a href="../docs?path=docs/Resources/Master-Data/Merchant-Details.md">merchant</a>
        specific data during the transaction.
      properties:
        tokenType: {type: string, maxLength: 64, description: Specific token type
            assigned to the merchant., example: TRANSARMOR}
        storeId: {type: string, maxLength: 1024, description: An optional outlet ID
            for clients that support multiple stores in the same app., example: '12345'}
        siteId: {type: string, maxLength: 1024, description: The location ID or number
            used to identify the unique site and merchant., example: CA123456}
        terminalId: {type: string, maxLength: 1024, description: 'Identifies the specific
            device or point of entry where the transaction originated. For example:
            pump number, lane number, terminal number, etc.', example: '12'}
        merchantId: {type: string, maxLength: 16, description: A unique ID used to
            identify the merchant. The merchant must use the value assigned by the
            acquirer., example: '1234567890123456'}
        alternateMerchantId: {type: string, maxLength: 16, description: 'Alternate
            ID assigned to a merchant based on a value added service (Prepaid Cards,
            TeleCheck, etc.). For additional information regarding the Alternate Merchant
            ID, please contact your account representative.', example: '12345678'}
        promotionCode: {type: string, maxLength: 1024, description: Promotion code.,
          example: ABCD1234}
        mcc: {type: string, maxLength: 4, description: The merchant category code
            (MCC) is an industry standard four-digit number used to classify a business
            by the type of goods or services it provides., example: '4457'}
    ProcessorResponseDetails:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md">processor
        response</a> details.
      properties:
        approvalStatus: {type: string, description: Final status of the transaction.,
          example: APPROVED}
        approvalCode: {type: string, description: Approval code from the processor.,
          example: OK3483}
        authenticationResponseCode: {type: string, description: Response code from
            authentication.}
        referenceNumber: {type: string, description: Transaction reference number.,
          example: 845366457890-TODO}
        schemeTransactionId: {type: string, description: Brand transaction ID., example: '019078743804756'}
        networkOriginalAmount: {type: number, maximum: 1.0E18, description: Network
            original amount, example: '100.50'}
        feeProgramIndicator: {type: string, description: Contains the Fee Program
            Indicator (FPI) code that may be returned on Debit or PLDebit transaction
            response., example: '123'}
        processor: {type: string, maxLength: 256, description: Card processor., example: fiserv}
        responseCode: {type: string, description: Normalized transaction response
            code from the gateway (Commerce Hub Response)., example: '00000'}
        responseMessage: {type: string, description: Normalized transaction message
            from the gateway (Commerce Hub Response)., example: APPROVAL}
        hostResponseCode: {type: string, description: Endpoint or issuer response
            code., example: '00'}
        hostResponseMessage: {type: string, description: Endpoint or issuer response
            message., example: APPROVAL}
        localTimestamp: {type: string, format: date-time, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        bankAssociationDetails: {$ref: '#/components/schemas/BankAssociationDetails'}
    BankAssociationDetails:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md#bank-association-details">Bank
        association</a> response details.
      properties:
        associationResponseCode: {type: string, maxLength: 32, description: Bank response
            code., example: '000'}
        transactionTimestamp: {type: string, format: date-time, maxLength: 64, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        transactionReferenceInformation: {type: string, maxLength: 256, description: Transaction
            reference information., example: ''}
        avsSecurityCodeResponse: {$ref: '#/components/schemas/AvsSecurityCodeResponse'}
    AvsSecurityCodeResponse:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md#address-and-security-code-response">Address
        and Security Code</a> verification response details.
      properties:
        streetMatch: {type: string, maxLength: 8, description: AVS street address
            result message., example: MATCH}
        postalCodeMatch: {type: string, maxLength: 8, description: AVS postal code
            result message., example: MATCH}
        securityCodeMatch: {type: string, maxLength: 8, description: Security code
            result message., example: MATCH}
        association: {$ref: '#/components/schemas/Association'}
    Association:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md#association-response">Bank
        association</a> security response details.
      properties:
        avsCode: {type: string, maxLength: 32, description: Bank AVS response code.,
          example: YY}
        securityCodeResponse: {type: string, maxLength: 32, description: Bank security
            code response., example: M}
        cardholderNameResponse: {type: string, maxLength: 32, description: 'Cardholder
            name response, if supported by card type.', example: '1'}
    NetworkDetails:
      x-model-version: 1.0
      description: Contains the authorization <a href="../docs?path=docs/Resources/Master-Data/Network-Details.md">network
        response</a> details.
      properties:
        partialAuthDetails: {$ref: '#/components/schemas/PartialAuthDetails'}
        network: {type: string, maxLength: 64, description: Processing card network.,
          example: VISA}
        debitNetworkId: {type: string, maxLength: 64, description: Network ID for
            the debit component., example: '123456'}
        transactionSequence: {type: string, maxLength: 64, description: Transaction
            specific data that may be returned in response messages., example: '1123456'}
        systemTrace: {type: string, maxLength: 64, description: Original trace number
            that was returned in an authorization response., example: '123456789'}
        authorizationCharacteristicsIndicator:
          type: string
          maxLength: 23
          description: |
            Code used for qualification in the Custom Payment Service (CPS) program as defined by Visa. Upon evaluation, the code may be changed in the response message if provided by Visa.

            Valid Values:
            * CARD_NOT_PRESENT – Card not present trasaction (preferred customer only e.g. Lodging or Auto Rental)
            * INCREMENT – Incremental Authorization
            * REQUEST_PARTICIPATION – Transaction requests participation
            * CARD_NOT_PRESENT_NO_AVS – Card not present, AVS not required
          example: CARD_NOT_PRESENT
        VISABID: {type: string, maxLength: 128, description: The Business Identifier
            (BID) provided by Visa to Third Party Servicers (TPS)., example: ''}
        VISAAUR: {type: string, maxLength: 128, description: Agent Unique Account
            Result (AUAR) provided by Visa to Third Party Servicers (TPS) in 12 hex
            digit format., example: 12345AD89012}
        networkResponseCode: {type: string, maxLength: 16, description: Debit network
            response code., example: '00'}
    PartialAuthDetails:
      x-model-version: 1.0
      description: Partial authorization response details.
      properties:
        interchangeComplianceIndicator: {type: string, description: A code to indicate
            that Mastercard interchange compliance data was provided for this transaction
            and if any other special Mastercard authorization requirements were met.,
          example: A}
        bankNetRefNumber: {type: string, description: A Mastercard generated identifier
            for each original authorization request. Reference number assigned by
            Mastercard to each authorization message., example: ''}
        bankNetDate: {type: string, format: date, description: A Mastercard generated
            date for this transaction in YYYY-MM-DD format., example: '2022-05-21'}
        cvcIndicator: {type: string, description: Indicates the CVC response data.,
          example: Y}
        partialAuthTransactionId: {type: string, description: Generated identifier
            unique for each original authorization request., example: ''}
        validationCode: {type: string, description: A code calculated by Visa to ensure
            that the fields present in the authorization are also present in the clearing
            record., example: ''}
        totalAuthAmount: {type: string, description: Total amount authorized., example: '1.00'}
        downgradeReason: {type: string, description: Downgrade reason as supplied
            by Visa., example: ACCOUNT_NUMBER_MISSING}
        creditAuthType: {type: string, description: Indicates the type of authorization
            required., example: DISCOVER}
        authScore: {type: string, description: The auth score returned for the transaction.,
          example: ''}
    StoredCredentials:
      x-model-version: 1.0
      description: Used to initiate an initial or subsequent <a href="../docs?path=docs/Resources/Guides/Stored-Credentials.md">stored
        credentials</a> transaction.
      properties:
        scheduled: {type: boolean, description: Indicator if this is a scheduled transaction.,
          example: true}
        initiator:
          type: string
          maxLength: 11
          description: |
            Indicates whether it is a merchant-initiated or explicitly consented to by card holder.

            Valid Values:
            * MERCHANT
            * CARD_HOLDER
          example: MERCHANT
        sequence:
          type: string
          maxLength: 10
          description: |
            Indicates if the transaction is first or subsequent.

            Valid Values:
            * FIRST
            * SUBSEQUENT
            * SINGLE
          example: FIRST
        schemeReferenceTransactionId: {type: string, maxLength: 256, description: The
            transaction ID received from the issuer for the initial transaction. May
            be required if sequence is subsequent., example: '54231235467'}
        networkOriginalAmount: {type: number, maximum: 1.0E18, description: 'Original
            transaction amount, required for Discover card on file transactions.',
          example: '9.66'}
        originationDate: {type: string, format: date, maxLength: 10, description: 'Date
            the customer account was created with merchant, in YYYY-MM-DD format.',
          example: '2020-11-20'}
        accountAge:
          type: string
          maxLength: 32
          description: "Indicator on the age of customer account with merchant.\n\n\
            Valid Values: \n* GUEST\n* NEW_ACCOUNT\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n\
            * 60_90_DAYS\n* OVER_90_DAYS\n"
          example: 'GUEST '
        count: {type: integer, description: Number of cards on file with this account.,
          example: '1'}
        lastUpdated:
          type: string
          maxLength: 32
          description: "Age of most recent card add/modify.\n\nValid Values: \n* NEVER\n\
            * NOW\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n* Over 60 DAYS\n"
          example: NEVER
        age:
          type: string
          maxLength: 32
          description: "Indicator on the age of this payment card on file with merchant.\n\
            \  \nValid Values: \n* GUEST\n* NEW_ACCOUNT\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n\
            * 60_90_DAYS\n* OVER_90_DAYS\n"
          example: GUEST
        attempts: {type: integer, description: Number of attempts to add a payment
            card in prior 24 hours., example: '1'}
        accountPasswordReset:
          type: string
          maxLength: 32
          description: "Indicator of the last time the account password was reset.\n\
            \nValid Values: \n* NEVER\n* NOW\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n\
            * 60_90_DAYS\n* OVER_90_DAYS\n"
          example: 'NEVER '
        sixMonthTransactionCount: {type: integer, description: Number of transaction
            on this account in prior 6 months., example: '5'}
        twentyFourHourTransactionCount: {type: integer, description: Number of transaction
            on this account in prior 24 hours., example: '1'}
        retryAttempts: {type: integer, description: Number of retry attempt if the
            initial transaction was unsuccessful., example: '0'}
    CancelResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        source: {$ref: '#/components/schemas/Source'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        paymentReceipt: {$ref: '#/components/schemas/PaymentReceipt'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
    PaymentReceipt:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Payment-Receipt.md">Payment
        receipt</a> response details.
      properties:
        approvedAmount: {$ref: '#/components/schemas/Amount'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        merchantName: {type: string, maxLength: 1024, description: Name of the merchant
            returned from boarded account or dynamic descriptor.}
        merchantAddress: {type: string, maxLength: 1024, description: Street address
            of the merchant returned from boarded account or dynamic descriptor.}
        merchantCity: {type: string, maxLength: 256, description: City of the merchant
            returned from boarded account or dynamic descriptor.}
        merchantStateOrProvince: {type: string, maxLength: 256, description: State
            or Province of the merchant returned from boarded account or dynamic descriptor.}
        merchantCountry: {type: string, maxLength: 256, description: Country of the
            merchant returned from boarded account or dynamic descriptor.}
        merchantURL: {type: string, maxLength: 256, description: Merchant URL returned
            from boarded account.}
        merchantPostalCode: {type: string, maxLength: 10, description: Postal code
            of the merchant returned from boarded account or dynamic descriptor.}
   required: true
      description: API key provided to the merchant associating the requests with
        the appropriate app in the Developer Portal.
  responses:
    BadRequest:
      x-model-version: 1.0
      description: The request cannot be validated.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: GATEWAY, code: '105', field: amount.currency, message: Invalid
                amount or currency}
    Unauthorized:
      x-model-version: 1.0
      description: The request was unauthorized.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: ApiKey and/or Authentication supplied are invalid.}
    NotFound:
      x-model-version: 1.0
      description: The requested resource does not exist.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Resource not found.}
    RequestTimeout:
      x-model-version: 1.0
      description: The request was timed out due to not receiving the request in time.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Broken client connectivity.}
    UnsupportedMediaType:
      x-model-version: 1.0
      description: The media type is not supported.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Media type is not supported.}
    TooEarly:
      x-model-version: 1.0
      description: The request was sent too early.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: GATEWAY, message: The request was sent too early.}
    TooManyRequest:
      x-model-version: 1.0
      description: Too many request were sent.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
            error:
            - {type: APIM, message: Request volume is too high.}
    ServerError:
      x-model-version: 1.0
      description: An unexpected internal server error occurred.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: GATEWAY, message: Error sending request to Transarmor.}
    ServiceUnavailable:
      x-model-version: 1.0
      description: The service was unavailable.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: APIM, message: Service unavailable.}
    GatewayTimeout:
      x-model-version: 1.0
      description: The request timed out while waiting for a response.
      content:
        application/json:
          schema: {$ref: '#/components/schemas/ErrorResponse'}
          example:
            gatewayResponse:
              transactionProcessingDetails: {apiTraceId: 7027b61dbf7645399d204dbfa0de0870,
                clientRequestId: 9bb0664a21fc48e3a1cef1f067fced3f}
              error:
              - {type: GATEWAY, message: The request timed out while waiting for the
                  response.}
  schemas:
    ErrorResponse:
      x-model-version: 1.0
      description: Response containing an error object.
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        error:
          type: array
          items: {$ref: '#/components/schemas/Error'}
    Error:
      x-model-version: 1.0
      description: Error information.
      properties:
        type: {description: 'The type of response either from the HOST, GATEWAY, NETWORK,
            or APIM.', type: string, example: HOST}
        code: {description: 'Error response code from the host, gateway or network.',
          type: string}
        field: {description: The property or attribute associated with the error.,
          type: string, example: source.sourceType}
        message: {description: Information specific to a property or attribute., type: string,
          example: Missing type ID property.}
    GatewayResponse:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Gateway-Response.md">gateway
        response</a> details.
      properties:
        transactionType: {type: string, maxLength: 256, description: CHARGE}
        transactionState: {type: string, maxLength: 256, description: AUTHORIZED}
        transactionOrigin: {type: string, maxLength: 4, description: ECOM}
        transactionProcessingDetails: {$ref: '#/components/schemas/TransactionProcessingDetails'}
    TransactionProcessingDetails:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Gateway-Response.md#transaction-processing-details">transaction
        response</a> details.
      properties:
        orderId: {type: string, maxLength: 40, description: Order identifier returned
            in the parameter orderId from a Charge transaction., example: R-3b83fca8-2f9c-4364-86ae-12c91f1fcf16}
        transactionTimestamp: {type: string, format: date-time, description: 'Date
            and time the transaction occurred in YYYY-MM-DDThh:mm:ssZ format.', example: '2016-04-16T16:06:05Z'}
        apiTraceId: {type: string, maxLength: 32, description: Request identifier
            in API that can be used to request logs from the support team., example: rrt-0bd552c12342d3448-b-ea-1142-12938318-7'}
        clientRequestId: {type: string, maxLength: 64, description: Echoes back the
            value in the request header for tracking., example: 30dd879c-ee2f-11db-8314-0800200c9a66}
        transactionId: {type: string, maxLength: 40, description: Unique identifier
            for each transaction on the gateway. This value will be populated for
            the secondary transaction from the path., example: '838916029301'}
    CancelRequest:
      x-model-version: 1.0
      properties:
        amount: {$ref: '#/components/schemas/Amount'}
        source: {$ref: '#/components/schemas/Source'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        transactionInteraction: {$ref: '#/components/schemas/TransactionInteraction'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
        storedCredentials: {$ref: '#/components/schemas/StoredCredentials'}
    Amount:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Amount-Components.md">Amount</a>
        object to support the request for payment.
      properties:
        total: {type: number, maximum: 1.0E18, description: Sub-component values must
            add up to total amount., example: '1.00'}
        currency: {type: string, maxLength: 3, description: ISO 3 Currency Format.,
          example: USD}
    Source:
      x-model-version: 1.0
      description: Payment <a href="../docs?path=docs/Resources/Guides/Payment-Sources/Source-Type.md">source</a>
        details.
      required: [sourceType]
      discriminator: {propertyName: sourceType}
      properties:
        sourceType:
          type: string
          maxLength: 256
          description: |
            Payment source type for a transaction request.

            Valid Values:
            * <a href="../docs?path=docs/Online-Mobile-Digital/Wallets-AltPayments/Apple-Pay/Apple-Pay.md">ApplePay</a>
            * <a href="../docs?path=docs/Resources/Guides/Payment-Sources/Payment-Card.md">PaymentCard</a>
            * <a href="../docs?path=docs/Resources/API-Documents/Payments_VAS/Payment-Token.md">PaymentToken</a>
          example: PaymentCard
    PaymentCard:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          encrypted: {type: boolean, description: Identifies if the card data is encrypted.,
            example: true}
          card: {$ref: '#/components/schemas/Card'}
          encryptedKey: {type: string, maxLength: 2000, description: Identifier required
              for decryption., example: NdCmVw5...}
          encryptedPin: {type: string, maxLength: 2000, description: 'Contains the
              encrypted PIN block for Debit, EBT, or Credit transactions.', example: F5f36kA...}
          beginningBalance: {type: number, maximum: 1.0E18, description: Beginning
              card balance., example: '1.00'}
          endingBalance: {type: number, maximum: 1.0E18, description: Ending card
              balance., example: '0.10'}
    Card:
      x-model-version: 1.0
      description: Common <a href="../docs?path=docs/Resources/Master-Data/Card.md">card</a>
        data for a transaction request and response.
      properties:
        cardData: {type: string, maxLength: 256, description: Card number or encrypted
            data., example: '4005550000000019'}
        nameOnCard: {type: string, maxLength: 256, description: Cardholder name.,
          example: Jane Smith}
        expirationMonth: {type: string, maxLength: 2, description: 2-digit expiration
            month., example: '05'}
        expirationYear: {type: string, maxLength: 4, description: 4-digit expiration
            year., example: '2035'}
        securityCode: {type: string, maxLength: 4, description: 'Card Security Code
            (CSC), Card Verification Data (CVD), Card Verification Number (CVN), Card
            Verification Value (CVV), Card Verification Code (CVC), Verification Code
            (V-code or V code), or Signature Panel Code (SPC).', example: '111'}
        securityCodeIndicator:
          type: string
          maxLength: 15
          description: |
            Indicates how the security code is passed.

            Valid Values:
            * NOT_SUPPORTED (Default)
            * PROVIDED
            * VALUE_ILLEGIBLE
            * NOT_AVAILABLE
          example: PROVIDED
        bin: {type: string, maxLength: 8, description: 'Bank Identification Number
            (BIN), the initial set of four to six numbers of the Primary Account Number
            (PAN). The BIN identifies the issuer and Level 2/3 qualifications.', example: '400555'}
        last4: {type: string, maxLength: 4, description: Contains the last four digits
            of the Primary Account Number (PAN)., example: '0019'}
        scheme: {type: string, maxLength: 256, description: Card brand., example: VISA}
    PaymentEMV:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          emvData: {type: string, description: EMV/Chip data is a series of "Tag/Length/Value"
              combination for chip card processing.}
          emvAuthData: {type: string, description: EMV/Chip response data is a series
              of "Tag/Length/Value" combination for chip card processing.}
          encryptedPin: {type: string}
          pinEncryptionWorkingKey: {type: string, description: ''}
          panSequenceNumber: {type: string, description: Contactless PAN sequence
              number to be sent as a mandatory parameter.}
          transactionSequenceCounter: {type: integer, description: Required for Canadian
              debit EMV transactions.}
          applicationIdentifier: {type: string, description: EMV/Contactless application
              ID used for Canadian debit routing.}
          cardAuthenticationResultsCode: {type: string}
    PrepaidCard:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          beginningBalance: {type: number, maximum: 1.0E18, description: Beginning
              card balance., example: '1.00'}
          endingBalance: {type: number, maximum: 1.0E18, description: Ending card
              balance., example: '0.10'}
    PaymentTrack:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          trackData: {type: string, description: Track data which is encrypted or
              plain.}
          encrypted: {type: boolean, description: If track data is encrypted.}
          encryptionType: {type: string, description: 'Encryption yype to be passed.
              Possible values: RSA, Verifone, TDES/DUKPT,On-Guard FPE, AES/Dukpt.
              Defaults to RSA.', example: RSA}
          keyId: {type: string, description: Needs to be passed if track data is encrypted.}
          deviceType: {type: string, description: 'Device type need to be sent for
              TDES and AES encrypted track data. Possible values: INGENICO, RPXXX,
              CLOVER, NCR, NCRTLV. Defaults to INGENICO.', example: INGENICO}
          target: {type: string, description: 'Target could be Track1, Track2, Both
              or Manual', example: Track2}
          track1Data: {type: string, description: ''}
          track2Data: {type: string, description: ''}
          card: {$ref: '#/components/schemas/Card'}
          region: {type: string, description: 'Region of debit origin. Canadian, German,
              etc'}
          encryptedKeyIndex: {type: string, description: ''}
          messageAuthenticationWorkingKey: {type: string, description: ''}
          messageEncryptionWorkingKey: {type: string, description: ''}
          encryptedPin: {type: string, description: ''}
          pinEncryptionWorkingKey: {type: string, description: ''}
          debitMACValue: {type: string, description: To confirm that the key data
              elements of the transaction have not been tampered with.}
          debitPinPadSerialNumber: {type: string, description: ''}
          debitTransactionCode: {type: string, description: ''}
          accountType: {type: string, description: ' '}
          applicationIdentifier: {type: string}
    PaymentToken:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          tokenData: {type: string, maxLength: 2048, description: Token created from
              the payment source., example: '1234123412340019'}
          PARId: {type: string, maxLength: 256, description: Payment Account Reference
              ID (PARID) for tokens. Ties transactions with multiple payment sources
              or tokens to a customer.}
          declineDuplicates: {type: boolean, description: Identifies if a duplicate
              create token should be rejected when one has already been created for
              the payment source., example: false}
          tokenSource: {type: string, maxLength: 256, description: Source for the
              Token Service Provider (TSP)., example: TRANSARMOR}
          card: {$ref: '#/components/schemas/Card'}
    PaymentSession:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          sessionId: {type: string, maxLength: 64, description: Session ID for the
              card captured., example: 123e4567-e89b-12d3-a456-556642440000}
    ApplePay:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        description: Apple Pay source.
        properties:
          data: {type: string, maxLength: 4000, description: 'Encrypted data. Payment
              data dictionary, base64 encoded as a string.', example: hbreWcQg980mUoUCfuCoripnHO210lvtizOFLV6PTw1DjooSwik778bH/qgK2pKelDTiiC8eXeiSwSIfrTPp6tq9x8Xo2H0KYAHCjLaJtoDdnjXm8QtC3m8MlcKAyYKp4hOW6tcPmy5rKVCKr1RFCDwjWd9zfVmp/au8hzZQtTYvnlje9t36xNy057eKmA1Bl1r9MFPxicTudVesSYMoAPS4IS+IlYiZzCPHzSLYLvFNiLFzP77qq7B6HSZ3dAZm244v8ep9EQdZVb1xzYdr6U+F5n1W+prS/fnL4+PVdiJK1Gn2qhiveyQX1XopLEQSbMDaW0wYhfDP9XM/+EDMLaXIKRiCtFry9nkbQZDjr2ti91KOAvzQf7XFbV+O8i60BSlI4/QRmLdKHmk/m0rDgQAoYLgUZ5xjKzXpJR9iW6RWuNYyaf9XdD8s2eB9aBQ=}
          header: {$ref: '#/components/schemas/AppleHeader'}
          signature: {type: string, maxLength: 4000, description: 'Signature of the
              payment and header data. The signature includes the signing certificate,
              its intermediate CA certificate, and information about the signing algorithm.
              Detached PKCS #7 signature, base64 encoded as string.', example: MIAGCSqGSIb3DQEHAqCAMIACAQExDzANBglghkgBZQMEAgEFADCABgkqhkiG9w0BBwEAAKCAMIIB0zCCAXkCAQEwCQYHKoZIzj0EATB2MQswCQYDVQQGEwJVUzELMAkGA1UECAwCTkoxFDASBgNVBAcMC0plcnNleSBDaXR5MRMwEQYDVQQKDApGaXJzdCBEYXRhMRIwEAYDVQQLDAlGaXJzdCBBUEkxGzAZBgNVBAMMEmQxZHZ0bDEwMDAuMWRjLmNvbTAeFw0xNTA3MjMxNjQxMDNaFw0xOTA3MjIxNjQxMDNaMHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tMFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAErnHhPM18HFbOomJMUiLiPL7nrJuWvfPy0Gg3xsX3m8q0oWhTs1QcQDTT+TR3yh4sDRPqXnsTUwcvbrCOzdUEeTAJBgcqhkjOPQQBA0kAMEYCIQDrC1z2JTx1jZPvllpnkxPEzBGk9BhTCkEB58j/Cv+sXQIhAKGongoz++3tJroo1GxnwvzK/Qmc4P1K2lHoh9biZeNhAAAxggFSMIIBTgIBATB7MHYxCzAJBgNVBAYTAlVTMQswCQYDVQQIDAJOSjEUMBIGA1UEBwwLSmVyc2V5IENpdHkxEzARBgNVBAoMCkZpcnN0IERhdGExEjAQBgNVBAsMCUZpcnN0IEFQSTEbMBkGA1UEAwwSZDFkdnRsMTAwMC4xZGMuY29tAgEBMA0GCWCGSAFlAwQCAQUAoGkwGAYJKoZIhvcNAQkDMQsGCSqGSIb3DQEHATAcBgkqhkiG9w0BCQUxDxcNMTkwNjA3MTg0MTIxWjAvBgkqhkiG9w0BCQQxIgQg0PLaZU4YWZqtP9t/ygv9XIS/5ngU6FlGjpvyK6VFXVMwCgYIKoZIzj0EAwIERjBEAiBTNmQEPyc3aMm4Mwa0riD3dNdSc9aAhslj65Us8b3aKwIgNSc/y+CWpsr8qDln0fZK6ZD/LWPMxofQedlPy7Q6gY8AAAAAAAA=}
          version: {type: string, maxLength: 64, description: 'Specific protocol version
              supported by Apple. Version information about the payment token. The
              token uses EC_v1 for ECC-encrypted data, and RSA_v1 for RSA-encrypted
              data.', example: EC_v1}
          applicationData: {type: string, maxLength: 4000, description: 'Hash of the
              applicationData property of the original PKPaymentRequest object. If
              the value of that property is null, this key is omitted. SHA–256 hash
              hex encoded as a string.', example: VEVTVA==}
          applePayMerchantId: {type: string, maxLength: 256, description: Unique AppID
              registered in the Apple portal., example: merchant.com.fapi.tcoe.applepay}
          merchantPrivateKey: {type: string, maxLength: 256, description: Merchant
              private key in hex encoded format., example: MHcCAQEE234234234opsmasdsalsamdsad/asdsad/asdasd/asdAwEHoUQDQgAaslkdsad8asjdnlkm23leu9jclaskdas/masr4+/as34+4fh/sf64g/nX35fs5w==}
    AppleHeader:
      x-model-version: 1.0
      description: Additional version-dependent information used to decrypt and verify
        the payment.
      properties:
        applicationDataHash: {type: string, maxLength: 256, description: Encrypted
            app data., example: 94ee059335e587e501cc4bf90613e0814f00a7b08bc7c648fd865a2af6a22cc2}
        ephemeralPublicKey: {type: string, maxLength: 256, description: 'Used to derive
            the actual public key. Ephemeral public key bytes. EC_v1 only. X.509 encoded
            key bytes, base64 encoded as a string.', example: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEvR+anQg6pElOsCnC3HIeNoEs2XMHQwxuy9plV1MfRRtIiHnQ6MyOS+1FQ7WZR2bVAnHFhPFaM9RYe7/bynvVvg==}
        publicKeyHash: {type: string, maxLength: 256, description: 'Hash of the X.509
            encoded public key bytes of the merchant’s certificate. SHA–256 hash,
            base64 encoded as a string.', example: KRsyW0NauLpN8OwKr+yeu4jl6APbgW05/TYo5eGW0bQ=}
        transactionId: {type: string, maxLength: 256, description: Transaction ID
            generated by the Apple device. A hexadecimal identifier as a string.,
          example: '31323334353637'}
    GooglePay:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        description: Google Pay source.
        properties:
          data: {type: string, maxLength: 4000, description: 'Encrypted data. Payment
              data dictionary, base64 encoded as a string.', example: '{"encryptedMessage":"NZF5Vs2YaI/t25L/1+dp6tuUOvra9pszs2antqcbHJbkjMMXZSR7innTFJxNR5DNnf4GheWIso8n8MA1q1zqWCU8MaK9bnNcHxvROpvfsU3SCCjkfG2k2M4/RYMjs+lxYW/nEtIIKVVOkdjAj4pI/Wth8xQXphn7hDNiyp9tIydmlPZVnzkXI6mVbpHbbkaCCD4TNPhFBDtx0VafqRjbb2Wt3EDazTx3dHdd+qVX5Xj8/BPb1cmwHWvrDw/dQRk/E0TsP+erLjhLaZ8l2EycxeUEZYqSX5w77S8vd3sw8WXuOCMsU8sx0Bs5IY7hohq67qNDxckP1fcBD4OYdGP6bumJR0J6pJxD5iRh5lFSjN6zNLRI77ylxWL6DwHoe/pPdCc0n6cV0Nt0RJMLjerr12BLuhv4bPQ3QB6jxnbt8JK/EndgIG8xpFyNkKlRUyxAKM22/ZSy45d6qtZIKLXRqDTr9JMk8uJ53QRZtQx8k9KkRZGC+GM2sD+Z75fxc0Yye7l6H0D8p5z1iEzWnYHxd0pmY/cOYEJxnOOdD573QmE6ikFcyaAw3XnCyul/EA\u003d\u003d","ephemeralPublicKey":"BAhnPIWrCXWv/45GFK0mNAvN9w+NFBs3tQji0wTUS2+hiFKsZujG5wRd4JXGmxhG+k3bglYk544ILBNdDpsAh+o\u003d","tag":"liBzKfGcO+FclHg7XuqRJxR/8EJShRp9/APab0Sho08\u003d"}'}
          signature: {type: string, maxLength: 2000, description: 'Verifies that the
              message came from Google, base64 encoded, and created with ECDSA by
              the intermediate signing key.', example: MEUCIFWTRWUZAOM5nfJC79FtJm56olnbwG4H5uWWxAUWAquiAiEA24j/BcOroeISsdJzYsyoVi8wzu4tnmKw+jdsGfuvPko=}
          version: {type: string, maxLength: 32, description: 'Specific protocol version
              supported by Google. Identifies the encryption or signing scheme under
              which the message is created. It allows the protocol to evolve over
              time, if needed.', example: ECv2}
          merchantId: {type: string, maxLength: 256, description: Single merchant
              identifier common for all Google Pay merchants., example: 676174657761793A666972737464617461}
          keyInfo:
            type: array
            items: {$ref: '#/components/schemas/KeyInfo'}
    KeyInfo:
      x-model-version: 1.0
      properties:
        merchantPrivateKey: {type: string, maxLength: 1024, description: 'Merchant
            private key, hex encoded.', example: DCEDF9AF72707BFD9C5231ECB9EAD040F3B4BA2AB608579736E37FDBA8884175566BDA410997B2575EA7E76AC54BBDB99DD0F74DD0A648BC0F6A2F06909E79A0F15D779F1A80CFC1EC9612476204C43A}
        signingVerificationKey: {type: string, maxLength: 1024, description: 'Signing
            verification key, base64 encoded.', example: MFkwEwYHKoZIzj0CAQYIKoZIzj0DAQcDQgAEIsFro6K+IUxRr4yFTOTO+kFCCEvHo7B9IOMLxah6c977oFzX/beObH4a9OfosMHmft3JJZ6B3xpjIb8kduK4/A==}
    SamsungPay:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          data: {type: string, description: ''}
          version: {type: string, description: '100'}
    Payment3DS:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        description: 3DSecure source.
        properties:
          card: {$ref: '#/components/schemas/Card'}
          merchantIdentifier: {type: string, maxLength: 256, description: A unique
              ID used to identify the merchant. The merchant must use the value assigned
              by the acquirer., example: '1234567890123456'}
          version: {type: string, maxLength: 64, description: Specific protocol version
              supported by 3DS., example: 3DS2}
          cavv: {type: string, maxLength: 256, description: The Cardholder Authentication
              Verification Value (CAVV) is a cryptographic value derived by the issuer
              during payment authentication that can provide evidence of the results
              of payment authentication during an online purchase., example: AAABCZIhcQAAAABZlyFxAAAAAAA}
          xid: {type: string, maxLength: 256, description: 3DSecure/Verified by Visa
              value returned by Cardinal Commerce., example: '&x_MD5_Hash=abfaf1d1df004e3c27d5d2e05929b529&x_state=BC&x_reference_3=&x_auth_code=ET141870&x_fp_timestamp=1231877695'}
          verificationResponse: {type: string, maxLength: 256, description: Verification
              response message., example: PASSED_VALIDATION}
          authenticationAttemptResult: {type: string, maxLength: 256, description: Result
              of authentication attempt from Payer Authentication Response (PaRes).,
            example: uyt45t89cnwu3rhc98a4hterjklth4o8ctsrjzth4}
          channel:
            type: string
            maxLength: 32
            description: "\nValid Values: \n* MOBILE_APP\n* MOBILE_WEB\n* BROWSER_PC\n\
              * KIOSK\n* CONSOLE\n* 3DS_REQUESTOR_INITIATED\n"
    DecryptedWallet:
      x-model-version: 1.0
      allOf:
      - {$ref: '#/components/schemas/Source'}
      - type: object
        properties:
          card: {$ref: '#/components/schemas/Card'}
          cavv: {type: string, maxLength: 256, description: Cryptogram., example: 01ade6ae340005c681c3a1890418b53000020000}
          walletType: {type: string, maxLength: 256, description: 'Identifies the
              wallet as APPLE_PAY, GOOGLE_PAY, or SAMSUNG_PAY.', example: APPLE_PAY}
    TransactionBatch:
      x-model-version: 1.0
      properties:
        julianDay: {type: string, description: 'The day of the year the current batch
            was opened, 001-366 format.', example: '001'}
        batchNumber: {type: string, description: The batch number within the Julian
            day for this transaction. values range from 000001 through 000999., example: '000001'}
        transactionClass: {type: string, description: 'Code that indicates the transaction
            that was logged under, ranges from 1 through 4--Captured- approved, Captured-
            Authorised Only, Declinced, Batch Control.', example: '1'}
        sequenceNumber: {type: string, description: 'Sequence number of this transaction
            within the current batch, ranges from 000001 through 000999.', example: '000001'}
    TransactionDetails:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Transaction-Details.md">Transaction
        details</a> specific to each request based on business requirements.
      properties:
        approvalCode: {type: string, description: Reference number received as the
            result of a successful external authorization (e.g. by phone). The gateway
            needs this number for uniquely mapping a ForcedTicket transaction to a
            previously performed external authorization.}
        primaryTransactionId: {type: string, maxLength: 40, description: The unique
            identifier from the original transaction passed for a reauthorization
            and incremental authorization., example: '838916029301'}
        captureFlag: {type: boolean, description: Designates if the transaction should
            be captured. Auth (False) or Sale (True)., example: true}
        transactionCaptureType: {type: string, maxLength: 64, example: TCS}
        accountVerification: {type: boolean, description: Determines if verification
            should be performed on the payment type., example: 'false'}
        partialApproval: {type: string, description: Indicates if a partial approval
            is allowed., example: false}
        processingCode:
          type: string
          maxLength: 6
          description: |
            A required code is used in conjunction with the message type to define the type of transaction that is by the terminal to the host. See documentation for codes.

            Code Format:
            * Position 1-2 Transaction Type
            * Position 3–4 From Account
            * Position 5–6 To Account
          example: '000000'
        merchantTransactionId: {type: string, maxLength: 32, description: Merchant
            transaction ID (aka transaction reference ID)., example: '1343678765'}
        merchantOrderId: {type: string, maxLength: 32, description: Merchant order
            ID (aka customer reference number or purchase order number)., example: 845366457890-TODO}
        merchantInvoiceNumber: {type: string, maxLength: 12, description: Merchant
            invoice number (aka reference number)., example: '123890'}
        receiptEmail: {type: string, maxLength: 256, description: Email address to
            send a digital receipt., example: abc@gmail.com}
        paymentDescription: {type: string, maxLength: 1024, description: Payment description.}
        cardVerificationAmount: {type: number, maximum: 1.0E18, description: Amount
            used to verify the transaction. Some issuers do not allow $0.00 authorizations.,
          example: '0.02'}
        partiallyApprovedTransactionAmount: {type: number, maximum: 1.0E18, description: The
            partially approved transaction amount from the original request., example: '10.55'}
        splitTenderId: {type: string, maxLength: 1024, description: A partially-authorized
            transaction will generate a split tender ID. Subsequent transactions to
            complete the authorization should include the split tender ID so that
            all the transactions comprising that authorization can be linked., example: '12423434'}
        authorizationTypeIndicator:
          type: string
          maxLength: 11
          description: |
            Type of authorization requested.

            Valid Values:
            * INITIAL
            * REAUTH
            * DEFERRED
            * INCREMENTAL
          example: REAUTH
        duplicateTransactionCheckingIndicator: {type: boolean, description: Determines
            if duplicate transactions should be checked., example: false}
        primaryTransactionType:
          type: string
          maxLength: 14
          description: |
            Identifies the primary transaction type.

            Valid Values:
            * AUTH_ONLY
            * CHARGE_PREAUTH
            * CHARGE_SALE
            * CANCEL
            * REFUND
          example: CHARGE_SALE
        vaultFundingSource: {type: boolean, description: Identifies if the customer
            information was from the vault., example: false}
        deviceFingerprint:
          type: array
          items: {$ref: '#/components/schemas/DeviceFingerPrint'}
        splitShipment: {$ref: '#/components/schemas/SplitShipment'}
        reversalReasonCode:
          type: string
          maxLength: 22
          description: "Reason the merchant/customer requests for cancel (void).\n\
            \              \nValid Values:\n* VOID\n* TIMEOUT\n* EDIT_ERROR\n* MAC_VERIFICATION_ERROR\n\
            * MAC_SYNCH_ERROR\n* ENCRYPTION_ERROR\n* SYSTEM_ERROR\n* SUSPECTED_FRAUD\n"
          example: VOID
        physicalGoodsIndicator: {type: boolean, description: Identifies if physical
            goods were sold., example: false}
        authorizationSequence:
          type: string
          maxLength: 27
          description: |
            Type of authorization sequence requested.

            Valid Values:
            * AUTHORIZATION_ONLY - (default)
            * AUTHORIZATION_BEFORE_CANCEL
            * CANCEL_BEFORE_AUTHORIZATION
          example: CANCEL_BEFORE_AUTHORIZATION
        createToken: {type: boolean, description: Used to create a token on a charge
            transaction., example: true}
    SplitShipment:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Guides/Split-Shipment.md">Split
        shipment</a> information.
      properties:
        totalCount: {type: integer, maximum: 99, description: Identifies the number
            of shipments if the transaction will contain multiple shipments. Can be
            set during pre-auth or the first post-auth., example: 5}
        finalShipment: {type: boolean, description: Identifies the final shipment.,
          example: false}
    DeviceFingerPrint:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Transaction-Details.md">Device
        fingerprint</a> details for mobile transactions.
      properties:
        provider: {type: string, maxLength: 256, description: Device authentication
            utilized., example: InAuth}
        dataCapture: {$ref: '#/components/schemas/DataCapture'}
        dataStatic: {$ref: '#/components/schemas/DataStatic'}
        dataDynamic: {$ref: '#/components/schemas/DataDynamic'}
    DataCapture:
      x-model-version: 1.0
      description: Data capture details.
      properties:
        rawData: {type: string, maxLength: 256, description: Raw data from the data
            capture., example: aaaaaXREUVZGRlFY...aMV}
        dataEventId: {type: string, maxLength: 256, description: Unique ID for the
            data capture., example: BB8E4E92...Fz1E063113}
        captureTime: {type: string, format: date-time, maxLength: 20, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
    DataStatic:
      x-model-version: 1.0
      description: Static data details.
      properties:
        operatingSystem: {type: string, maxLength: 256, description: Device operating
            system (OS)., example: ANDROID}
        operatingSystemVersion: {type: string, maxLength: 256, description: Device
            operating system (OS) version., example: 5.1.1 Lollipop}
        model: {type: string, maxLength: 256, description: Device model., example: XYX-1}
        type: {type: string, maxLength: 256, description: Device type/name., example: Moto
            G}
        deviceId: {type: string, maxLength: 48, description: MAC of the device originating
            the transaction., example: '00:1B:44:11:3A:B7'}
        javaScriptEnabled: {type: boolean, maxLength: 8, description: Indicates if
            the device has JavaScript enabled., example: 'true'}
        javaEnabled: {type: boolean, maxLength: 8, description: Indicates if the device
            has Java enabled., example: 'true'}
        userAgent: {type: string, description: 'User agent data from the user device,
            truncated to 2048 bytes.', example: 'Mozilla/5.0 (Windows NT 6.1; Win64;
            x64; rv:47.0) Gecko/20100101 Firefox/47.0'}
        locale: {type: string, maxLength: 8, description: Language/Region code of
            user in IETF BCP47 format., example: en-US}
    DataDynamic:
      x-model-version: 1.0
      description: Dynamic data details.
      properties:
        latitude: {type: string, maxLength: 256, description: Cardholder current latitude
            GPS position., example: 13.0827 N}
        longitude: {type: string, maxLength: 256, description: Cardholder current
            longitude GPS position., example: 80.2707 E}
        ipAddress: {type: string, maxLength: 39, description: Device IP address.,
          example: 172.27.37.221}
        captureTime: {type: string, format: date-time, maxLength: 20, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        address: {$ref: '#/components/schemas/Address'}
    Address:
      x-model-version: 1.0
      description: Model for <a href="../docs?path=docs/Resources/Master-Data/Address.md">address</a>
        information.
      properties:
        street: {type: string, maxLength: 256, description: Street address., example: 123
            Main Street}
        houseNumberOrName: {type: string, maxLength: 256, description: 'Secondary
            address information, e.g. house number or name.', example: Apt 213}
        recipientNameOrAddress: {type: string, maxLength: 256, description: 'Tertiary
            address information e.g. recipient name, company name or address.', example: 'ATTN:
            Accounting Dept'}
        city: {type: string, maxLength: 256, description: City or locality., example: Sandy
            Springs}
        stateOrProvince: {type: string, maxLength: 256, description: State or province.,
          example: GA}
        postalCode: {type: string, maxLength: 10, description: ZIP code or postal
            code., example: 30303-0001}
        country: {type: string, maxLength: 256, description: 'ISO-3166-1 alpha-2,
            alpha-3, numeric or full country name.', example: US}
        addressHistory:
          type: string
          maxLength: 32
          description: |
            Update history of the address on file.

            Valid Values:
            * FIRST
            * LESS_THAN_30_DAYS
            * 30_60_DAYS
            * 60_90_DAYS
            * OVER_90_DAYS
          example: OVER_90_DAYS
    TransactionInteraction:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Transaction-Interaction.md">Transaction
        interaction</a> information based on where the transaction is acquired and
        the capabilities of the terminal or software.
      properties:
        origin:
          type: string
          maxLength: 4
          description: |
            The source of the transaction.

            Valid Values:
            * ECOM - Card not present (email, web, or mobile app)
            * MOTO - Mail order or telephone order
            * POS - Card present (retail face to face)
          example: ECOM
        posEntryMode:
          type: string
          maxLength: 22
          description: |
            An identifier used to indicate how the account number was entered on the transaction.

            Valid Values:
            * UNSPECIFIED - Default
            * MANUAL - Key entered
            * BARCODE - Barcode scan
            * OCR - Optical Character Reader
            * ICR_RELIABLE - Integrated Circuit Read (CVV data Reliable)
            * ICR_UNRELIABLE - Integrated Circuit Read (CVV data unreliable)
            * CONTACTLESS – Contactless Integrated Circuit Read (Reliable)
            * CONTACTLESS_MOBILE – Contactless Mobile Commerce or Discover InApp
            * CONTACTLESS_MAG_STRIPE – Contactless Magnetic Stripe Read
            * AMEX_WALLET - Amex Digital Wallet
            * MASTERCARD_REMOTE_CHIP – Mastercard remote chip entry
            * CREDENTIAL_ON_FILE – Credential on File
            * EMV_FALLBACK – EMV fallback to manual entry
            * EMV_FALLBACK_MAG - EMV fallback to Magnetic Strip entry
            * EMV_SWITCHED - EMV Transaction switched from Contactless to Contact entry
            * MAG_STRIPE – Magnetic Stripe - Track Read
          example: MANUAL
        posConditionCode:
          type: string
          maxLength: 26
          description: |
            An identifier used to indicate the transaction condition at the Point-of-Sale (POS).

            Valid Values:
            * CARD_PRESENT - Cardholder Present, Card Present
            * CARD_PRESENT_UNSPECIFIED – Cardholder Present, Unspecified
            * CARD_PRESENT_UNATTENDED – Cardholder Present, Unattended Device
            * CARD_PRESENT_FRAUD – Cardholder Present, Suspect Fraud
            * CARD_PRESENT_MAG_NOT_READ – Cardholder Present, Magnetic Stripe Could Not Be Read
            * CARD_PRESENT_IDENTIFIED - Cardholder Present, Identity Verified
            * CARD_NOT_PRESENT_RECURRING – Cardholder Not Present – Recurring
            * CARD_NOT_PRESENT_F2F - Cardholder Present, Card Not Present, Face 2 Face
            * CARD_NOT_PRESENT_MOTO – Cardholder Not Present, Mail Order/Telephone Order
            * CARD_NOT_PRESENT_ECOM – Cardholder Not Present, E-commerce
          example: CARD_NOT_PRESENT_ECOM
        responseCode: {type: string, description: Response data.}
        posData: {type: string, description: ' '}
        mobileInteraction:
          type: string
          maxLength: 12
          description: |
            Mobile method of interaction.

            Valid Values:
            * PHONE_NUMBER - Invoice received by phone number
            * QR_CODE - Invoice paid by scanning QR Code
          example: PHONE_NUMBER
        terminalEntryCapability: {type: string, description: ''}
        cardholderAuthenticationMethod: {type: string, description: ''}
        eciIndicator:
          type: string
          maxLength: 17
          description: "Electronic Commerce Indicator (ECI) is mandatory for all E-commerce\
            \ transactions.\n  \nValid Values:\n* SECURE_ECOM - Secure Electronic\
            \ Transaction\n* NON_AUTH_ECOM - Non-Authenticated Electronic Commerce\
            \ Transaction\n* CHANNEL_ENCRYPTED - Channel Encrypted Transaction\n*\
            \ NON_SECURE_ECOM - Non-Secure Electronic Commerce Transaction\n"
          example: SECURE_ECOM
        additionalPosInformation: {$ref: '#/components/schemas/AdditionalPosInformation'}
        attendedTerminalData: {type: string}
        terminalLocation: {type: string}
        cardholderActivatedTerminalInformation: {type: string}
        cardPresentAtPosIndicator: {type: string}
    AdditionalPosInformation:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Additional-POS-Info.md">Additional
        terminal</a> or software specific information.
      properties:
        posId: {type: string, description: 'Identifies the specific device or point
            of entry where the transaction originated. For example, pump number, lane
            number, terminal number, etc.', example: '1234'}
        cashierId: {type: string, description: Used to uniquely identify the merchant’s
            store cashier or employee accepting the transaction., example: '3456'}
        stan: {type: string, description: 'Contains the System Trace Audit Numbers
            (STAN) returned for a Discover incremental transaction. Note: This field
            has limited platform availability. For more information, please contact
            your account representative.', example: '123456'}
        posFormFactorIndicator: {type: string, description: 'This field is used to
            identify the form factor used at the POS for MasterCard PayPass transactions.
            Note: Some values from 00–19 may indicate not only the physical form factor
            but also other attributes such as device technology and payment app specifications.
            Values from 20–99 exclusively indicate the form factor only without also
            indicating the storage technology.', example: '02'}
        enhancedAuthorizationRequestIndicator: {type: string, description: ''}
        dataEntrySource:
          type: string
          maxLength: 32
          description: |
            Channel the consumer used to initiated transaction.

            Valid Values:
            * MOBILE_APP
            * MOBILE_WEB
            * BROWSER_PC
            * KIOSK
            * CONSOLE
            * 3DS_REQUESTOR_INITIATED
        transactionQualifier: {type: string, description: Used for Discover - Discover
            TransactionQualifier.}
        enhancedAuthorizationResponseIndicator: {type: string, description: Returns
            the authorization type (full or partial).}
        attendedTerminalData: {type: string, description: ''}
        cardPresentIndicator: {type: string, description: ''}
        terminalLocation: {type: string, description: ''}
        cardholderActivatedTerminalInformation: {type: string, description: ''}
        posHardwareAndSoftware: {$ref: '#/components/schemas/PosHardwareAndSoftware'}
        posFeatures: {$ref: '#/components/schemas/PosFeatures'}
    PosHardwareAndSoftware:
      x-model-version: 1.0
      description: Terminal hardware and software information.
      properties:
        hardwareVendorIdentifier: {type: string, description: 'Hardware vendor identifier
            assigned by Chase merchant services at time of certification, represented
            in ASCII HEX.'}
        softwareIdentifier: {type: string, description: 'Software Identifier assigned
            by Chase merchant services at time of certification, represented in ASCII
            HEX.'}
        hardwareSerialNumber: {type: string, description: 'Serial number of hardware
            device. The hardware serial # can be left-justified, space-filled.', example: V1234567}
        softwareApplicationName: {type: string, description: Name of software application.}
        softwareReleaseDate: {type: string, format: date, description: 'Date software
            was released, in YYYY-MM-DD format.', example: '2022-05-21'}
        softwareVersionNumber: {description: EPROM or version information related
            to the terminal software., type: string}
    PosFeatures:
      x-model-version: 1.0
      description: Terminal or software feature information.
      properties:
        hostProcessingPlatform: {type: string, description: Indicates which system
            is being used by the payment application and to what extent it is being
            used., example: TAS}
        messageFormatSupport: {type: string, description: Indicates which message
            format the application uses to communicate with the Chase merchant services
            PNS Host.}
        emvSupport: {type: string, description: Indicates the payment brands supported
            by the application for EMV processing. Required for any application that
            supports EMV processing.}
        peripheralInformation1: {type: string, description: Indicates the type of
            peripheral device attached to or being used by the payment application
            or point of sale device. Only the highest level of support should be indicated
            unless multiple devices are attached.}
        peripheralInformation2: {type: string, description: Reserved for future use.}
        communicationInformation1: {type: string, description: Indicates the methods
            of communication supported by the payment application. It is possible
            for an application to support more than one type of communication at a
            time., example: DIAL}
        communicationInformation2: {type: string, description: Reserved for future
            use.}
        industryInformation1: {type: string, description: Indicates the industries
            supported by the payment application. More than one industry can be indicated.}
        industryInformation2: {type: string, description: Reserved for future use.}
        classAndComplianceCertification: {type: string, description: 'Indicates the
            type of application or device sending the transaction, Class A or Class
            B.', example: A}
        otherCapabilities: {type: string, description: 'Indicates whether the transaction
            originated from a mobile device that uses Chase merchant services’ mobile
            payment gateway or originated from a device that does not use Chase merchant
            services’ Mobile Payment Gateway. Note: It is required for merchants to
            send the appropriate information in this element in the case where a mobile
            terminal is supported.'}
    MerchantDetails:
      x-model-version: 1.0
      description: Used to pass <a href="../docs?path=docs/Resources/Master-Data/Merchant-Details.md">merchant</a>
        specific data during the transaction.
      properties:
        tokenType: {type: string, maxLength: 64, description: Specific token type
            assigned to the merchant., example: TRANSARMOR}
        storeId: {type: string, maxLength: 1024, description: An optional outlet ID
            for clients that support multiple stores in the same app., example: '12345'}
        siteId: {type: string, maxLength: 1024, description: The location ID or number
            used to identify the unique site and merchant., example: CA123456}
        terminalId: {type: string, maxLength: 1024, description: 'Identifies the specific
            device or point of entry where the transaction originated. For example:
            pump number, lane number, terminal number, etc.', example: '12'}
        merchantId: {type: string, maxLength: 16, description: A unique ID used to
            identify the merchant. The merchant must use the value assigned by the
            acquirer., example: '1234567890123456'}
        alternateMerchantId: {type: string, maxLength: 16, description: 'Alternate
            ID assigned to a merchant based on a value added service (Prepaid Cards,
            TeleCheck, etc.). For additional information regarding the Alternate Merchant
            ID, please contact your account representative.', example: '12345678'}
        promotionCode: {type: string, maxLength: 1024, description: Promotion code.,
          example: ABCD1234}
        mcc: {type: string, maxLength: 4, description: The merchant category code
            (MCC) is an industry standard four-digit number used to classify a business
            by the type of goods or services it provides., example: '4457'}
    ProcessorResponseDetails:
      x-model-version: 1.0
      description: Contains the <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md">processor
        response</a> details.
      properties:
        approvalStatus: {type: string, description: Final status of the transaction.,
          example: APPROVED}
        approvalCode: {type: string, description: Approval code from the processor.,
          example: OK3483}
        authenticationResponseCode: {type: string, description: Response code from
            authentication.}
        referenceNumber: {type: string, description: Transaction reference number.,
          example: 845366457890-TODO}
        schemeTransactionId: {type: string, description: Brand transaction ID., example: '019078743804756'}
        networkOriginalAmount: {type: number, maximum: 1.0E18, description: Network
            original amount, example: '100.50'}
        feeProgramIndicator: {type: string, description: Contains the Fee Program
            Indicator (FPI) code that may be returned on Debit or PLDebit transaction
            response., example: '123'}
        processor: {type: string, maxLength: 256, description: Card processor., example: fiserv}
        responseCode: {type: string, description: Normalized transaction response
            code from the gateway (Commerce Hub Response)., example: '00000'}
        responseMessage: {type: string, description: Normalized transaction message
            from the gateway (Commerce Hub Response)., example: APPROVAL}
        hostResponseCode: {type: string, description: Endpoint or issuer response
            code., example: '00'}
        hostResponseMessage: {type: string, description: Endpoint or issuer response
            message., example: APPROVAL}
        localTimestamp: {type: string, format: date-time, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        bankAssociationDetails: {$ref: '#/components/schemas/BankAssociationDetails'}
    BankAssociationDetails:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md#bank-association-details">Bank
        association</a> response details.
      properties:
        associationResponseCode: {type: string, maxLength: 32, description: Bank response
            code., example: '000'}
        transactionTimestamp: {type: string, format: date-time, maxLength: 64, description: 'Timestamp
            in ISO 8601 format YYYY-MM-DDThh:mm:ssZ', example: '2016-04-16T16:06:05Z'}
        transactionReferenceInformation: {type: string, maxLength: 256, description: Transaction
            reference information., example: ''}
        avsSecurityCodeResponse: {$ref: '#/components/schemas/AvsSecurityCodeResponse'}
    AvsSecurityCodeResponse:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md#address-and-security-code-response">Address
        and Security Code</a> verification response details.
      properties:
        streetMatch: {type: string, maxLength: 8, description: AVS street address
            result message., example: MATCH}
        postalCodeMatch: {type: string, maxLength: 8, description: AVS postal code
            result message., example: MATCH}
        securityCodeMatch: {type: string, maxLength: 8, description: Security code
            result message., example: MATCH}
        association: {$ref: '#/components/schemas/Association'}
    Association:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Processor-Response-Details.md#association-response">Bank
        association</a> security response details.
      properties:
        avsCode: {type: string, maxLength: 32, description: Bank AVS response code.,
          example: YY}
        securityCodeResponse: {type: string, maxLength: 32, description: Bank security
            code response., example: M}
        cardholderNameResponse: {type: string, maxLength: 32, description: 'Cardholder
            name response, if supported by card type.', example: '1'}
    NetworkDetails:
      x-model-version: 1.0
      description: Contains the authorization <a href="../docs?path=docs/Resources/Master-Data/Network-Details.md">network
        response</a> details.
      properties:
        partialAuthDetails: {$ref: '#/components/schemas/PartialAuthDetails'}
        network: {type: string, maxLength: 64, description: Processing card network.,
          example: VISA}
        debitNetworkId: {type: string, maxLength: 64, description: Network ID for
            the debit component., example: '123456'}
        transactionSequence: {type: string, maxLength: 64, description: Transaction
            specific data that may be returned in response messages., example: '1123456'}
        systemTrace: {type: string, maxLength: 64, description: Original trace number
            that was returned in an authorization response., example: '123456789'}
        authorizationCharacteristicsIndicator:
          type: string
          maxLength: 23
          description: |
            Code used for qualification in the Custom Payment Service (CPS) program as defined by Visa. Upon evaluation, the code may be changed in the response message if provided by Visa.

            Valid Values:
            * CARD_NOT_PRESENT – Card not present trasaction (preferred customer only e.g. Lodging or Auto Rental)
            * INCREMENT – Incremental Authorization
            * REQUEST_PARTICIPATION – Transaction requests participation
            * CARD_NOT_PRESENT_NO_AVS – Card not present, AVS not required
          example: CARD_NOT_PRESENT
        VISABID: {type: string, maxLength: 128, description: The Business Identifier
            (BID) provided by Visa to Third Party Servicers (TPS)., example: ''}
        VISAAUR: {type: string, maxLength: 128, description: Agent Unique Account
            Result (AUAR) provided by Visa to Third Party Servicers (TPS) in 12 hex
            digit format., example: 12345AD89012}
        networkResponseCode: {type: string, maxLength: 16, description: Debit network
            response code., example: '00'}
    PartialAuthDetails:
      x-model-version: 1.0
      description: Partial authorization response details.
      properties:
        interchangeComplianceIndicator: {type: string, description: A code to indicate
            that Mastercard interchange compliance data was provided for this transaction
            and if any other special Mastercard authorization requirements were met.,
          example: A}
        bankNetRefNumber: {type: string, description: A Mastercard generated identifier
            for each original authorization request. Reference number assigned by
            Mastercard to each authorization message., example: ''}
        bankNetDate: {type: string, format: date, description: A Mastercard generated
            date for this transaction in YYYY-MM-DD format., example: '2022-05-21'}
        cvcIndicator: {type: string, description: Indicates the CVC response data.,
          example: Y}
        partialAuthTransactionId: {type: string, description: Generated identifier
            unique for each original authorization request., example: ''}
        validationCode: {type: string, description: A code calculated by Visa to ensure
            that the fields present in the authorization are also present in the clearing
            record., example: ''}
        totalAuthAmount: {type: string, description: Total amount authorized., example: '1.00'}
        downgradeReason: {type: string, description: Downgrade reason as supplied
            by Visa., example: ACCOUNT_NUMBER_MISSING}
        creditAuthType: {type: string, description: Indicates the type of authorization
            required., example: DISCOVER}
        authScore: {type: string, description: The auth score returned for the transaction.,
          example: ''}
    StoredCredentials:
      x-model-version: 1.0
      description: Used to initiate an initial or subsequent <a href="../docs?path=docs/Resources/Guides/Stored-Credentials.md">stored
        credentials</a> transaction.
      properties:
        scheduled: {type: boolean, description: Indicator if this is a scheduled transaction.,
          example: true}
        initiator:
          type: string
          maxLength: 11
          description: |
            Indicates whether it is a merchant-initiated or explicitly consented to by card holder.

            Valid Values:
            * MERCHANT
            * CARD_HOLDER
          example: MERCHANT
        sequence:
          type: string
          maxLength: 10
          description: |
            Indicates if the transaction is first or subsequent.

            Valid Values:
            * FIRST
            * SUBSEQUENT
            * SINGLE
          example: FIRST
        schemeReferenceTransactionId: {type: string, maxLength: 256, description: The
            transaction ID received from the issuer for the initial transaction. May
            be required if sequence is subsequent., example: '54231235467'}
        networkOriginalAmount: {type: number, maximum: 1.0E18, description: 'Original
            transaction amount, required for Discover card on file transactions.',
          example: '9.66'}
        originationDate: {type: string, format: date, maxLength: 10, description: 'Date
            the customer account was created with merchant, in YYYY-MM-DD format.',
          example: '2020-11-20'}
        accountAge:
          type: string
          maxLength: 32
          description: "Indicator on the age of customer account with merchant.\n\n\
            Valid Values: \n* GUEST\n* NEW_ACCOUNT\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n\
            * 60_90_DAYS\n* OVER_90_DAYS\n"
          example: 'GUEST '
        count: {type: integer, description: Number of cards on file with this account.,
          example: '1'}
        lastUpdated:
          type: string
          maxLength: 32
          description: "Age of most recent card add/modify.\n\nValid Values: \n* NEVER\n\
            * NOW\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n* Over 60 DAYS\n"
          example: NEVER
        age:
          type: string
          maxLength: 32
          description: "Indicator on the age of this payment card on file with merchant.\n\
            \  \nValid Values: \n* GUEST\n* NEW_ACCOUNT\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n\
            * 60_90_DAYS\n* OVER_90_DAYS\n"
          example: GUEST
        attempts: {type: integer, description: Number of attempts to add a payment
            card in prior 24 hours., example: '1'}
        accountPasswordReset:
          type: string
          maxLength: 32
          description: "Indicator of the last time the account password was reset.\n\
            \nValid Values: \n* NEVER\n* NOW\n* LESS_THAN_30_DAYS\n* 30_60_DAYS\n\
            * 60_90_DAYS\n* OVER_90_DAYS\n"
          example: 'NEVER '
        sixMonthTransactionCount: {type: integer, description: Number of transaction
            on this account in prior 6 months., example: '5'}
        twentyFourHourTransactionCount: {type: integer, description: Number of transaction
            on this account in prior 24 hours., example: '1'}
        retryAttempts: {type: integer, description: Number of retry attempt if the
            initial transaction was unsuccessful., example: '0'}
    CancelResponse:
      x-model-version: 1.0
      properties:
        gatewayResponse: {$ref: '#/components/schemas/GatewayResponse'}
        transactionDetails: {$ref: '#/components/schemas/TransactionDetails'}
        source: {$ref: '#/components/schemas/Source'}
        merchantDetails: {$ref: '#/components/schemas/MerchantDetails'}
        paymentReceipt: {$ref: '#/components/schemas/PaymentReceipt'}
        transactionBatch: {$ref: '#/components/schemas/TransactionBatch'}
        networkDetails: {$ref: '#/components/schemas/NetworkDetails'}
    PaymentReceipt:
      x-model-version: 1.0
      description: <a href="../docs?path=docs/Resources/Master-Data/Payment-Receipt.md">Payment
        receipt</a> response details.
      properties:
        approvedAmount: {$ref: '#/components/schemas/Amount'}
        processorResponseDetails: {$ref: '#/components/schemas/ProcessorResponseDetails'}
        merchantName: {type: string, maxLength: 1024, description: Name of the merchant
            returned from boarded account or dynamic descriptor.}
        merchantAddress: {type: string, maxLength: 1024, description: Street address
            of the merchant returned from boarded account or dynamic descriptor.}
        merchantCity: {type: string, maxLength: 256, description: City of the merchant
            returned from boarded account or dynamic descriptor.}
        merchantStateOrProvince: {type: string, maxLength: 256, description: State
            or Province of the merchant returned from boarded account or dynamic descriptor.}
        merchantCountry: {type: string, maxLength: 256, description: Country of the
            merchant returned from boarded account or dynamic descriptor.}
        merchantURL: {type: string, maxLength: 256, description: Merchant URL returned
            from boarded account.}
        merchantPostalCode: {type: string, maxLength: 10, description: Postal code
            of the merchant returned from boarded account or dynamic descriptor.}
